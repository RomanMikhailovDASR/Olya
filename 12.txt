ИНФРАСТРУКТУРА ЭЛЕКТРОННОГО ПРАВИТЕЛЬСТВА




















Методические рекомендации по работе 
с Единой системой 
межведомственного электронного взаимодействия
версия 3.5.0.14












Москва 2021
 
Содержание
I.	Введение	4
1.	Общие сведения	4
1.1.	Порядок подачи материала	4
1.2.	Номер версии документа	4
1.3.	Нормативно-правовые основания	5
2.	Сведения транзакционные и справочные	6
2.1.	ЕСНСИ самый доступный способ обмена/распространения сведений	6
2.2.	Когда следует использовать СМЭВ?	6
3.	Метаданные и ЛК УВ.	8
3.1.	Протоколы обмена (виды сведений)	8
II.	СМЭВ. Базисное описание	10
4.	Проектирование протокола обмена (вида сведений)	10
4.1.	СМЭВ-артефакты и Руководство пользователя	10
4.2.	Порядок проектирования	10
4.3.	Состав сеанса обмена	10
4.4.	СМЭВ-документы	11
4.5.	Режим обмена	15
4.6.	Маршрутизация	16
4.7.	Нормативы формирования ответных сообщений	30
4.8.	Пропускная способность отвечающей стороны	30
4.9.	Укороченный идентификатор протокола обмена (вида сведений)	31
4.10.	Организация очередей	32
III.	СМЭВ. Углубленное описание	34
5.	Использование СМЭВ	34
5.1.	Проектирование протокола обмена (вида сведений)	34
5.2.	Единый сервис СМЭВ	47
5.3.	Организация очередей	86
5.4.	Интенсивность обращений информационной системы Участника взаимодействия к методам Единого сервиса	91
6.	Использование электронной подписи	92
6.1.	Виды электронных подписей	92
6.2.	Порядок использования электронных подписей	92
6.3.	Правила формирования ЭП	97
6.4.	Электронные подписи субъектов взаимодействия - физических лиц	98
6.5.	Электронные подписи субъектов взаимодействия - информационных систем	100
7.	Пересылка вложений с использованием файлового хранилища	104
8.	Возврат статусных сообщений	108
9.	Использование системы генерации кодов транзакции	108
9.1.	Сервис предоставления кодов транзакций	108
10.	Использование push-нотификаций	113
10.1.	Описание сервиса приёма push-уведомлений	113
11.	Использование клиентской библиотеки и набора «TOOLSET»	118
12.	Использование Адаптера СМЭВ3.Х	118
IV.	Приложения	119
Приложение А.	АЛГОРИТМ трансформации XML	119
Приложение Б.	Результат трансформации urn://smev-gov-ru/xmldsig/transform	124
Приложение В.	Профиль формата PKCS#7, которому должны удовлетворять подписи вложенных файлов	129
Приложение Г.	Образцовая реализация трансформации URN://SMEV-GOV-RU/XMLDSIG/TRANSFORM	130
Приложение Д.	Сценарии тестирования алгоритма нормализации XML	138
Д.1.	Проверка 1: тестирование шага 1	138
Д.2.	Проверка 2: тестирование шага 2	138
Д.3.	Проверка 3: тестирование шага 3	138
Д.4.	Проверка 4: тестирование шага 4	139
Д.5.	Проверка 5: тестирование шагов 5 и 6	139
Д.6.	Проверка 6: тестирование шагов 7 и 8 алгоритма прансформации	139
Д.7.	Проверка 3: тестирование шага 9	140
Приложение Е.	Перечень ошибок, возвращаемых транспортной подсистемой СМЭВ	141
Приложение Ж.	Формирование видов сведений с включением справочников	142
Приложение З.	Описание набора «toolset»	143
З.1.	Состав набора	143
З.2.	Требования к ПО для запуска набора	144
З.3.	Порядок запуска утилит набора	144
З.4.	Установочная конфигурация	145
З.5.	Описание входных и выходных параметров	149
Приложение И.	Термины и сокращения	159
Приложение К.	История изменений	162
Приложение Л.	Заявка на публикацию справочника ЕСНСИ для проведения контроля ссылочной целостности передаваемых справочных данных	171
Приложение М.	Схемы единого сервиса СМЭВ3.Х	172
М.1.	Версия 1.1	172
М.2.	Версия 1.2	172
М.3.	Версия 1.3	173

I.	Введение
1.	Общие сведения 
Настоящий документ описывает правила и приёмы использования возможностей инфраструктуры электронного правительства (далее, ИЭП), которые позволяют участникам межведомственного взаимодействия (далее, УВ) решать задачи передачи сведений между информационными системами (далее, ИС УВ). 
Содержание документа следует рассматривать в дополнение к требованиям приказа Министерства цифрового развития, связи и массовых коммуникаций Российской Федерации от 23 июня 2015 г. № 210 «Об утверждении технических требований к взаимодействию информационных систем в единой системе межведомственного электронного взаимодействия».
1.1.	Порядок подачи материала 
Материал в документе изложен в порядке возрастания требований к технической компетенции читателя. 
Первые две части, «Введение» и «СМЭВ. Базисное описание» ориентированы на читателей, которым достаточно представлять себе возможности СМЭВ на понятийном уровне, без технических подробностей. 
Третья и четвертая части, соответственно «СМЭВ. Углубленное описание» и «Приложения», повторяют содержание предыдущих частей, но ставят своей целью дать исчерпывающий материал, достаточный для решения конкретных технических задач, связанных с использованием СМЭВ.
1.2.	Номер версии документа
Номер версии документа формируется по шаблону A.X.Y.Z, где:
A – номер версии единой системы межведомственного электронного взаимодействия;
X – номер поколения документа. Изменение данного номера означает значительные изменения в структуре и содержании документа;
Y – номер основного релиза документа в рамках поколения. Документ может содержать освещение новых и/или незначительную переработку содержащихся в предыдущей версии документа тем. Плановая подготовка основного релиза документа осуществляется раз в квартал. Основные релизы утверждаются Подкомиссией по использованию информационных технологий при предоставлении государственных и муниципальных услуг Правительственной комиссии по внедрению информационных технологий в деятельность государственных органов и органов местного самоуправления;
Z – номер технологического релиза в рамках основного релиза. Может содержать в себе стилистические, редакционные, незначительные технические изменения. Данный тип релизов выпускается по необходимости и не проходит специализированной процедуры утверждения Подкомиссией по использованию информационных технологий при предоставлении государственных и муниципальных услуг Правительственной комиссии по внедрению информационных технологий в деятельность государственных органов и органов местного самоуправления.
1.3.	Нормативно-правовые основания
Данный документ разработан в целях реализации и во исполнение:
	федерального закона от 27 июля 2010 г. № 210-ФЗ «Об организации предоставления государственных и муниципальных услуг»;
	федерального закона от 6 апреля 2011 г. № 63-ФЗ «Об электронной подписи»; 
	постановления Правительства Российской Федерации от 9 февраля 2012 года № 111 «Об электронной подписи, используемой органами исполнительной власти и органами местного самоуправления при организации электронного взаимодействия между собой, о порядке ее использования, а также об установлении требований к обеспечению совместимости средств электронной подписи»;
	постановления Правительства Российской Федерации от 8 сентября 2010 г. № 697 «О единой системе межведомственного электронного взаимодействия»;
	приказа Министерство цифрового развития, связи и массовых коммуникаций Российской Федерации от 23 июня 2015 г. № 210 «Об утверждении технических требований к взаимодействию информационных систем в единой системе межведомственного электронного взаимодействия»;
	а также в рамках реализации:
	соглашений о взаимном признании электронных подписей, заключённых между Минцифрой России и федеральными органами исполнительной власти.
	соглашений о взаимодействии при обеспечении оказания (исполнения) государственных (муниципальных) услуг (функций) федеральными органами исполнительной власти, заключённых между Минцифрой России и федеральными органами исполнительной власти.
 
2.	Сведения транзакционные и справочные
Сведения, которые являются предметом межведомственного обмена, делятся на две категории: транзакционные и справочные. Обмен транзакционными сведениями обеспечивает система межведомственного электронного взаимодействия (далее – СМЭВ, для удобства – в мужском роде). Распространение справочных сведений обеспечивает Единая система нормативной справочной информации (далее – ЕСНСИ).
2.1.	ЕСНСИ самый доступный способ обмена/распространения сведений
СМЭВ и ЕСНСИ предназначены для решения одной задачи - распространение сведений. При этом «барьеры для входа», которые УВ должен преодолеть, чтобы начать использовать указанные системы, а также стоимость самого использования – различны. В общем случае, проще и дешевле распространять сведения посредством ЕСНСИ. В отличие от СМЭВ, ЕСНСИ не требует обязательной программной интеграции (а, следовательно, и затрат на разработку и последующую эксплуатацию разработанного интеграционного механизма) между собой и ИС УВ.
Действия, связанные с опубликованием сведений и их дальнейшим распространением, в ЕСНСИ, могут осуществляться исключительно пользователем, в «ручном» режиме (см. «Руководство пользователя ЕСНСИ», размещённое на портале https://nsi.gosuslugi.ru в разделе «Нормативно-справочные документы по Системе»). При этом наличие специального пользовательского опыта не требуется, как от пользователей – представителей УВ (владельцев распространяемых сведений), так и для сотрудников УВ (инициаторов взаимодейтсвия по данным сведениям). 
Таким образом, чтобы начать использовать ЕСНСИ в ручном режиме, достаточно лишь выполнить несложные организационные процедуры (см. главную страницу портала ЕСНСИ https://nsi.gosuslugi.ru).
2.2.	Когда следует использовать СМЭВ?
Вместе с тем, практика межведомственного обмена показывает, что ручной режим распространения сведений, пригоден не для всех категорий сведений. Ограничениями выступают такие факторы как изменчивость и необходимость контроля доступа. 
2.2.1.	Изменчивость сведений
Сведения, которые их владелец намерен распространять через ЕСНСИ, могут изменяться настолько интенсивно, что процесс их ручной перепубликации будет организовать невозможно.
Типичный пример - сведения о доступности временных интервалов (т.н. таймслоты) приёма граждан в РЭО ГИБДД. Изменения таймслотов могут быть инициированы миллионами пользователей портала «Госуслуг». В этих условиях вручную организовать регулярную публикацию в ЕСНСИ изменений сведений о доступных таймслотах невозможно практически. 
С другой стороны, если степень изменчивости сведений низкая (не превышает одного раза в сутки), то для их распространения, с учётом, отсутствия необходимости контролировать доступ к ним (см. п.2.2.2), ЕСНСИ использоваться может.
2.2.2.	Необходимость контроля доступа
Вторым фактором, который может сделать невозможным использование ЕСНСИ, является вопрос о строгости правил доступа к распространяемым сведениям. Не каждая категория сведений, с одной стороны, может распространяться путём передачи всего массива экземпляров данных сведений; и, с другой стороны, без оглядки на то, кем является их получатель.
Например, сведения о составе учредителей юридического лица не могут распространяться путём передачи всего массива экземпляров данных сведений, каждый из которых содержит информацию об одном зарегистрированным юридическом лице. При этом часть сведений о юридическом лице не может передаваться без обязательного предварительного получения согласия со стороны физических лиц, информация о которых предполагается к распространению.
То есть, если характер сведений предполагает какую-либо проверку доступа к ним, использование ЕСНСИ для их распространения невозможно. 
2.2.3.	Справочные сведения
Таким образом, справочными являются сведения с низкой степенью изменчивости и без ограничений доступа к ним.
Справочные сведения должны распространяться исключительно с использованием ЕСНСИ.
2.2.4.	Транзакционные сведения
Сведения с высокой изменчивостью и/или имеющие правила доступа к ним, называются транзакционными и должны распространяться посредством СМЭВ.
Распространение справочных сведений через СМЭВ запрещено.
 
3.	Метаданные и ЛК УВ.
Подсистема СМЭВ  «Личный кабинет Участника взаимодействия» (ЛК УВ) используется в организациях при осуществлении деятельности, связанной с межведомственным взаимодействием для оказания государственных и муниципальных услуг, исполнения функций в электронном виде.
Пользователями системы являются участники межведомственного электронного взаимодействия (сотрудники государственных внебюджетных фондов, а также подведомственных государственных, муниципальных учреждений и другие), представители подрядных организаций участников взаимодействия, персонал оператора ИЭП (администраторы, операторы).
Подробнее с перечнем возможностей, реализованных в ЛК УВ, можно ознакомиться в «Руководстве пользователя» (ссылка на документ)
3.1.	Протоколы обмена (виды сведений)
СМЭВ предназначен для того, чтобы обеспечивать различные процессы взаимодействия между участниками межведомственного обмена. Каждый конкретный процесс взаимодействия представляет собой последовательность сеансов обмена сведениями (далее – сеансы обмена). При этом, каждый сеанс обмена реализуется как серия взаимосвязанных единичных передач сведений через СМЭВ (далее – СМЭВ-передачи). 
Набор правил, в соответствии с которым должны осуществляться СМЭВ-передачи сеансов обмена в рамках данного процесса, называется протоколом обмена или видом сведений.
Указанные правила описания вида сведений разделяются на общеобязательные и специфичные. 
Общеобязательные правила задают параметры сообщения в целом, и не зависят от специфики передаваемых сведений.  
В частности, общеобязательные правила определяют:
	структуру всего сообщения; 
	требования к формированию блоков, содержащих электронную подпись; 
	требования к формированию элементов, используемых для маршрутизации сообщения;
	и т.д.
Общеобязательные правила устанавливаются оператором СМЭВ, и описаны далее в настоящем документе. 
Специфичные правила определяют параметры, которым должно удовлетворять СМЭВ-сообщение при обмене между конкретным Инициатором и Ответчиком. 
Вводимые этими правилами ограничения задают требования к форматам тех блоков СМЭВ-сообщения, в которых содержатся:
	описания допустимых вариантов обращений за сведениями;
	описания вариантов ответов на обращения за сведениями.   
Специфичные правила для вида сведений определяются одной из сторон обмена – либо Инициатором, либо их Ответчиком.  

3.1.1.	Этапы жизненного цикла протокола обмена (вида сведений)
Жизненный цикл конкретного протокола обмена в СМЭВ представляет собой последовательную смену следующих этапов:
1.	Проектирование протокола обмена;
2.	Разработка / доработка ИС УВ под требования протокола обмена;
3.	Аттестация технической готовности ИС УВ использовать протокол обмена (вид сведений);
4.	Обмен сведениями по протоколу обмена;
5.	Вывод протокола обмена из эксплуатации.
	Назначение и содержание каждого из перечисленных выше этапов раскрывается в пункте 4.
 
II.	СМЭВ. Базисное описание
4.	Проектирование протокола обмена (вида сведений)
Процесс проектирования протокола обмена (вида сведений) представляет собой последовательную фиксацию ответов на вопросы, которые определяют конкретные параметры обработки (процессинга) исходных сообщений в рамках сеансов обмена по проектируемому протоколу (виду сведений).  Результатом проектирования протокола обмена (вида сведений) является набор СМЭВ-артефактов и «Руководство пользователя протокола обмена (вида сведений)».
4.1.	СМЭВ-артефакты и Руководство пользователя 
СМЭВ-артефакты это файлы машино- и человекочитаемого формата, которые содержат, однозначно интерпретируемые СМЭВ параметры конкретного протокола обмена (вида сведений). 
«Руководство пользователя» описывает правила использования протокола обмена (вида сведений), а также для фиксирует те его параметры, которые не вошли в состав сведений, передаваемых в СМЭВ-артефактах, и предназначены для сотрудников СЭ. 
4.2.	Порядок проектирования 
В ходе проектирования протокола обмена (вида сведений) необходимо принять следующие решения:
1.	Определить состав сеанса обмена;
2.	Описать СМЭВ-документы;
3.	Выбрать режим обмена;
4.	Выбрать маршрутизацию;
5.	Определить нормативы формирования ответных сообщений;
6.	Определить пропускную способность отвечающей стороны. 
4.3.	Состав сеанса обмена 
Сеанс обмена – это завершённый с прикладной точки зрения, акт обмена сведениями с использованием СМЭВ, осуществлённый с учётом набора правил и ограничений, зарегистрированных в СМЭВ, и называемых протоколом обмена или видом сведений данного сеанса обмена.  
4.3.1.	Максимальное количество ответных СМЭВ-передач
Каждый сеанс обмена реализуется как серия взаимосвязанных единичных передач сведений через СМЭВ (далее, СМЭВ-передачи).  
Каждый сеанс обмена начинается с одной инициирующей СМЭВ-передачи – отправки исходного сообщения от системы – отправителя.  
Реакциями на инициирующую СМЭВ-передачу являются ответные СМЭВ-передачи.  Ответные СМЭВ-передачи также представляют собой отправки исходных сообщений, только уже со стороны систем-получателей в адрес системы-отправителя.  
Максимальное количество ответных СМЭВ-передач может варьироваться в диапазоне от одной до нескольких, и должно быть определено в ходе проектирования протокола обмена (вида сведений).   
4.3.2.	Привязка СМЭВ-документов к СМЭВ-передачам
Полезной нагрузкой каждого исходного сообщения, передаваемого как в инициирующих, так и в ответных СМЭВ-передачах являются СМЭВ-документы. СМЭВ-документ – это составная часть каждого исходного сообщения, которая является непосредственным носителем сведений, ради обмена которыми и организуется взаимодействие. 
В ходе проектирования протокола обмена (вида сведений) каждый СМЭВ-документ должен быть закреплён за исходным сообщением либо инициирующей, либо одной из ответных СМЭВ-передач сеанса обмена. 
СМЭВ-документы, которые привязаны к инициирующей передаче – называются инициирующими СМЭВ-документами. 
СМЭВ-документы, которые привязаны к ответной передаче называются – ответными СМЭВ-документам. 
Протокол обмена (вид сведений), для каждого ответного СМЭВ-документа может определять один и только один инициирующий СМЭВ-документ.
Одновременное использование СМЭВ-документа, и в качестве инициирующего, и в качестве ответного запрещено.  
Протокол обмена может включать в себя несколько инициирующих СМЭВ-документов.  
Такой протокол обмена (вид сведений) называется многовариантным, а каждая комбинация инициирующего СМЭВ-документа и связанных с ним ответных СМЭВ-документов называется вариантом обращения по протоколу обмена (виду сведений).
4.4.	СМЭВ-документы 
СМЭВ-документ всегда содержит СМЭВ-заголовок, и может включать в себя несколько СМЭВ-вложений.
4.4.1.	СМЭВ-заголовок
Основным носителем сведений СМЭВ-документа является СМЭВ-заголовок.  Для каждого СМЭВ-документа, в ходе проектирования протокола обмена, должен быть определён формат СМЭВ-заголовка. 
4.4.1.1.	Обязательный форматный контроль СМЭВ-заголовков
В отношении каждого СМЭВ-заголовка, передаваемого в составе СМЭВ-документа исходного сообщения, СМЭВ осуществляет обязательный форматный контроль.  Операция форматного контроля представляет собой сопоставление двух форматов: формата СМЭВ-заголовка фактически переданного в СМЭВ в составе исходного сообщения, и формата СМЭВ-заголовка,  заранее зарегистрированного в СМЭВ в составе определённого протокола обмена (вида сведений).  
Если в результате указанного сопоставления окажется, что формат фактически полученного СМЭВ-заголовка исходного сообщения не соответствует ни одному зарегистрированному в СМЭВ формату СМЭВ-заголовков для данного протокола обмена (вида сведений), обработка данного исходного сообщения прекратится.
4.4.1.2.	Элементы формата СМЭВ-заголовка
Формат СМЭВ-заголовка представляет собой описание совокупности элементов формата СМЭВ-заголовка (далее, элемент формата). Указанная совокупность элементов формата организована иерархически. Описание каждого элемента формата состоит из двух частей.  
Первая часть - обязательная, содержит сведения о местоположении данного элемента относительно других элементов этого же формата. 
Вторая часть - опциональная, определяет диапазон допустимых значений (далее, тип элемента), того фрагмента сведений, который предполагается передавать в данном элементе формата.  Элемент формата, в описание которого, включена эта часть, является непосредственным носителем передаваемых сведений данного формата (далее, элементы-носители).   
4.4.1.3.	Язык описания формата СМЭВ-заголовка
Языком описания формата СМЭВ-заголовка является язык XML Schema. Диапазон приёмов использования данного языка для нужд СМЭВ ограничен. Перечень указанных ограничений приведён в документе «Требования к XML-схемам».  
4.4.1.4.	Директивные и простые протоколы обмена (виды сведений) 
Директивными называются протоколы обмена (виды сведений), в которых предполагается передача исходных сообщений, с форматами СМЭВ-заголовков, разработанными с учётом дополнительных (помимо требований, изложенных в документе «Требования к XML-схемам») форматных правил. 
Указанные форматные правила частично предопределяют структуру элементов формата СМЭВ-заголовка, что позволяет расширить диапазон возможностей, которые может предоставить СМЭВ при обработке соответствующего исходного сообщения.
Для простых протоколов обмена доступны следующие возможности:
1.	возможность передачи структурированных вложений (см. п. 4.4.2);

Значительная часть возможностей СМЭВ, использование которых, существенно снижает стоимость разработки и последующей эксплуатации ИС УВ, доступна исключительно для директивных протоколов обмена (видов сведений).  К числу указанных возможностей, относятся следующие:
1.	возможность передачи структурированных вложений с проведением ФЛК вложения (см. п. 4.4.2);
2.	маршрутизация «Реестровая по коду маршрутизации» (см. п. 4.6.2.3);
3.	маршрутизация «Общая реестровая по мнемоникам» (см. п. 4.6.2.4);
4.	маршрутизация «Реестровая по мнемоникам» (см. п. 4.6.2.5);
5.	маршрутизация «Целиковая рассылка» (см. п. 4.6.3.1);
6.	маршрутизация «Фрагментарная (по идентификаторам) рассылка» (см. п. 4.6.3.2).
Использование директивных протоколов обмена (видов сведений) является предпочтительной, магистральной для СМЭВ, практикой.  Использование недирективных, протоколов обмена, так называемых простых, рассматривается как практика устаревшая, и дальнейшее развитие СМЭВ для поддержки этой практики осуществляться не будет.  
4.4.2.	СМЭВ-вложения
4.4.2.1.	Основания для использования СМЭВ-вложений
Основаниями для использования СМЭВ-вложений в составе СМЭВ-документа являются две причины.  
4.4.2.1.1.	Неструктурированные вложения
Основной причиной, по которой допустимо использовать СМЭВ-вложения в составе СМЭВ-документа является необходимость передавать сведения в файлах, форматы которых:
	определяются требованиями разработчиков стороннего программного обеспечения, без применения которого непосредственное использование сведений из данных файлов невозможно;
	включены в список форматов данных, которые могут быть переданы в сети Интернет с применением стандарта MIME.

Указанные файлы в СМЭВ называются неструктурированными вложениями.  

4.4.2.1.2.	Структурированные вложения более 5 МБ
Второй причиной, по которой следует использовать СМЭВ-вложения, является следующая ситуация:
	формат сведений, которые предполагается передавать в СМЭВ-документе, определяет владелец протокола обмена; 
	этот протокол обмена директивный;
	существуют подтверждённые расчётами основания полагать, что средний размер сведений, которые будут передаваться в составе исходных сообщений проектируемого протокола обмена, будет превышать установленное технологическое ограничение. 

Данное технологическое ограничение СМЭВ запрещает передавать в СМЭВ-заголовках исходных сообщений сведения размер, которых превышает 5 МБ (общий объем СМЭВ-заголовка не должен превышать 5МБ).  
4.4.2.2.	Обязательный контроль СМЭВ-вложений
В отношении каждого СМЭВ-вложения, передаваемого в составе СМЭВ-документа исходного сообщения, СМЭВ осуществляет обязательный форматный контроль.  Операция форматного контроля представляет собой сопоставление двух форматов: формата СМЭВ-вложения, фактически переданного в СМЭВ в составе исходного сообщения, и формата СМЭВ-вложения, который описан в паспорте вложения и зарегистрирован в СМЭВ в составе определённого протокола обмена (вида сведений).  
Если в результате указанного сопоставления окажется, что формат фактически полученного СМЭВ-вложения исходного сообщения не соответствует ни одному зарегистрированному в СМЭВ паспорту вложений для данного протокола обмена, обработка данного исходного сообщения прекратиться.  
4.4.2.3.	Паспорт вложения
Паспорт вложений определяет значения общих параметров, которым должно соответствовать данное СМЭВ-вложение: минимальный и максимальный размеры файла СМЭВ-вложения, признак передачи вложения в сжатом виде, MIME-тип и др.  
Для случая использования структурированного СМЭВ-вложения размером более 5 МБ (общий объем СМЭВ-заголовка и передаваемого вложения превышает 5МБ), в ходе проектирования паспорта вложения должен быть также определён формат СМЭВ-вложения.  
4.4.2.3.1.	Элементы формата структурированного СМЭВ-вложения
Формат структурированного СМЭВ-вложения представляет собой описание совокупности элементов формата СМЭВ-вложения (далее, элемент формата). Указанная совокупность элементов формата организована иерархически. Описание каждого элемента формата состоит из двух частей.  
Первая часть – обязательная, содержит сведения о местоположении данного элемента относительно других элементов этого же формата. 
Вторая часть – опциональная, определяет диапазон допустимых значений (далее, тип элемента), того фрагмента сведений, который предполагается передавать в данном элементе формата.  Элемент формата, в описание которого, включена эта часть – является непосредственным носителем передаваемых сведений данного формата (далее, элементы-носители).   
4.4.2.3.2.	Язык описания формата СМЭВ-вложения
Языком описания формата структурированного СМЭВ-вложения является язык XML Schema. Диапазон приёмов использования данного языка для нужд СМЭВ ограничен. Перечень указанных ограничений приведён в документе «Требования к XML-схемам».  

4.5.	Режим обмена
В ходе проектирования протокола обмена, необходимо определить, в каком из двух режимов будут проходить сеансы обмена сведениями.
4.5.1.	Запрос-ответ
В режиме «запрос-ответ», стороной, инициирующей передачи, является система-инициатор, которая формирует исходное сообщение, называемое сообщение-запрос. Пассивной стороной обмена является система-ответчик, которая в ходе ответных передач формирует исходные сообщения, называемые сообщениями-ответами.
4.5.2.	Рассылка
В режиме «рассылка» система-издатель инициирует передачу сообщением-рассылкой, а содержащиеся в ней СМЭВ-документы, получают системы-подписчики, каждая из которых в ходе ответных передач может сформировать в ответ одно или несколько сообщений-квитанций.

Существенным отличием режимов друг от друга является зависимость содержимого инициирующего сообщения (сообщения-запроса, сообщения-рассылки) от того, кому оно адресовано.  В режиме «запрос-ответ» эта зависимость высокая.  Содержание сообщения-запроса, во многом определяется исходя из того, какая система-ответчик его получит.  Системе-инициатору важно сообщить именно это, именно этой системе-ответчику. В режиме «рассылки», напротив, зависимость содержания сообщения-рассылки от его будущего адресата – низкая. Системе-издателю достаточно «просто высказаться». 
Режим «запрос-ответ», с точки зрения спектра возможностей, которые он позволяет задействовать, является самым востребованным. Однако существуют случаи, когда использование этого режима крайне неэффективно. В первую очередь, это относится к ситуациям, когда одна из сторон обмена желает узнавать о фактах изменения экземпляров сведений, размещённых на второй стороне, и при этом с минимально возможной временной задержкой. Используя режим «запрос-ответ» достигнуть этого условия можно исключительно путём зондажа, то есть, регулярной отправки сообщений-запросов с содержанием типа: «Есть ли новости?». Реакцией на это будут сообщения-ответы, определённая доля которых будет содержать печальную констатацию: «Ничего нового нет». Практика показывает, что доля таких сообщений может составлять десятки процентов от суммарного количества сеансов обмена. Поэтому использование режима «запрос-ответ» для случаев, когда нужно как можно раньше узнавать о «новостях», крайне неэффективно, как с точки зрения достижения заявленной цели, так и с точки зрения утилизации задействованных вычислительных ресурсов. 
Для указанных случаев следует использовать режим «рассылка».

4.6.	Маршрутизация
4.6.1.	СМЭВ-передача
Единицей полезной работы СМЭВ является СМЭВ-передача одного или сразу нескольких СМЭВ-документов от системы-отправителя, в адрес одной или сразу нескольких систем-получателей.
В ходе СМЭВ-передачи, СМЭВ-документы сначала перемещаются из системы-отправителя в СМЭВ, а затем уже из СМЭВ передаются системе-получателю. Переход ответственности за транспортировку имеет место дважды. Сначала ответственность переходит от системы-отправителя к СМЭВ, затем из СМЭВ в систему-получателя. Неизбежным следствием этого перехода является необходимость подтверждения принимающей стороной целостности передаваемых в её ответственность СМЭВ-документов. В этой связи СМЭВ-документы передаются внутри «опечатанных» при помощи электронной подписи СМЭВ-конвертов. 
Таким образом, в начале СМЭВ-передачи, СМЭВ-документы размещаются в СМЭВ-конверте, который подписывается системой-отправителем. Всё это образует исходное сообщение.
Затем копии СМЭВ-документов из исходного сообщения переносятся в один или несколько СМЭВ-конвертов, каждый из которых подписывается СМЭВ. Созданные таким образом сообщения называются сообщениями-клонами. 
Сообщения-клоны размещаются внутри СМЭВ, в специальном выделенном для данной системы-получателя, месте. Это место называется очередь. 
Система-получатель извлекает очередное сообщение-клон из своей очереди, проверяет целостность его СМЭВ-конверта и уведомляет СМЭВ о том, что СМЭВ-конверт, переданного ей сообщения-клона сохранен. Претензии к его целостности отсутствуют. 
СМЭВ удаляет сообщение-клон из очереди системы-получателя. Передача закончилась.
Подробности организации очередей приведены в разделе 4.10.

4.6.1.1.	Жизненный цикл сообщений
4.6.1.1.1.	Жизненный цикл сообщения типа «Запрос»
Жизненный цикл сообщения типа «Запрос» в СМЭВ представлен на рисунке 1.
 
Рисунок 1 – сообщения типа «Запрос»
4.6.1.1.2.	Жизненный цикл сообщения типа «Ответ»
Жизненный цикл сообщения типа «Ответ» в СМЭВ представлен на рисунке 2.
 
Рисунок 2 – сообщения типа «Ответ»

4.6.2.	Маршрутизации режима «запрос-ответ»
Маршрутизации режима «запрос-ответ» делятся на две группы:
	Маршрутизации, в результате которых создаётся одно и только одно сообщение-клон;
	Маршрутизации, в результате которых может быть создано несколько сообщений-клонов.
4.6.2.1.	Фиксированная маршрутизация
Содержимое каждого сообщения-запроса полностью копируется в единственное сообщение-клон, которое размещается в очереди единственной возможной системы-ответчика. Система-ответчик определена для каждого сообщения-запроса, передаваемого в рамках данного протокола обмена, при регистрации протокола обмена в СМЭВ3. Схематично, фиксированная маршрутизация представлена на рисунке 3.
 
Рисунок 3 – Схема фиксированной маршрутизации

4.6.2.2.	Табличная маршрутизация
Перечень (таблица) возможных систем-ответчиков (далее, Перечень возможных ответчиков) для каждого протокола обмена (вида сведений) ведётся в СМЭВ, и каждый его пункт содержит:

•	указание на систему-ответчика, в адрес которой может быть направлено сообщение-запрос в рамках данного протокола обмена (вида сведений);
•	значение кода маршрутизации. 
Код маршрутизации – это составная часть СМЭВ-документа, которая передаётся в сообщениях-запросах. Код маршрутизации в сообщении заполняется и передается внутри передаваемых сведений в соответствии с требованиями вида сведений с табличной маршрутизацией. СМЭВ в сообщении определяет код маршрутизации по xpath-выражению. Xpath-выражение передается для регистрации в СМЭВ в заявке на регистрацию вида сведений с табличной маршрутизацией.
Пример запроса по приведенной схеме вида сведений:
<?xml version="1.0" encoding="UTF-8"?>
<ns1:TestRegionalRoutingRequest xmlns:ns1="urn://geo/tabl/1.0.0">
     <ns1:RegionCode>71000000</ns1:RegionCode>
     <ns1:RequestContent>Запрос</ns1:RequestContent>
</ns1:TestRegionalRoutingRequest>
Пример xpath-выражения, указывающего место в структуре передаваемого запроса «TestRegionalRoutingRequest» где содержится код маршрутизации «RegionCode»: 
/*[local-name()="TestRegionalRoutingRequest"]/*[local-name()="RegionCode"]/text()

Сопоставляя его значение с Перечнем возможных ответчиков, СМЭВ определяет единственную систему-ответчика. В её очереди размещается сообщение-клон, содержимое которого полностью соответствует содержимому исходного сообщения-запроса.
Перечень возможных ответчиков изменяется через обращение в СЭ.
Схематично, табличная маршрутизация представлена на рисунке 4.
 
Рисунок 4 – Схема табличной маршрутизации

4.6.2.3.	Реестровая маршрутизация по коду маршрутизации
Сообщение-запрос содержит реестр, который, в общем случае, состоит из нескольких СМЭВ-документов.
По каждому СМЭВ-документу, решение о том, в адрес какой единственной системы-ответчика будет направлена его копия, принимается отдельно. Система-ответчик для данного СМЭВ-документа определяется по коду маршрутизации на основании Перечня доступных ответчиков. Копия одного СМЭВ-документа может быть направлена одной и только одной системе-ответчику.
Чтобы использовать эту маршрутизацию, в ходе проектирования протокола обмена (вида сведений), необходимо также определить инструкцию поиска кода маршрутизации в СМЭВ-документе.
Перечень возможных ответчиков изменяется через обращение в СЭ.
Схематично, реестровая маршрутизация по коду маршрутизации представлена на рисунке 5.
 
Рисунок 5 – Схема реестровая маршрутизация по коду маршрутизации

4.6.2.4.	Общая реестровая маршрутизация по мнемоникам
Содержимое каждого сообщения-запроса полностью копируется в сообщения-клоны, которые размещается в очереди систем-ответчиков. Список мнемоник систем-ответчиков, в адрес которых, будут направлены сообщения-клоны, содержится в исходном сообщении-запросе. Каждая из указанных систем-ответчиков включена в Перечень возможных ответчиков для данного протокола обмена (вида сведений).
Перечень возможных ответчиков изменяется через обращение в СЭ.
Схематично, общая реестровая маршрутизация по мнемоникам представлена на рисунке 6.
 
Рисунок 6 – Схема общей реестровой маршрутизации по мнемоникам

4.6.2.5.	Реестровая маршрутизация по мнемоникам
Сообщение-запрос содержит реестр, который, в общем случае, состоит из нескольких СМЭВ-документов. 
По каждому СМЭВ-документу, решение о том, в адрес каких систем-ответчиков будет направлена его копия, принимается отдельно. То есть, содержимое каждого СМЭВ-документа из сообщения-запроса может быть адресовано сразу нескольким системам-ответчикам. 
Список мнемоник систем-ответчиков, в адрес которых будут направлены копии данного СМЭВ-документа, содержится в исходном сообщении-запросе.
Схематично, реестровая маршрутизация по мнемоникам представлена на рисунке 7.
 
Рисунок 7 – Схема реестровой маршрутизации по мнемоникам

4.6.3.	Маршрутизации режима «рассылка»
Результатом всех маршрутизаций, которые поддерживает СМЭВ для режима «рассылка», в общем случае, являются несколько сообщений-клонов.
4.6.3.1.	Целиковая маршрутизации рассылки
Содержимое каждого сообщения-клона представляет собой полную копию содержимого сообщения-рассылки. Содержимое из сообщения-рассылки целиком передаётся в сообщения-клоны. Сообщения-клоны размещаются в очередях системы-подписчиков, которые определяются по Перечню подписчиков. Перечень подписчиков ведётся в СМЭВ для каждого протокола обмена с данной маршрутизацией.
Схематично, целиковая маршрутизация рассылки представлена на рисунке 6.
 
Рисунок 8 – Схема целиковой маршрутизация рассылки

4.6.3.2.	Общая маршрутизация рассылки (По идентификаторам)
Содержимое каждого сообщения-запроса полностью копируется в сообщения-клоны, которые размещается в очереди систем-получателей рассылки. Список мнемоник систем-подписчиков, в адрес которых, будут направлены сообщения-клоны, содержится в исходном сообщении-запросе. Каждая из указанных систем-подписчиков включена в Перечень возможных подписчиков для данного протокола обмена (вида сведений).
Схематично, общая маршрутизация рассылки по идентификаторам представлена на рисунке 9.
 
Рисунок 9– Схема целиковой маршрутизация рассылки

4.6.3.3.	Фрагментарная маршрутизация (По идентификаторам)
Фрагментарная маршрутизация (По идентификаторам) позволяет создать ситуацию, когда в адрес систем-подписчиков, в общем случае, передаются копии лишь некоторых СМЭВ-документов из сообщения - рассылки. Содержимое сообщения-рассылки передается системам-подписчикам не целиком, а фрагментарно. 
Системе-издателю важно и достаточно опубликовать очередное реестровое сообщение-рассылку, а вопрос о том, в адрес каких систем-подписчиков будут переданы копии конкретных СМЭВ-документов, должен решить сам СМЭВ. При этом связующим звеном между конкретным СМЭВ-документом и системами-подписчиками, в адрес которых должна быть направлена его копия, являются значения идентификаторов объектов рассылки (далее, Идентификаторы).
Схематично, фрагментарная маршрутизация рассылки представлена на рисунке 10.

 
Рисунок 10 – Схема фрагментарной маршрутизация рассылки

4.6.3.3.1.	Идентификатор объекта рассылки
Под объектом рассылки понимается осязаемый или умозрительный объект реального мира, экземпляры которого могут быть однозначно идентифицированы. Сведения о фактах, которые связаны с экземплярами объекта рассылки, могут распространяться в режиме «рассылка».
Например, общеизвестными объектами рассылки, для целей рассматриваемой маршрутизации являются:
	юридические лица;
	физические лица;
	здания и сооружения;
	документы, удостоверяющие личность;
	транспортные средства.
Идентификаторами для указанных объектов рассылки могут служить соответственно:
	основной государственный регистрационный номер юридического лица (далее, ОГРН);
	основной государственный регистрационный номер индивидуального предпринимателя (далее, ОГРНИП);
	адресный код из Федерального информационного адресной системы (далее, ФИАС-код); 
	серия и номер паспорта гражданина;
	номер государственного регистрационного знака транспортного средства
При этом объектами рассылки могут, по соглашению взаимодействующих сторон, быть также признаны и любые другие объекты реального мира. Главное, чтобы все взаимодействующие стороны одинаково сопоставляли значения идентификаторов объектов рассылок с самими объектами.
Например, Центральная избирательная комиссия (далее, ЦИК) может опубликовать в ЕСНСИ справочник - перечень всех избирательный участков, каждая запись из которого будет содержать назначенное самой ЦИК значение идентификатора для конкретного участка и его физический адрес. Ведомства - подписчики на рассылку о ходе голосования, по этому справочнику участков, имеют возможность сопоставить получаемые в рассылках от ЦИК сведения с конкретными адресными объектами – месторасположениями избирательных участков.
4.6.3.3.2.	Порядок маршрутизации
Сообщение-рассылка содержит реестр, который, в общем случае, состоит из нескольких СМЭВ-документов. По каждому СМЭВ-документу, решение о том, в адрес каких систем-подписчиков будет направлена его копия, принимается отдельно. То есть, содержимое каждого СМЭВ-документа из сообщения-рассылки может быть адресовано сразу нескольким системам-подписчикам. 
Определение систем-подписчиков, в адрес которых должна быть направлена копия данного СМЭВ-документа, выполняется путем сопоставления двух списков. Первый список – перечень значений Идентификаторов, который содержится в данном СМЭВ-документе. Второй список – перечень значений Идентификаторов, который размещён в Хранилище идентификаторов для данного протокола обмена (вида сведений).
4.6.3.3.3.	Хранилище (идентификаторов)
Хранилище значений идентификаторов объектов рассылки (далее, Хранилище) ведётся в СМЭВ для каждого протокола обмена (вида сведений) с фрагментарной маршрутизацией. Каждая запись Хранилища (далее, подписка) содержит соответствие между системой-подписчиком и конкретным значением Идентификатора.
Для оформления подписки необходимо направить заявку в СЦ.

4.6.3.3.4.	Пример фрагментарной рассылки
Предполагается регулярная рассылка реестра СМЭВ-документов, каждый из которых содержит сведения о фактах присвоения или изменения классов опасности производственных помещений (см. 116-ФЗ от 21.07.1997) и включает в себя следующие описательные атрибуты:
	Дата присвоения / изменения класса опасности;
	Новый класс опасности;
	Основания для изменения класса опасности;
	Описание производственного помещения;
	ФИАС-код производственного помещения;
	ОГРН органа государственной власти, присвоившего новый класс опасности для производственного помещения (далее, ОГРН ОГВ);
	ОГРН юридического лица (далее, ОГРН ЮЛ) – владельца производственного помещения;
	ОГРНИП – владельца производственного помещения, индивидуального предпринимателя.
ФИАС – код, ОГРН ОГВ, ОГРН ЮЛ, ОГРН ИП – общеизвестные идентификаторы объектов рассылок: авторитетная ссылка, которая указывает на адресную информацию промышленного помещения; два указателя на записи реестра юридических лиц; указатель на запись реестра индивидуальных предпринимателей.
Значение одного из указанных идентификаторов в привязке к конкретной системе-подписчику и будет являться отдельной подпиской Хранилища для данного протокола обмена. Часть Хранилища для рассматриваемого гипотетического протокола обмена «Рассылка изменений по классам опасностей» может выглядеть следующим образом:
№ подписки	Система-подписчик	Значение идентификатора	Примечание
1	АИС «Периметр»	1082468041611	Идентификатор объекта рассылок - ОГРН ОГВ 
«МИНИСТЕРСТВО ОБРАЗОВАНИЯ КРАСНОЯРСКОГО КРАЯ»
2	АИС «Периметр»	1082468039763	Идентификатор объекта рассылок - ОГРН ОГВ
 «МИНИСТЕРСТВО КУЛЬТУРЫ КРАСНОЯРСКОГО КРАЯ»
3	АИС «МинПромТорг»	1022402651677	Идентификатор объекта рассылок - ОГРН ЮЛ
АКЦИОНЕРНОЕ ОБЩЕСТВО "КОНДИТЕРСКО-МАКАРОННАЯ ФАБРИКА "КРАСКОН"
4	АИС «МинПромТорг»	1082468041611	Идентификатор объекта рассылок - ОГРН ОГВ 
«МИНИСТЕРСТВО ОБРАЗОВАНИЯ КРАСНОЯРСКОГО КРАЯ»
5	АИС «МинЖКХ»	1072450001117	Идентификатор объекта рассылок - ОГРН ЮЛ
«ООО «ЖКХ АБАНСКОГО РАЙОНА»
6	АИС «Командор-Ритейл»	bf364cf7-52e1-4e0f-9dd3-d4c344197559	Идентификатор объекта рассылок – ФИАС-код
ООО «КОМАНДОР-РИТЕЙЛ» Красноярский край, г Зеленогорск, ул Песчаная, д 2
7	АИС «Периметр»	bf364cf7-52e1-4e0f-9dd3-d4c344197559	Идентификатор объекта рассылок – ФИАС-код
ООО «КОМАНДОР-РИТЕЙЛ» Красноярский край, г Зеленогорск, ул Песчаная, д 2
8	АИС «МинТранс»	312774618400682	Идентификатор объекта рассылок - ОГРНИП
ИП «Иванов Иван Иванович»
Список систем-подписчиков, в адрес которых будет направлена копия данного СМЭВ-документа, определяется путём сопоставления списков значений Идентификаторов, которые передаются в сообщении-рассылке и значений Идентификаторов, которые указаны в подписках для данного протокола обмена в Хранилище.
Например, СМЭВ-документ сообщения-рассылки содержит следующий список значений идентификаторов: «1082468041611», «bf364cf7-52e1-4e0f-9dd3-d4c344197559». Тогда в результате сопоставления списков Идентификаторов, СМЭВ установит, что рассматриваемый СМЭВ-документ будет доставлен следующим системам-подписчикам:
	АИС «Периметр», потому что в Хранилище существует подписка №1 («1082468041611») и №7 («bf364cf7-52e1-4e0f-9dd3-d4c344197559»)
	АИС «МинПромТорг», потому что в Хранилище существует запись №4 («1082468041611»)
	АИС «Командор-Ритейл», потому что Хранилище существует запись №6 («bf364cf7-52e1-4e0f-9dd3-d4c344197559»)

 
4.7.	Нормативы формирования ответных сообщений
Ответными для режима «запрос-ответ» называются сообщения-ответы, а для режима «рассылка» - сообщения-квитанции.
 В отношении ответных сообщений, для проектируемого протокола обмена (вида сведений) являются следующие нормативы:
1.	Разрешённое максимальное количество ответных сообщений;
2.	Максимальный период формирования первого сообщения-ответа;
3.	Максимальная продолжительность сеанса обмена.
4.7.1.	Разрешённое максимальное количество ответных сообщений
Данный параметр определяет максимально допустимое правилами данного протокола обмена (вида сведений) количество ответных сообщений. 
Его значение для режима «запрос-ответ», то есть применительно к сообщениям-ответам, не может быть меньше одного.
Для режима «рассылка» количество сообщений-квитанций может быть равным и больше нуля.
4.7.2.	Максимальный период формирования первого сообщения-ответа
Данный параметр устанавливает максимальный временной интервал между следующими двумя моментами времени.
Первый – момент размещения клона исходного сообщения (сообщения-запроса или сообщения-рассылки) в очереди системы – получателя (системы-ответчика или системы-издателя).
Второй – момент получения СМЭВ ответного сообщения (сообщения-ответа или сообщения-квитанции) от отправителя ответа. 
4.7.3.	Максимальная продолжительность сеанса обмена
Данный параметр устанавливает максимальный временной интервал между следующими двумя моментами времени.
Первый – момент размещения клона исходного сообщения (сообщения-запроса или сообщения-рассылки) в очереди системы-получателя (системы-ответчика или системы-издателя).
Второй – момент получения СМЭВ первого ответного сообщения (сообщения-ответа или сообщения-квитанции) от отправителя ответа с признаком, указывающим на то, что данное сообщение является последним в данном сеансе обмена (далее, терминальное ответное сообщение).
4.8.	Пропускная способность отвечающей стороны
Интенсивность сеансов обмена в рамках проектируемого протокола (вида сведений) имеет объективные ограничения. 
В режиме «запрос-ответ» она ограничена пропускной способностью системы-ответчика. Поэтому для протокола обмена по режиму «запрос-ответ» должны быть определены следующие параметры:
Максимальное количество клонов исходных сообщений-запросов, которые должна извлекать из своей очереди система-ответчик за:
	1 секунду; 
	1 сутки.
Интенсивность опроса очередей устанавливается УВ самостоятельно в зависимости от интенсивности поступления сообщений и изменяется динамически.
Количество извлечённых сообщений из очереди ИС УВ в единицу времени и количество сообщений, поступивших в очередь ИС Участника, должно быть одинаковым.   
Квота на максимально допустимое количество сообщений во входящих очередях ИС устанавливается при регистрации ИС УВ. Рекомендуемое значение квоты (устанавливается по умолчанию) составляет 1000 сообщений. Данное значение сохраняется также при подключении специальных очередей по версии протоколов обмена (мультиочереди).
При достижении максимального количества сообщений в очереди ИС УВ отправитель сообщения получит ошибку «Очередь, в которую должно быть отправлено сообщение, переполнена». УВ берет на себя обязательства по своевременному получению сообщений из очередей. Для изменения длины очереди, установленной по умолчанию, УВ должен обратиться с заявкой в СЦ, изложив в ней обоснование в необходимости изменения квоты для ИС.
4.9.	Укороченный идентификатор протокола обмена (вида сведений)
Для упрощения коммуникаций в ходе исполнения регламентных процедур введён укороченный идентификатор версии протокола обмена (вида сведений). Идентификатор присваивается автоматически при регистрации протокола обмена в СМЭВ3.Х.
Укороченный идентификатор имеет следующую структуру:
1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19
«V»	«S»	9	9	9	9	9	9	9	9	A0	A0	A0	A0	A0	A0	A0	A0	A0
где:
	Разряды 1-2: 
	содержат фиксированный набор символов «VS», указывающий на протокол обмена (вид сведения) СМЭВ3.Х.
	Разряды 3-7:
	содержат глобально уникальный идентификатор протокола обмена;
	используются только цифровые символы из диапазона [0-9].
	Разряды 8-10:
	содержат идентификатор версии протокола обмена, уникальный в контексте идентификатора протокола обмена;
	используются только цифровые символы из диапазона [0-9].
	Разряды 11-14:
	содержат глобальный уникальный идентификатор ответчика ВС, в ситуации, когда ответчика ВС невозможно однозначно определить, содержат символы «TABL»;
	используются только символы из диапазонов [A-Z] и [0-9],
	Разряды 15-16:
	содержат идентификатор информационной системы участника, в ситуации, когда владелец ВС и ответчик не одно лицо, содержат: «00».
	Разряды 17-19:
	резервные разряды, могут быть незаполненными.
4.10.	Организация очередей
Все очереди сообщений в СМЭВ являются входящими. Все сообщения, которые отправляют ИС, попадают в очереди входящих сообщений, закреплённые за получателями (ИС). 
При этом очереди СМЭВ предназначены, прежде всего, для решения технологических задач: буферизация сообщений на время проведения предусмотренных СМЭВ проверок, а также вынужденных кратковременных прерываний в работе ИС УВ, связанных с техническими работами. Решение прикладных задач, связанных с приоритезацией обработки сообщений, помещённых в очередь, их критериальной фильтрацией и других, рекомендуется выполнять на стороне ИС УВ.
Очереди входящих сообщений делятся на очереди входящих запросов и очереди входящих ответов на запросы.
В очередь входящих запросов попадают запросы по всем протоколам обмена (далее – виды запросов), а в очередь входящих ответов на запросы – ответы по всем протоколам обмена (далее – виды ответов), а также статусные сообщения, сформированные СМЭВ.
 
Рисунок 11 – Организация очередей в СМЭВ
Для ИС УВ по заявке могут быть выделены специальные очереди (очередь запросов и очередь ответов) по одному или нескольким версиям протоколам обмена (мультиочереди), в которые СМЭВ будет помещать сообщения, относящиеся к выбранной версии протокола обмена. Распределение сообщений по очередям осуществляется СМЭВ в автоматическом режиме по признаку прокола обмена (корневому элементу), передаваемому в сообщениях. 
Срок хранения сообщений в очереди запросов ИС и в очереди ответов ИС составляет 15 календарных дней. В случае если сообщение не будет получено ИС получателя в течение указанного срока, то СМЭВ данное сообщение переведёт в архив с формированием статусного сообщения категории «messageIsArchived» (сообщение, получение которого не подтверждено получателем, переведено в архив) (раздел 5.2.6), которое помещается в очередь доставки ответов ИС отправителя и ИС получателя. Участникам, не получившим ответ на запрос в течение указанного срока необходимо направить запрос повторно.
Возможно два сценария выборки сообщения из очереди входящих сообщений: с фильтрацией и без фильтрации.
При приёме без фильтрации по протоколу обмена (виду сведений), получатель выберет первое сообщение, имеющееся в очереди входящих сообщений, независимо от того, к какому протоколу обмена оно относится (раздел 5.3.1).
При приёме сообщения с фильтрацией по протоколу обмена (виду сведений) СМЭВ будет искать сообщения в очереди входящих сообщений, относящиеся к запрошенному протоколу обмена, и вернёт первое из них. Если сообщений запрошенного протокола обмена в очереди входящих сообщений нет, СМЭВ не вернёт ничего, даже если в очереди входящих сообщений есть сообщения других протоколов обмена (раздел 5.3.2). При получении сообщения с составным критерием фильтрации (в сообщении указывается протокол обмена и тип сообщения – статусное или ответ по протоколу обмена) СМЭВ осуществляет поиск сообщений, относящихся к выбранному протоколу обмена и имеющих выбранный тип. 
Если по протоколу обмена для ИС УВ выделены специальные очереди, получение сообщений из них может осуществляться только с использованием фильтрации по протоколу обмена. 
Особенностью организации очередей входящих сообщений в СМЭВ является необходимость подтверждения ИС УВ получения сообщения из СМЭВ. Если в течение 15 минут этого не происходит, то сообщение считается недоставленным и возвращается в очередь входящих сообщений.

III.	СМЭВ. Углубленное описание
5.	Использование СМЭВ
5.1.	Проектирование протокола обмена (вида сведений)
Результатом проектирования протокола обмена (вида сведений) является комплект следующих материалов:
	Руководство пользователя;
	Схемы СМЭВ-документов;
	Материалы для аттестации.
5.1.1.	Подготовка руководства пользователя протокола обмена (вида сведений)
Основные настройки протокола обмена:
	Наименование;
	Назначение;
	Содержание;
	Тип маршрутизации - один из возможных способов маршрутизации описан в пункте текущего документа 4.6 Маршрутизация;
	Область применения;
	Версия методических рекомендация (далее – МР);
	Режим обмена;
	Предполагается ли обмен с ЕПГУ.
	Наименование протокола обмена представляет собой имя, позволяющее идентифицировать протокол обмена среди других протоколов.
	Назначение – краткое описание назначения данного протокола обмена.
	Содержание – краткое описание информации, передаваемой посредством данного протокола обмена.
	Область применения – Межведомственное взаимодействие/Приём заявлений с ЕПГУ/Приём заявлений с ЕПГУ или МФЦ.
     Межведомственное взаимодействие – взаимодействие осуществляется между категориями участников, указанных в Регламенте  3.5 «Приложение 3 Правила и процедуры работы в СМЭВ по Методическим рекомендациям версии 3.х» пп. 6.1 Общие положения.
        Приём заявлений с ЕПГУ- единственно возможным инициатором взаимодействия является ИС ЕПГУ.
        Приём заявлений с ЕПГУ или МФЦ. - инициаторами взаимодействия является ИС ЕПГУ или ИС, принадлежащая к категории МФЦ.
	Версия МР – «Методических рекомендаций по работе с Единой системой межведомственного электронного взаимодействия», согласно которым проектировался данный протокол обмена.
	Владелец ВС -  могут выступать участники, указанные в Регламенте версии 3.5 «Приложение 3 Правила и процедуры работы в СМЭВ по Методическим рекомендациям версии 3.х» пп. 10.7 Регистрация Вида сведений в СМЭВ.
	Критерии доступа для участников в роли Инициатора и Ответчика.
	Тип запроса – тип взаимодействия по данному протоколу: запрос-ответ или рассылка.

5.1.2.	Проектирование форматов передаваемых данных
Форматы передаваемых данных (ФПД) разрабатываются Владельцем сведения с использованием языка описания схем данных XML Schema Definition (XSD) и должны соответствовать следующим правилам:
	Для каждого протокола обмена один из элементов СМЭВ-заголовка, описанных на корневом уровне схемы, должен представлять собой «элемент запроса», содержащий бизнес-данные запроса или рассылки;
	Для каждого протокола обмена, один из элементов СМЭВ-заголовка, описанных на корневом уровне схемы, должен представлять собой «элемент ответа», содержащий бизнес-данные ответа;
	Для каждого протокола обмена корневой элемент запроса, и корневой элемент ответа должны быть описаны в одной схеме (иметь одно и то же пространство имен схемы). При этом схема может быть разбита на несколько XML-документов (конструкция xs:include), а также ссылаться на другие XML-схемы (конструкция xs:import);
	Для директивных протоколов обмена необходимо включать в состав элементов, описанных на корневом уровне схемы, специализированные инструкции, содержащие директивы для процессинга СМЭВ;
	Для директивных протоколов обмена в состав форматов передаваемых данных необходимо включать схемы СМЭВ-вложений;
XML схемы протоколов обмена, причём как СМЭВ-заголовков, так и СМЭВ-вложений, регистрируемые в СМЭВ, должны удовлетворять требованиям документа «Требования к XML-схемам, регистрируемым в СМЭВ».
ИС участников взаимодействия в теле электронных сообщений должны поддерживать применение блоков и элементов данных, а также электронных подписей, описанных в данном документе. Использование других блоков и элементов, отличных от описанных в данном документе, не допускается.
Целевое пространство имён (target namespace) любой схемы, используемой в СМЭВ, должно быть глобально уникально.
Чтобы облегчить соблюдение этого требования, в СМЭВ каждому ОИВ – Владельцу данных должен присваиваться базовый URI. Все схемы, регистрируемые в СМЭВ этим Владельцем данных, должны иметь target namespace, начинающиеся с базового URI этого Владельца. Таким образом, ответственность за уникальность базовых URI несёт оператор СМЭВ, а Владелец данных отвечает за уникальность target namespace в области действия своего базового URI.
Рекомендуемые правила присвоения target namespace приведены в таблице 1.
Таблица 1– Рекомендуемые правила присвоения target namespace
Объект	Правило	Пример
URI владельца сведений		Базовый URI, начинающийся с символов «urn://».	urn://x-artefacts-data-provider

Версия протокола обмена	Состоит из следующих частей, разделённых косой чертой «/»:
	базовый URI Владельца сведений; 
	наименование протокола обмена;
	номер версии протокола сведений.	urn://x-artefacts-data-provider/protex/1.0.0

СМЭВ-вложение	Состоит из следующих частей, разделённых косой чертой «/»:
	базовый URI Владельца сведений;
	наименование протокола обмена;
	символы «attachments»;
	наименование вложения
	номер версии протокола обмена, для которой предназначено данное вложение	urn://x-artefacts-data-provider/protex/attachments/increment/1.0.0


В target namespace разрешены только латинские буквы, цифры, символы подчёркивания «_», минус «-», косая черта «/», двоеточие «:», точка «.».
Базовые URI urn://x-artefacts-smev-gov-ru/ и urn://smev-gov-ru/ для именования пространств имён элементов в сообщениях зарезервированы для источника со схемой URN. Использование их в схемах протоколов обмена не допускается.
При необходимости внесения изменений в протокол обмена, в СМЭВ необходимо зарегистрировать новую версию протокола обмена. Чтобы обеспечить корректную маршрутизацию сообщений, соответствующих устаревшим версиям протоколов обмена, в СМЭВ сохраняется полная история всех изменений, включая все предыдущие версии протоколов обмена. 
Для каждой новой версии протокола обмена XML-схема должна иметь target namespace, отличающийся от предыдущих версий, для обеспечения этого требования рекомендуется в target namespace включать номер версии протокола обмена (таблица 1).
5.1.2.1.	Использование шаблонов типовых данных и наборов данных
Использование шаблонов типовых данных и наборов данных осуществляется аналогично использованию атрибутов модели данных УВ. Подробное описание использования приведено в документе «Требования к XML-схемам, регистрируемым в СМЭВ».
5.1.2.2.	Простые форматы передаваемых данных
5.1.2.2.1.	Запрос-ответ
Простой формат передаваемых данных состоит из схемы СМЭВ-заголовка, состоящей из одного, или разнесённой по нескольким файлам. Допустимо использование только одного варианта запроса и связанного с ним варианта ответа.
Бизнес-данные запроса должны описываться одним элементом, расположенным на корневом уровне схемы (рисунок 11). Элементы с наименованиями «family» и «name» даны для примера.
 
Рисунок 12 – Корневой элемент запроса
Бизнес-данные ответа должны описываться одним элементом, расположенным на корневом уровне схемы (рисунок 12). Элементы с наименованиями «family» и «name» даны для примера.
 
Рисунок 13– Корневой элемент ответа
Пример схемы простого протокола обмена (вида сведений):
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-data-provider/protex/1.0.0" xmlns:schema1="urn://x-artefacts-data-provider/schematic/protex/1.0.0" targetNamespace="urn://x-artefacts-data-provider/protex/1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="urn://x-artefacts-data-provider/schematic/protex/1.0.0" schemaLocation="schematic/document.xsd"/>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Бизнес данные-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:element name="Request">
		<xs:annotation>
			<xs:documentation>Корневой элемент запроса</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="family" type="schema1:family"/>
				<xs:element name="name" type="schema1:name"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Response">
		<xs:annotation>
			<xs:documentation>Корневой элемент ответа</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="name" type="schema1:name"/>
				<xs:element name="family" type="schema1:family"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

5.1.2.2.2.	Рассылка
Простой формат передаваемых данных состоит из схемы СМЭВ-заголовка, состоящей из одного, или разнесённой по нескольким файлам. Допустимо использование только одного варианта рассылки.

Бизнес-данные рассылки должны описываться одним элементом, расположенным на корневом уровне схемы (рисунок 13). Элементы с наименованиями «family» и «name» даны для примера.
  
Рисунок 14 – Корневой элемент рассылки
Пример схемы рассылки с использованием простого протокола обмена:
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-data-provider/protex/1.0.0" xmlns:schema1="urn://x-artefacts-data-provider/schematic/protex/1.0.0" targetNamespace="urn://x-artefacts-data-provider/protex/1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="urn://x-artefacts-data-provider/schematic/protex/1.0.0" schemaLocation="schematic/document.xsd"/>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Бизнес данные-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:element name="Broadcast">
		<xs:annotation>
			<xs:documentation>Корневой элемент рассылки</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="family" type="schema1:family"/>
				<xs:element name="name" type="schema1:name"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

5.1.2.3.	Директивные форматы передаваемых данных
Для описания элемента, содержащего директивы, необходимо использовать элемент Registry, описанные в схеме сервиса. Для этого следует с помощью инструкции import определить пространство имён, на компоненты схемы которого ссылается схема текущего протокола обмена:
…
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-data-provider/directive-protex/1.0.0" xmlns:directive="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" xmlns:schema1="urn://x-artefacts-data-provider/schematic/protex/1.0.0" targetNamespace="urn://x-artefacts-data-provider/directive-protex/1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	…
<xs:import namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" schemaLocation="smev-message-exchange-directive-1.2.xsd"/>
…
Затем добавить элементы Request и Response, содержащие директивы, и назначить им ссылку на элемент Registry, описанный в определённом ранее пространстве имён:
...
	<xs:element name="Request">
		<xs:annotation>
			<xs:documentation>Запрос. Реестровый тип данных (для директивных ВВС)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="directive:Registry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Response">
		<xs:annotation>
			<xs:documentation>Ответ. Реестровый тип данных (для директивных ВВС)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="directive:Registry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
...
5.1.2.3.1.	Запрос-ответ
Директивный формат передаваемых данных состоит из схемы СМЭВ-заголовка и необязательных СМЭВ-вложений, передаваемых в запросе или ответе, состоящей из одного, или разнесённой по нескольким файлам. Допустимо использование только одного варианта запроса и связанный с ним вариант ответа.

В составе корневых элементов запроса должен присутствовать элемент, содержащий бизнес-данные и элемент, содержащий директивы (рисунки 14, 15). Элементы с наименованиями «family» и «name» даны для примера.
 
Рисунок 15 – Корневой элемент запроса
 
Рисунок 16 – Корневой элемент запроса с директивами

В составе корневых элементов ответа должен присутствовать элемент, содержащий бизнес-данные и элемент, содержащий директивы (рисунки 16, 17). Элементы с наименованиями «family» и «name» даны для примера.
 
Рисунок 17 – Корневой элемент ответа
  
Рисунок  18 – Корневой элемент ответа с директивами
Пример схемы директивного протокола обмена (вида сведений):
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-data-provider/directive-protex/1.0.0" xmlns:directive="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" xmlns:schema1="urn://x-artefacts-data-provider/schematic/protex/1.0.0" targetNamespace="urn://x-artefacts-data-provider/directive-protex/1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Подключение описания модели данных-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:import namespace="urn://x-artefacts-data-provider/schematic/protex/1.0.0" schemaLocation="schematic/document.xsd"/>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Обязательные элементы схемы ВС-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:import namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" schemaLocation="smev-message-exchange-directive-1.2.xsd"/>
	<xs:element name="Request">
		<xs:annotation>
			<xs:documentation>Запрос. Реестровый тип данных (для директивных ВВС)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="directive:Registry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Response">
		<xs:annotation>
			<xs:documentation>Ответ. Реестровый тип данных (для директивных ВВС)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="directive:Registry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Бизнес данные-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:element name="MBRequest">
		<xs:annotation>
			<xs:documentation>Корневой элемент запроса</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="family" type="schema1:family"/>
				<xs:element name="name" type="schema1:name"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="MBResponse">
		<xs:annotation>
			<xs:documentation>Корневой элемент ответа</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="name" type="schema1:name"/>
				<xs:element name="family" type="schema1:family"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

5.1.2.3.2.	Рассылка
Директивный формат передаваемых данных состоит из схемы СМЭВ-заголовка и необязательных СМЭВ-вложений, передаваемых в рассылке, состоящей из одного, или разнесённой по нескольким файлам. Допустимо использование только одного варианта рассылки.

В составе корневых элементов рассылки должен присутствовать элемент, содержащий бизнес-данные и элемент, содержащий директивы (рисунки 18, 19). Элементы с наименованиями «family» и «name» даны для примера.
  
Рисунок 19 – Корневой элемент запроса
  
Рисунок 20 – Корневой элемент запроса с директивами
Пример схемы рассылки с использованием директивного протокола обмена:
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-data-provider/directive-protex/1.0.0" xmlns:directive="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" xmlns:schema1="urn://x-artefacts-data-provider/schematic/protex/1.0.0" targetNamespace="urn://x-artefacts-data-provider/directive-protex/1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="urn://x-artefacts-data-provider/schematic/protex/1.0.0" schemaLocation="schematic/document.xsd"/>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Обязательные элементы схемы ВС-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:import namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/directive/1.3" schemaLocation="smev-message-exchange-directive-1.2.xsd"/>
	<xs:element name="Request">
		<xs:annotation>
			<xs:documentation>Запрос. Реестровый тип данных (для директивных ВВС)</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="directive:Registry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:annotation>
		<xs:documentation>-------------------------------------------------Бизнес данные-------------------------------------------------</xs:documentation>
	</xs:annotation>
	<xs:element name="Broadcast">
		<xs:annotation>
			<xs:documentation>Корневой элемент рассылки</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="family" type="schema1:family"/>
				<xs:element name="name" type="schema1:name"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

5.1.2.3.3.	СМЭВ-вложения
Каждое СМЭВ-вложение описывается Паспортом – перечнем параметров (метаданные) и комплектом взаимосвязанных схем, описывающих структурированное вложение. Паспорт формируется на этапе проектирования формата передаваемых данных.

Метаданные паспорта вложения:
	Уникальный идентификатор;
	Наименование;
	Тип вложения;
	Признак архива;
	Способ передачи вложения через СМЭВ;
	Планируемый размер вложения;
	Признак структурированного вложения.
Идентификатор вложения должен быть глобально уникальным. Для обеспечения уникальности в качестве идентификатора следует использовать target namespace, формируемый по описанному ранее правилу (раздел 5.1.2).
Тип вложения определяется согласно RFC 2045, RFC 2046, RFC 4288, RFC 4289 и RFC 4855.
Если необходимо передавать несколько отдельных файлов в одном архиве, то в паспорте вложения необходимо установить признак архива. При этом, для каждого файла в архиве требуется свой персональный паспорт.
Примечание: для архива доступен только метод сжатия ZIP. Архив ZIP должен быть в виде файла с расширением «.zip» или «.ZIP» и использовать MIME-тип application/zip.
Способ передачи вложения через СМЭВ выбирается из:
	МТОМ;
	с использованием Файлового хранилища.
При выборе способа передачи с использованием Файлового хранилища необходимо определить допустимый диапазон размеров: менее 5МБ, от 1 до 5 МБ, От 5 до 10 МБ, более 10МБ.
Если вложение является структурируемым, следует установить признак структурированного вложения и сформировать схему вложения. К схеме структурированного вложения предъявляются те же требования, что и к СМЭВ-заголовкам, они приведены в документе «Требования к XML-схемам, регистрируемым в СМЭВ». В качестве target namespace следует использовать значение идентификатора паспорта вложения.
Каждое вложение регистрируется в связке с сообщением-запросом или сообщением-ответом сообщения типа «запрос-ответ», или с сообщением-рассылкой при типе «рассылка».
5.1.3.	Материалы для аттестации
Для прохождения процедуры аттестации технической готовности протокола обмена и ИС, его использующей, необходимо подготовить следующие материалы:
	Для простых Протоколов обмена:
	Для режима обмена «Запрос-ответ»:
	Материалы для проведения тестирования возможности отправлять сообщения-запросы;
	Материалы для проведения тестирования возможности отправлять сообщения-ответы.
	Для режима обмена «Рассылка»:
	Материалы для проведения тестирования возможности отправлять сообщения-рассылки.
	Для директивных Протоколов обмена:
	Для режима обмена «Запрос-ответ»:
	Материалы для проведения тестирования возможности отправлять сообщения-запросы;
	Материалы для проведения тестирования возможности отправлять сообщения-ответы.
	Для режима обмена «Рассылка»:
	Материалы для проведения тестирования возможности отправлять сообщения-рассылки.
5.1.3.1.	Материалы для проведения тестирования возможности отправлять сообщения-запросы
Для обеспечения автоматизированного тестирования возможности ИС отправлять сообщения-запросы необходимо подготовить следующие материалы для сценария тестирования:
	Наименование сценария;
	XPath-выражение идентификатора варианта запроса. В XPath-выражениях контрольных примеров одного сценария, название одного элемента должно встречаться не более одного раза;
	Псевдоним пространства имён тестового сценария;
	XSLT преобразование для эмуляции ответа;
	Список контрольных примеров:
	Наименование контрольного примера;
	XPath-выражение - условие контрольного примера.
5.1.3.2.	Материалы для проведения тестирования возможности отправлять сообщения-ответы
Для обеспечения автоматизированного тестирования возможности ИС отправлять сообщения-ответы необходимо подготовить следующие материалы:
	Тестовые эталонные запросы;
	Тестовые эталонные ответы.
5.1.3.3.	Материалы для проведения тестирования возможности отправлять сообщения-рассылки
Для обеспечения автоматизированного тестирования возможности ИС отправлять сообщения-рассылки необходимо подготовить следующие материалы для сценария тестирования:
	Наименование сценария;
	XPath-выражение идентификатора варианта рассылки. В XPath-выражениях контрольных примеров одного сценария название одного элемента должно встречаться не более одного раза;
	Псевдоним пространства имён тестового сценария;
	Список контрольных примеров:
	Наименование контрольного примера;
	XPath-выражение - условие контрольного примера.
5.1.4.	Обмен справочными данными в составе сообщений по видам сведений в СМЭВ
5.1.4.1.	Проверка ссылочной целостности передаваемых справочных данных
Для передачи в составе сообщения справочных данных, содержащихся в справочниках ЕСНСИ, следует указывать только ссылки на требуемые данные. Ссылки представляют собой значения ключевых атрибутов справочника ЕСНСИ. Ключевой атрибут назначается при создании справочника, процедура указана в руководстве пользователя в разделе «Управление справочниками».
Имеется возможность проверки ссылочной целостности передаваемых данных средствами СМЭВ3.Х.
Пример: требуется передать сообщение по определённому протоколу обмена (виду сведений), с условием, чтобы элемент сообщения «Gender» (рисунок 48), содержал только значения, указанные в ключевом атрибуте «ID» справочника ЕСНСИ «Справочник полов» (таблица 11).
Таким образом, при передаче в элементе «Gender» значения «0003», СМЭВ данное сообщение пропускать не должен. В обратном случае, при указании значения «0001» или «0002», сообщение будет удовлетворять схеме Вида сведений и сообщение поступит к получателю.
Для использования проверки необходимо выполнить следующие действия:
1.	Владельцем справочных данных:
a.	Создать в ЕСНСИ справочник со справочными данными. У справочника должен быть обязательно назначен ключевой атрибут;
b.	Обеспечить возможность публикации справочника ЕСНСИ для проведения проверки: регламентная процедура «Публикация справочника ЕСНСИ для проведения контроля ссылочной целостности»;
c.	Наполнить справочник данными через пользовательский веб-интерфейс, либо с использованием вида сведений «Обновление содержимого справочников ЦНСИ»;
d.	Опубликовать справочник в СМЭВ3.Х через пользовательский веб-интерфейс. Процесс публикации приведён в руководстве пользователя, раздел «Публикация справочника в СМЭВ3.Х». Форма заявки на публикацию приведена в приложении К.
2.	Разработчиком вида сведений:
a.	Скачать XSD опубликованной ревизии справочника через пользовательский веб-интерфейс ЕСНСИ2.0 (http://esnsi.gosuslugi.ru/). Процесс скачивания XSD справочника проведён в руководстве пользователя в разделе «Выгрузка XSD справочника»;
b.	Включить XSD справочника ЕСНСИ в схему вида сведений с помощью инструкции import. Формирование схемы вида сведений с использованием схем справочников приведено в приложении Ж.

5.1.4.2.	Ограничения использования справочников ЕСНСИ при межведомственном обмене:
1.	При внесении изменений в структуру справочника требуется регистрация новых версий видов сведений, использующие данный справочник;
2.	Для проверки используется только ключевой атрибут справочника.
5.2.	Единый сервис СМЭВ
5.2.1.	Общие положения
Электронные сообщения в СМЭВ передаются в формате XML в кодировке UTF-8 с указанием кодировки в заголовке сообщения. Соответствующие им WSDL и XSD файлы также должны использовать кодировку UTF-8 с указанием кодировки в заголовке сообщения.
Процесс отправки ИС инициатора запроса и получения ответа на запрос от ИС ответчика представляет собой последовательность вызовов единого электронного сервиса СМЭВ информационными системами инициатора и ответчика:
	передача в СМЭВ запроса из ИС инициатора (//SendRequestRequest);
	получение из СМЭВ запроса в ИС ответчика (//GetRequestResponse);
	подтверждение ответчиком получения запроса из СМЭВ (//AckRequest);
	передача в СМЭВ ответа из ИС ответчика (//SendResponseRequest);
	получение из СМЭВ ответа либо ответа со статусом в ИС инициатора (//GetResponseResponse)
	подтверждение инициатором получения ответа из СМЭВ (//AckRequest).
Перечисленные в скобках элементы являются, по своему назначению, конвертами сообщений (далее – СМЭВ-конверты), так как представляют собой «оболочку» для передачи в СМЭВ сообщений, включающих блоки и элементы служебных и бизнес данных, а также электронные подписи.
При отправке сформированного СМЭВ-конверта в HTTP-заголовке необходимо передавать параметр HOST в соответствии со средой, посредством которой происходит обмен данными. Например, продуктивная среда (схема 1.3): 
Host: 172.20.3.12:5000
Актуальные адреса для обращений к СМЭВ 3.0 размещены на Технологическом Портале СМЭВ 3 в разделе "Часто задаваемые вопросы" по ссылке https://smev3.gosuslugi.ru/portal/faq.jsp 
Метод Get реализован в соответствии со стандартом http://www.w3.org/TR/2005/REC-soap12-mtom-20050125/.
Наименования перечисленных выше элементов образуются из слов Send/Get и Request/Response, соответствующих назначению элемента. Первый слог в имени элемента образуется словом «Send» или «Get», которое соответствует выполняемому действию с точки зрения ИС участника взаимодействия. Например, с точки зрения инициатора, он посылает (Send) запрос, а с точки зрения ответчика, он получает (Get) этот же запрос. Второй слог образуется словом «Request» или «Response» и определяет назначение сообщения с точки зрения бизнес-логики: слово «Request» означает запрос от инициатора к ответчику, а слово «Response» означает ответ от ответчика к инициатору. Третий слог образуется также словом «Request» или «Response», но несёт другой смысл: слово «Request» соответствует SOAP-запросу, а слово «Response» SOAP-ответу.
Элемент AckRequest (от acknowledgement request) является запросом на подтверждение и содержит ссылку на сообщение (идентификатор сообщения), получение которого подтверждается методом Ack.
Внимание! Метод получения статистики входящих очередей //GetIncomingQueueStatistics исключен из состава методов единого электронного сервиса СМЭВ версии 1.2 и отсутствует в 1.3. Данный метод заменён push-нотификациями (раздел 11).
Схемы единого сервиса СМЭВ3.Х приведены в приложении М.

5.2.1.1.	Правила формирования HTTP-заголовков в сообщении
При формировании HTTP-запроса для передачи СМЭВ-конверта в Единый сервис заполнение заголовков Host, SOAPAction, Content-Type,Content-Length  является обязательным.  

Значение заголовка "Host" должно соответствовать IP-адресам среды функционирования СМЭВ, указанным на https://smev3.gosuslugi.ru/portal/faq.jsp в разделе "Актуальные адреса для обращений к СМЭВ 3 -> Адреса размещения Единого электронного сервиса"

Значение заголовка "SOAPAction"  должно включать в себя одно из следующих значений: 

urn:SendRequest   - для СМЭВ-конвертов с обращениями SendRequestRequest
urn:SendResponse - для СМЭВ-конвертов с обращениями SendResponseRequest 
urn:GetRequest     - для СМЭВ-конвертов с обращениями GetRequestRequest
urn:GetResponse   - для СМЭВ-конвертов с обращениями GetResponseRequest 
urn:Ack                  - для СМЭВ-конвертов с обращениями AckRequest 

Значения заголовков "Content-Type", "Content-Length"  должны соответствовать требованиям стандарта rfc2616 (https://www.ietf.org/rfc/rfc2616.txt)"

5.2.2.	Структура сообщения-запроса, которое ИС отправителя передаёт в СМЭВ
5.2.2.1.	Простые протоколы обмена
Структура сообщения, передаваемого в СМЭВ от ИС отправителя к ИС получателя в случае простых протоколов обмена, приведена на рисунке 20.
  
Рисунок 21- Структура сообщения с запросом сведений, которое ИС отправителя передаёт в СМЭВ

Элементы XML-структуры на рисунке изображены в виде прямоугольников со скруглёнными (за исключением СМЭВ-конверта) краями, с привязкой к элементам (имена соответствующих элементов XML-структуры приведены в верхнем левом углу прямоугольников). Обязательные элементы изображены непрерывной линией, а необязательные – пунктирной. Если элемент подписывается ЭП, то в его состав должен быть добавлен атрибут с наименованием «Id».
СМЭВ-конверт с запросом сведений по простому протоколу обмена (//SendRequestRequest), направляемый ИС отправителя в СМЭВ (для последующей передачи запроса из СМЭВ в ИС получателя), включает следующие элементы:
	блок данных запроса (//SenderProvidedRequestData), который включает структурированные сведения в соответствии с требованиями Владельца ВС, а также служебные данные, заполняемые инициатором сведений;
	блок содержимого вложений (//AttachmentContentList);
	электронная подпись органа власти (ЭП-ОВ) (//CallerInformationSystemSignature).
5.2.2.1.1.	Блок данных запроса
Блок данных сообщения-запроса может включать от двух до одиннадцати элементов, которые заполняются в ИС инициатора:
	идентификатор сообщения (//MessageID), обязательный элемент, идентификатор сообщения в виде UUID, основанного на времени, сгенерированный отправителем. UUID необходимо генерировать по версии 1 (см. п. 4.2 «Algorithms for Creating a Time-Based UUID» RFC 4122 https://datatracker.ietf.org/doc/html/rfc4122#section-4.2). СМЭВ использует метку времени, содержащуюся в UUID, для проверки срока годности сообщения, к которому относится данный UUID. Для СМЭВ срок годности одного сообщения составляет 24 часа;
	идентификатор первичного сообщения (//ReferenceMessageID), опциональный элемент, указывающий на первичный MessageID в цепочке запросов одной бизнес-транзакции. При отправке первичного запроса ReferenceMessageID и MessageID совпадают.
	код транзакции (//TransactionCode), опциональный элемент, указывающий на транзакцию оказания государственной услуги или выполнения государственной функции, в рамках которой посылается запрос. Если в транзакции запрос является первым, то данный элемент следует заполнять значением, полученным в СГКТ. Если в транзакции запрос является промежуточным, то данный элемент следует заполнять значением, полученным в запросе, на основании которого посылается данный запрос. Правила получения и использования кода транзакции приведены в разделе 10;
	время жизни запроса (//EOL), опциональный элемент, определяющий время, до истечения которого запрос является для ИС инициатора актуальным;
	блок структурированных сведений в соответствии требованиям Владельца сведений (//MessagePrimaryContent), обязательный элемент, представляющий собой XML документ, заполненный по формату, разработанному Владельцем сведений. Ответчик, для которого предназначен запрос, определяется в СМЭВ по полному имени корневого элемента в этом блоке (//Request). Этот блок не предназначен для передачи вложений, при возникновении такой необходимости следует использовать блоки содержимого вложений, заголовков и ЭП-СП вложений;
	электронная подпись должностного лица (далее - ЭП-СП) (//PersonalSignature). По требованиям Владельца сведений эта подпись может быть обязательной для подписи блока сведений по форматам Владельца. С помощью ЭП-СП подписывается элемент, находящийся в //MessagePrimaryContent (между открывающим и закрывающим тегами), содержащий атрибут Id;
	блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList), который содержит идентификаторы вложений, хэш коды вложений, MIME-типы вложений, а также ЭП-СП этих вложений в формате PKCS#7 detached (подробнее о порядке формирования электронных подписей см. раздел 6). Перед отправкой сообщения вложения должны быть загружены в файловое хранилище СМЭВ средствами FTP;
	блок заголовков и ЭП-СП вложений, передаваемых MTOM (//AttachmentHeaderList), который содержит ссылки на идентификаторы вложений в блоке содержимого вложений, MIME-типы вложений, а также ЭП-СП этих вложений в формате PKCS#7 detached (подробнее о порядке формирования электронных подписей см. раздел 6);
	блок атрибутов бизнес-процесса (//BusinessProcessMetadata). Состав данных этого блока расширяемый и описывается отдельной XML-схемой urn://x-artefacts-smev-gov-ru/services/message-exchange/business-process-metadata/1.0. В настоящее время в него входят код государственной услуги или государственной функции согласно реестру государственных услуг, признак услуги или функции, код ФРГУ информационной системы-отправителя запроса, а также номер дела, в рамках которого сформирован запрос. Эта информация не требуется для работы СМЭВ и в настоящее время не обязательна для заполнения, однако она может быть полезна для разрешения вопросов участников взаимодействия по взаимодействию с СМЭВ;
	признак тестового взаимодействия (//TestMessage). Если этот элемент присутствует, то это означает, что запрос – тестовый. Данный признак используется для тестирования видов сведений.
Блок данных запроса подписывается ЭП-ОВ.
5.2.2.1.2.	Блок содержимого вложений
Блок содержимого вложений может быть добавлен, если инициатору необходимо передать в ИС ответчика информацию (в том числе неструктурированную), которая не входит в блок структурированных сведений в соответствии с требованиями Владельца вида ведений.
Вложенные файлы и идентификаторы вложений располагаются вне подписанного с помощью ЭП-ОВ блока данных запроса для корректной реализации кодирования вложений с помощью механизма оптимизации передачи сообщений MTOM с обязательным применением технологии XML-binary Optimized Packaging.
Если на стороне отправителя сообщения в отношении вложения, приложенного к сообщению, не будет применена технология XML-binary Optimized Packaging, оптимизация MTOM/XOP в отношении каждого вложения будет выполняться СМЭВ принудительно. При отправке неоптимизированного вложения необходимо исключить заголовки типа multipart, определяющие МТОМ-вложение.
В связи с этим, после оптимизации MTOM/XOP содержимое элемента //Content типа //AttachmentContentType должно представлять собой значение вида:
	<xop:include xmlns:xop='http://www.w3.org/2004/08/xop/include' href=“…”/>,
где значение конструкции «href» должно удовлетворять требованиям спецификации XML-binary Optimized Packaging и должно соответствовать фактическому Content-Id вложения бинарного формата.
Суммарный объем вложенных файлов не должен превышать 5МБ. В противном случае при пересылке файлов необходимо использовать механизм Файлового хранилища (см. раздел 7).
Обращаем внимание, что значение элемента //Id блока содержимого вложений должно содержать в качестве первого (начального) символа латинскую букву или нижнее подчёркивание.
5.2.2.1.3.	Электронная подпись органа власти
Электронная подпись ЭП-ОВ, формируемая от имени органа власти, участвующего в межведомственном взаимодействии и выступающего в роли инициатора взаимодействия по виду сведений, подписывает блок данных запроса. С помощью ЭП-ОВ обеспечивается целостность запроса и идентификация ИС отправителя.
5.2.2.2.	Директивные протоколы обмена
Структура сообщения, передаваемого в СМЭВ от ИС отправителя к ИС получателя в случае директивных протоколов обмена, приведена на рисунке 21. 
 
Рисунок 22- Структура сообщения с запросом сведений, которое ИС отправителя передаёт в СМЭВ

СМЭВ-конверт с запросом сведений по директивному протоколу обмена (//SendRequestRequest), направляемый ИС отправителя в СМЭВ (для последующей передачи запроса из СМЭВ в ИС получателя), включает следующие элементы:
	блок данных запроса (//SenderProvidedRequestData), который включает структурированные сведения в соответствии с требованиями Владельца сведений, а также служебные данные, заполняемые инициатором запроса;
	блок содержимого вложений (//AttachmentContentList);
	электронная подпись органа власти (ЭП-ОВ) (//CallerInformationSystemSignature).
5.2.2.2.1.	Блок данных запроса
Блок данных сообщения-запроса по директивному протоколу обмена содержит элементы, аналогичные, сообщению-запросу по простому протоколу обмена, за исключением:
	блок структурированных сведений (//MessagePrimaryContent), обязательный элемент, представляющий собой XML документ, содержащий реестр однотипных записей, заполненный по формату, разработанному Владельцем сведений. Получатель, для которого предназначена запись реестра, определяется в СМЭВ одним из способов:
	по полному имени корневого элемента в этом блоке (//Request);
	по значению элемента, определённому в выражении XPath табличной маршрутизации;
	по информации, размещённой в блоке маршрутной информации (//Routing).
	электронная подпись должностного лица (//PersonalSignature) может отсутствовать, при условии наличия ЭП-СП в каждой записи реестра;
	блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList) находится в каждой записи реестра (//Record).  Данный элемент (//RefAttachmentHeaderList)  необходимо дополнительно разместить в блоке данных запроса (//SenderProvidedRequestData) после блока структурированных сведений (//MessagePrimaryContent), аналогично простому протоколу обмена (5.2.2.1), и включить в него ссылки на вложения из всех реестровых записей;
	блок заголовков и ЭП-СП вложений, передаваемых MTOM (//AttachmentHeaderList) находится в каждой записи реестра (//Record).  Данный элемент (//AttachmentHeaderList) необходимо дополнительно разместить в блоке данных запроса (//SenderProvidedRequestData) после блока структурированных сведений (//MessagePrimaryContent), аналогично простому протоколу обмена (5.2.2.1), и включить в него ссылки на вложения из всех реестровых записей;

5.2.2.2.1.1.	Блок структурированных сведений
Блок структурированных сведений содержит реестр однотипных записей. В каждую запись реестра входит:
	уникальный, в данном сообщении, идентификатор записи реестра (//RecordId). Обязательный элемент;
	блок структурированных сведений в соответствии с требованиями Владельца сведений (//RecordContent), обязательный элемент, представляющий собой XML документ, заполненный по формату, разработанному Владельцем сведений. Этот блок не предназначен для передачи вложений, при возникновении такой необходимости следует использовать блоки содержимого вложений, заголовков и ЭП-СП вложений для каждой записи реестра;
	блок заголовков и ЭП-СП вложений, передаваемых MTOM (//AttachmentHeaderList), который содержит ссылки на идентификаторы вложений в блоке содержимого вложений, MIME-типы вложений, а также ЭП-СП этих вложений в формате PKCS#7 detached;
	блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList);
	электронная подпись должностного лица (//PersonalSignature). Блок содержит электронную подпись данных элемента, находящегося в //RecordContent (между открывающим и закрывающим тегами), и содержащего атрибут Id. ЭП-СП может отсутствовать при условии доставки получателю всех записей реестра без изменений и при обязательном наличии ЭП-СП в блоке данных запроса (//SenderProvidedRequestData);
	блок электронной подписи органа власти (//RecordSignature). Блок содержит электронную подпись данных элемента, находящегося в элементе //Record;


5.2.2.2.2.	Блок маршрутной информации
Блок маршрутной информации (//Routing) –обязательный элемент для протоколов обмена, описанных в пп. 4.6.2.4, пп.4.6.2.5, пп.4.6.3.2, пп.4.6.3.3, на основе содержимого которого определяется получатель каждой записи реестра, размещённой в блоке структурированных сведений (//MessagePrimaryContent).
Блок маршрутной информации в сообщении с запросом сведений, которое ИС инициатора передаёт в СМЭВ, приведён на рисунке 22.
 
Рисунок 23– Блок маршрутной информации в сообщении с запросом сведений, которое ИС отправителя передаёт в СМЭВ
Необязательный блок маршрутной информации (//Routing) включает следующие элементы:
	Непосредственно сама маршрутная информация (//RoutingInformation);
	Электронная подпись ЭП-ОВ (//RoutingSignature).

 
Рисунок 24 – Пример формирования блока RoutingInformation для протокола обмена с реестровой маршрутизацией по мнемоникам.

5.2.2.2.3.	Маршрутная информация
Маршрутная информация включает в себя:
	идентификатор сообщения (//MessageID). Обязательный элемент, значение которого равно идентификатору сообщения из элемента //MessageID блока данных запроса;
	блок общей динамической маршрутизации (//DynamicRouting). Используется для протоколов обмена с маршрутизацией, описанной в пп.4.6.2.4, пп.4.6.2.5, содержит перечень мнемоник ИС-получателей;
	блок маршрутизации по идентификатору (//IdentifierRouting). Используется для протоколов обмена с маршрутизацией, описанной в пп.4.6.3.2, пп.4.6.3.3, содержит перечень идентификаторов. На основе значений идентификатора СМЭВ определяет подписчика и формирует в его адрес сообщение-клон;
	блок маршрутизации записей реестра (//RegistryRouting). Обязательный элемент для протоколов обмена с маршрутизацией, описанной в пп.4.6.2.5, пп.4.6.3.3, содержит маршрутную информацию по каждой записи реестра, которые были указаны в блоке RegistryRecord:
	уникальный идентификатор записи реестра (//RecordId). Для протоколов обмена с маршрутизацией, описанной в пп.4.6.2.5 , пп.4.6.3.3 обязательный элемент, содержит значение, равное значению элемента //RecordId записи реестра;
	признак использования общей маршрутизации для данной записи реестра (//UseGeneralRouting). Обязательный элемент. Определяет какую маршрутную информацию использовать для данной записи реестра. При значении «false» запись реестра будет передана получателям, указанным в //RegistryRecordRouting/DynamicRouting (или //RegistryRecordRouting/IdentifierRouting). При значении «true» запись реестра будет передана получателям, указанным в //RegistryRecordRouting/DynamicRouting (или //RegistryRecordRouting/IdentifierRouting), а также в //RoutingInformation/DynamicRouting (или //RoutingInformation/ IdentifierRouting);
	блок динамической маршрутизации (//DynamicRouting). Для протоколов обмена с маршрутизацией, описанной в пп.4.6.2.5  обязательный элемент, содержит перечень мнемоник ИС-получателей данной записи реестра. В адрес каждой ИС-получателя формируется сообщение-клон, содержащее данную запись реестра;
	блок маршрутизации по идентификатору (//IdentifierRouting). Для протоколов обмена с маршрутизацией, описанной в пп.4.6.3.3 обязательный элемент, содержит перечень идентификаторов. На основе значений идентификатора СМЭВ определяет подписчика данной записи реестра и формирует в его адрес сообщение-клон.
 
Рисунок 25 – Пример блока RegistryRouting, в случае, если одну реестровую запись необходимо маршрутизировать для разных получателей отдельно

5.2.2.2.4.	Электронная подпись органа власти
Электронная подпись ЭП-ОВ, формируемая от имени органа власти, участвующего в межведомственном взаимодействии и выступающего в роли отправителя сообщения, подписывает блок, содержащий маршрутную информацию. С помощью ЭП-ОВ обеспечивается целостность маршрутной информации.
5.2.3.	Структура сообщения с запросом сведений, которое ИС получателя получает из СМЭВ
5.2.3.1.	Простой протокол обмена
Структура сообщения, которое ИС получателя получает из СМЭВ в случае простого протокола обмена, приведена на рисунке 23.
 
Рисунок 26– Структура сообщения с запросом сведений, которое ИС получателя получает из СМЭВ (простой протокол обмена)
При получении из СМЭВ SOAP-ответа, ИС получателя проверяет в СМЭВ-конверте наличие элемента //RequestMessage (присутствует, если очередь запросов не пуста). Элемент //RequestMessage включает три элемента:
	блок данных СМЭВ-конверта (//Request);
	блок содержимого вложений, передаваемых MTOM (//AttachmentContentList);
	электронная подпись СМЭВ (далее - ЭП-СМЭВ), (//SMEVSignature).
5.2.3.1.1.	Блок данных СМЭВ-конверта
Блок данных СМЭВ-конверта //Request содержит элементы:
	блок данных запроса //SenderProvidedRequestData, сформированный отправителем запроса (раздел 5.2.2);
	ЭП-ОВ, которой ИС отправителя подписан блок данных запроса.
Кроме того, блок данных СМЭВ-конверта содержит три дополнительных элемента, добавленных СМЭВ (на рисунке 22 выделены заливкой белым цветом):
	обратный адрес (//ReplyTo), необходимый для доставки ответа отправителя (обратный адрес не является мнемоникой отправителя сообщения или именем его очереди, его формат не специфицируется). При отправке ответа на запрос ИС получателя копирует это значение в элемент //SenderProvidedResponseData/To, прочитав который, СМЭВ, в свою очередь, определяет, кому доставить ответ на запрос. Следует также иметь в виду, что в разных запросах, пришедших от одной и той же ИС отправителя, содержимое элемента //ReplyTo может отличаться.
	блок маршрутной информации СМЭВ (//MessageMetaData) с метаданными, включающими элементы:
	тип сообщения (запрос «REQUEST», ответ «RESPONSE», рассылка «BROADCAST») (//MessageType);
	информация об отправителе сообщения (//Sender), включающая вычисляемую на основе анализа сертификата ЭП-ОВ мнемонику отправителя, предназначенную для машинной обработки (Mnemonic);
	метка времени получения в СМЭВ сообщения от ИС отправителя (//SendingTimeStamp). Содержит дату и время, начиная с которого отсчитывается срок исполнения запроса;
	информация о получателе сообщения (//Recipient), определённая маршрутизатором и включающая мнемонику получателя, предназначенную для машинной обработки (//Mnemonic);
	дата и время доставки сообщения получателю (//DeliveryTimeStamp).
	блок заголовков вложений, передаваемых посредством ФХ (//FSAttachmentsList) состоит из следующих элементов:
	идентификатор вложения (//uuid);
	имя пользователя (в совокупности с паролем необходимо для получения доступа к файловому хранилищу СМЭВ, чтобы скачать файл вложения) (//UserName);
	пароль (в совокупности с именем пользователя необходим для получения доступа к файловому хранилищу СМЭВ, чтобы скачать файл вложения) (//Password);
	имя файла вложения (//FileName).
5.2.3.1.2.	Блок содержимого вложений
Блок содержимого вложений, передаваемых MTOM, не изменяется при прохождении через СМЭВ и соответствует блоку содержимого вложений сообщения с запросом, которое ИС инициатора передала в СМЭВ (раздел 5.2.2).
5.2.3.1.3.	Электронная подпись СМЭВ
С помощью ЭП-СМЭВ (//SMEVSignature) подписываются блок данных запроса (вместе с ЭП-ОВ), а также добавленные в СМЭВ блок маршрутной информации СМЭВ и обратный адрес.
С помощью ЭП-СМЭВ обеспечивается целостность сообщения с запросом на всем пути от отправителя до получателя, подтверждение поступления запроса из СМЭВ во время, указанное в метке времени, и право ИС инициатора на направление запроса в ИС ответчика.
5.2.3.2.	Директивные протоколы обмена
Структура сообщения с запросом сведений, которое ИС получателя получает из СМЭВ в случае директивных протоколов обмена, приведена на рисунке ниже (рисунок 24).
  
Рисунок 27– Структура сообщения с запросом сведений, которое ИС получателя получает из СМЭВ (директивные протоколы обмена)
5.2.3.2.1.	Блок данных СМЭВ-конверта
Блок данных СМЭВ-конверта //Request содержит элементы, аналогичные сообщению, сформированному по простому протоколу обмена, за исключением блока структурированных вложений (//MessagePrimaryContent) и блоков заголовков и ЭП-СП вложений, передаваемых МТОМ или FTP.
В состав блока структурированных вложений входят только те записи реестра, сформированные отправителем, которые были адресованы именно данному получателю.
Структура блока структурированных вложений аналогична сформированной отправителем (раздел 5.2.2).
5.2.4.	Структура сообщения с ответом, которое ИС отправителя передаёт в СМЭВ
5.2.4.1.	Простые протоколы обмена
Структура сообщения с ответом, которое ИС отправителя передаёт в СМЭВ в случае простых протоколов обмена, приведена на рисунке 25.
 
Рисунок 28– Структура сообщения с ответом, которое ИС отправителя передаёт в СМЭВ (простые протоколы обмена)

Назначение элементов сообщения, с помощью которого передаётся ответ в СМЭВ (для последующей передачи в ИС получателя), в основном соответствует назначению элементов сообщений, с помощью которых был передан запрос.
СМЭВ-конверт с ответом (//SendResponseRequest), направляемый в СМЭВ (для последующей передачи ответа из СМЭВ в ИС получателя), включает элементы:
	блок данных ответа (//SenderProvidedResponseData), который включает структурированные сведения в соответствии с требованиями Владельца сведений, а также служебные данные, заполняемые ответчиком сведений;
	блок содержимого вложений, передаваемых MTOM (//AttachmentContentList);
	электронная подпись органа власти (ЭП-ОВ) (//CallerInformationSystemSignature).
5.2.4.1.1.	Блок данных ответа
Блок данных ответа может включать от трёх до шести элементов, которые заполняются в ИС отправителя:
	идентификатор сообщения (//MessageID), обязательный элемент, идентификатор сообщения в виде UUID, основанного на времени, сгенерированный отправителем. UUID необходимо генерировать по версии 1 (см. п. 4.2 «Algorithms for Creating a Time-Based UUID» RFC 4122 https://datatracker.ietf.org/doc/html/rfc4122#section-4.2). СМЭВ использует метку времени, содержащуюся в UUID, для проверки срока годности сообщения, к которому относится данный UUID. Для СМЭВ срок годности одного сообщения составляет 24 часа;
	адрес доставки ответа (//To), обязательный элемент, в который должно быть скопировано содержимое элемента //GetRequestResponse/RequestMessage/ Request/ReplyTo запроса, на который отправляется ответ;
	блок структурированных сведений в соответствии с требованиями Владельца сведений (//MessagePrimaryContent), обязательный элемент, представляющий собой XML документ, заполненный по формату, разработанному Владельцем сведений. Этот блок не предназначен для передачи вложений, при возникновении такой необходимости следует использовать блоки содержимого вложений, заголовков и ЭП-СП вложений;
	электронная подпись должностного лица (далее - ЭП-СП), (//PersonalSignature). По требованиям Владельца сведений эта подпись может быть обязательной для подписи блока сведений по форматам ответчика. С помощью ЭП-СП подписывается элемент, находящийся в //MessagePrimaryContent (между открывающим и закрывающим тегами), имеющий атрибут Id;
	блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList), который содержит идентификаторы вложений, хэш коды вложений, MIME-типы вложений, а также ЭП-СП этих вложений в формате PKCS#7 detached (подробнее о порядке формирования электронных подписей см. раздел 6). Перед отправкой сообщения вложения должны быть загружены в файловое хранилище СМЭВ средствами FTP;
	блок заголовков и ЭП-СП вложений, передаваемых MTOM (//AttachmentHeaderList), который содержит ссылки на идентификаторы вложений в блоке содержимого вложений, MIME-типы вложений, а также ЭП-СП этих вложений в формате PKCS#7 detached (подробнее о порядке формирования электронных подписей см. раздел 6).
А также дополнительные (//choice) элементы:
	Отклонение запроса (//RequestRejected), который может быть использован для информирования ИС отправителя запроса об отклонении его запроса. Содержит код причины отклонения запроса (//RejectionReasonCode) (раздел 8) и описание причины отклонения запроса, в человекочитаемом виде (//RejectionReasonDescription). Заполняется ИС отправителя ответа;
	Статус запроса (//RequestStatus), который может быть использован для информирования о статусе обработки запроса. Содержит код бизнес-статуса запроса (//StatusCode) и описание бизнес-статуса запроса, в человекочитаемом виде (//StatusDescription). Заполняется ИС отправителем ответа;
	Статус обработки сообщения (запроса либо ответа на запрос) в СМЭВ (//AsyncProcessingStatus) (раздел 5.2.8.1). Данный элемент предназначен для использования только СМЭВ для информирования ИС о статусе обработки их сообщений в СМЭВ. В то же время данный элемент не предназначен для использования ИС ответчиков для информирования ИС инициаторов о статусах обработки их сообщений. В случае использования ИС ответчика данного элемента в отправляемом ею ответе СМЭВ вернёт данной ИС ошибку.
5.2.4.1.2.	Блок содержимого вложений
Блок содержимого вложений может быть добавлен, если отправителю ответа необходимо передать информацию (в том числе неструктурированную), которая не входит в блок данных ответа.
Вложенные файлы и идентификаторы вложений располагаются вне подписанного с помощью ЭП-ОВ блока данных запроса для корректной реализации кодирования вложений с помощью механизма оптимизации передачи сообщений MTOM с обязательным применением технологии XML-binary Optimized Packaging.
В случае если на стороне отправителя сообщения в отношении вложения, приложенного к сообщению, не будет применена технология XML-binary Optimized Packaging, оптимизация MTOM/XOP в отношении каждого вложения будет выполняться СМЭВ принудительно. При отправке неоптимизированного вложения необходимо исключить заголовки типа multipart, определяющие МТОМ-вложение.
В связи с этим, после оптимизации MTOM/XOP содержимое элемента //Content типа //AttachmentContentType должно представлять собой значение вида:
	<xop:include xmlns:xop='http://www.w3.org/2004/08/xop/include' href=“…”/>,
где значение конструкции «href» должно удовлетворять требованиям спецификации XML-binary Optimized Packaging и должно соответствовать фактическому Content-Id вложения бинарного формата.
Суммарный объем вложенных файлов не должен превышать 5МБ. В противном случае при пересылке файлов необходимо использовать механизм Файлового хранилища (см. раздел 7).
Обращаем внимание, что значение элемента //Id блока содержимого вложений должно содержать в качестве первого (начального) символа латинскую букву или нижнее подчёркивание.
5.2.4.1.3.	Электронная подпись органа власти
Электронная подпись ЭП-ОВ, формируемая от имени органа власти, участвующего в межведомственном взаимодействии и выступающего в роли отправителя ответа, подписывает блок данных ответа. С помощью ЭП-ОВ обеспечивается целостность ответа и идентификация ИС отправителя.
5.2.4.2.	Директивные протоколы обмена
Структура сообщения с ответом, которое ИС отправителя передаёт в СМЭВ в случае директивных протоколов обмена приведена на рисунке 26.
 
Рисунок 29– Структура сообщения с ответом, которое ИС отправителя передаёт в СМЭВ (директивные протоколы обмена)
Структура СМЭВ-конверт с ответом (//SendResponseRequest), аналогична структуре СМЭВ-конверта для случая простого протокола обмена и включает следующие элементы:
	блок данных ответа (//SenderProvidedResponseData), который включает структурированные сведения в соответствии с требованиями Владельца сведений, а также служебные данные, заполняемые ответчиком сведений;
	блок содержимого вложений, передаваемых MTOM (//AttachmentContentList);
	электронная подпись органа власти (ЭП-ОВ) (//CallerInformationSystemSignature).
5.2.4.2.1.	Блок данных ответа
Блок данных ответа может включать от трёх до четырёх элементов, которые заполняются в ИС-отправителя:
	идентификатор сообщения (//MessageID), обязательный элемент, идентификатор сообщения в виде UUID, основанного на времени, сгенерированный отправителем. UUID необходимо генерировать по версии 1 (см. п. 4.2 «Algorithms for Creating a Time-Based UUID» RFC 4122 https://datatracker.ietf.org/doc/html/rfc4122#section-4.2). СМЭВ использует метку времени, содержащуюся в UUID, для проверки срока годности сообщения, к которому относится данный UUID. Для СМЭВ срок годности одного сообщения составляет 24 часа;
	адрес доставки ответа (//To), обязательный элемент, в который должно быть скопировано содержимое элемента //GetRequestResponse/RequestMessage/ Request/ReplyTo запроса, на который отправляется ответ;
	блок структурированных сведений в соответствии с требованиями Владельца сведений (//MessagePrimaryContent), обязательный элемент, представляющий собой XML документ, содержащий реестр однотипных записей, заполненных по формату, разработанному Владельцем сведений. Этот блок не предназначен для передачи вложений, при возникновении такой необходимости следует использовать блоки содержимого вложений, заголовков и ЭП-СП вложений в каждой записи реестра. В случае, если получатель сообщения получает все записи реестра сообщения без изменений, допускается не указывать ЭП-СП в каждой записи реестра при условии наличия ЭП-СП, наложенной на весь блок структурированных сведений;
	электронная подпись должностного лица (//PersonalSignature). По требованиям Владельца сведений эта подпись может быть обязательной для подписи блока сведений по форматам ответчика. С помощью ЭП-СП подписывается элемент, находящийся в //MessagePrimaryContent (между открывающим и закрывающим тегами) и имеющий атрибут Id. Допускается не указывать ЭП-СП, при обязательном наличии ЭП-СП в каждой записи реестра.
	блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList). Заполнять элемент необходимо аналогично простому протоколу обмена (5.2.4.1), и включить в него ссылки на вложения из всех реестровых записей.
	блок заголовков и ЭП-СП вложений, передаваемых MTOM (//AttachmentHeaderList). Заполнять элемент необходимо аналогично простому протоколу обмена (5.2.4.1), и включить в него ссылки на вложения из всех реестровых записей.
Кроме того, блок данных ответа может содержать дополнительные (//choice) элементы:
	Отклонение запроса (//RequestRejected), который может быть использован для информирования ИС отправителя запроса об отклонении его запроса. Содержит код причины отклонения запроса (//RejectionReasonCode) (раздел 8) и описание причины отклонения запроса, в человекочитаемом виде (//RejectionReasonDescription). Заполняется ИС отправителя ответа;
	Статус запроса (//RequestStatus), который может быть использован для информирования о статусе обработки запроса. Содержит код бизнес-статуса запроса (//StatusCode) (раздел 8) и описание бизнес-статуса запроса, в человекочитаемом виде (//StatusDescription). Заполняется ИС отправителя ответа;
	Статус обработки сообщения (запроса либо ответа на запрос) в СМЭВ (//AsyncProcessingStatus) (раздел 5.2.8.1). Данный элемент предназначен для использования только СМЭВ для информирования ИС о статусе обработки их сообщений в СМЭВ. В то же время данный элемент не предназначен для использования ИС ответчиков в целях информирования ИС инициаторов о статусах обработки их сообщений. Если ИС ответчика использует данный элемент в отправляемом ею ответе СМЭВ, вернёт данной ИС ошибку.

5.2.4.2.2.	Блок содержимого вложений
Аналогично простому протоколу обмена (5.2.4.1).
5.2.4.2.3.	Электронная подпись органа власти
Электронная подпись ЭП-ОВ, формируемая от имени органа власти, участвующего в межведомственном взаимодействии и выступающего в роли отправителя ответа, подписывает блок данных ответа. С помощью ЭП-ОВ обеспечивается целостность ответа и идентификация ИС отправителя.
5.2.5.	Структура сообщения с ответом, которое ИС получателя ответа получает из СМЭВ
5.2.5.1.	Простые протоколы обмена
При получении из СМЭВ SOAP-ответа, ИС получателя ответа проверяет в СМЭВ-конверте наличие элемента //ResponseMessage (присутствует, если очередь ответов не пуста). Элемент //ResponseMessage включает три элемента (рисунок 27):
	блок данных СМЭВ-конверта (//Response);
	блок содержимого вложений, передаваемых MTOM (//AttachmentContentList);
	электронная подпись СМЭВ (//SMEVSignature).
 
Рисунок 30– Общая структура сообщения с ответом, которое ИС получателя ответа получает из СМЭВ (без указания элементов RequestRejected, RequestStatus или AsyncProcessingStatus) (простой протокол обмена)



5.2.5.1.1.	Блок данных СМЭВ-конверта
Блок данных СМЭВ-конверта //Response содержит элементы:
	блок данных ответа //SenderProvidedResponseData, сформированный отправителем ответа (раздел 5.2.4);
	ЭП-ОВ, которой ИС отправителя подписан блок данных ответа, а также пять дополнительных элементов, добавленных СМЭВ (на рисунке 26 выделены заливкой белым цветом);
	идентификатор запроса (//OriginalMessageId), заполняемый СМЭВ значением идентификатора инициирующего запроса, на который пришёл ответ;
	код транзакции (//OriginalTransactionCode), заполняемый СМЭВ значением кода транзакции, в рамках которой пришёл ответ;
	идентификатор первичного запроса (//ReferenceMessageID), заполняемый СМЭВ значением идентификатора запроса, являющегося источником цепочки запросов. Если в цепочке запросов всего один запрос, то этот элемент заполняется значением элемента //OriginalMessageId;
	блок маршрутной информации СМЭВ (//MessageMetaData) с метаданными, включающими элементы:
	идентификатор сообщения c ответом, которое ИС участника получает из СМЭВ (//MessageId). Данный идентификатор необходимо использовать для подтверждения сообщения методом AckRequest.
	тип сообщения (запрос «REQUEST», ответ «RESPONSE», рассылка «BROADCAST») (//MessageType);
	информация об отправителе сообщения (//Sender), включающая вычисляемую на основе анализа сертификата ЭП-ОВ мнемонику отправителя, предназначенную для машинной обработки (Mnemonic);
	метка времени получения в СМЭВ сообщения от ИС отправителя (//SendingTimeStamp). Содержит дату и время, начиная с которого отсчитывается срок исполнения запроса;
	информация об отправителе сообщения (//Recipient), определённая маршрутизатором и включающая мнемонику получателя, предназначенную для машинной обработки (//Mnemonic);
	дата и время доставки сообщения получателю (//DeliveryTimeStamp).
	блок заголовков вложений, передаваемых посредством ФХ (//FSAttachmentsList), с данными, включающими элементы:
	идентификатор вложения (//uuid);
	имя пользователя (в совокупности с паролем необходимо для получения доступа к файловому хранилищу СМЭВ, чтобы скачать файл вложения) (//UserName);
	пароль (в совокупности с именем пользователя необходим для получения доступа к файловому хранилищу СМЭВ, чтобы скачать файл вложения) (//Password);
	имя файла вложения (//FileName).


5.2.5.1.2.	Блок содержимого вложений
Структура блока содержимого вложений, передаваемых MTOM //AttachmentContentList, аналогична одноименному элементу в сообщении с ответом, направленном из ИС отправителя в СМЭВ (раздел 5.2.4).
5.2.5.1.3.	Электронная подпись СМЭВ
Структура ЭП-СМЭВ (//SMEVSignature) аналогична одноименному элементу в //RequestMessage запроса (раздел 5.2.3).
С помощью ЭП-СМЭВ обеспечивается целостность сообщения с ответом на всем пути от отправителя до получателя, подтверждение поступления ответа из СМЭВ во время, указанное в метке времени, и право на обращение ИС получателя за ответом.
5.2.5.2.	Директивные протоколы обмена
Структура сообщения с ответом, которое ИС получателя ответа получает из СМЭВ, от ИС отправителя, приведена на рисунке 28.
  
Рисунок 31– Общая структура сообщения с ответом, которое ИС получателя получает из СМЭВ (без указания элементов RequestRejected, RequestStatus или AsyncProcessingStatus) (директивные протоколы обмена)
Структура сообщения аналогичная простому протоколу обмена и включает в себя
	блок данных СМЭВ-конверта (//Response);
	блок содержимого вложений, передаваемых MTOM (//AttachmentContentList);
	электронная подпись СМЭВ (//SMEVSignature).
5.2.5.2.1.	Блок данных СМЭВ-конверта
Блок данных СМЭВ-конверта (//Response) аналогичен простому протоколу обмена, за исключением:
	блок данных ответа //SenderProvidedResponseData, сформированный отправителем ответа (раздел 5.2.4) не содержит блоков заголовков и ЭП-СП вложений, передаваемых посредством ФХ или МТОМ. Они располагаются в записях реестра;
	электронную подпись должностного лица (//PersonalSignature) допускается не указывать, при обязательном наличии ЭП-СП в каждой записи реестра.
5.2.5.2.2.	Блок содержимого вложений
Структура блока содержимого вложений, передаваемых MTOM //AttachmentContentList, аналогична одноименному элементу в сообщении с ответом, направленном из ИС отправителя ответа в СМЭВ (раздел 5.2.4).
5.2.5.2.3.	Электронная подпись СМЭВ
Структура ЭП-СМЭВ (//SMEVSignature) аналогична одноименному элементу в //RequestMessage запроса (раздел 5.2.3).
С помощью ЭП-СМЭВ обеспечивается целостность сообщения с ответом на всем пути от отправителя до получателя, подтверждение поступления ответа из СМЭВ во время, указанное в метке времени, и право на обращение ИС получателя за ответом.
5.2.6.	Структура сообщения с ответом о статусе ранее отправленного в СМЭВ сообщения, которое ИС инициатора получает из СМЭВ
При получении из СМЭВ SOAP-ответа, ИС получателя проверяет в СМЭВ-конверте наличие элемента //ResponseMessage (присутствует, если очередь ответов не пуста). Элемент //ResponseMessage включает два элемента (рисунок 29):
	блок данных СМЭВ-конверта (//Response);
	электронная подпись СМЭВ (//SMEVSignature).
 
Рисунок 32– Общая структура сообщения с блоком AsyncProcessingStatus, которое ИС получателя получает из СМЭВ
5.2.6.1.	Блок данных СМЭВ-конверта
Блок данных СМЭВ-конверта //Response содержит элементы:
	идентификатор запроса (//OriginalMessageId), заполняемый СМЭВ значением идентификатора запроса, на который высылается ответ;
	код транзакции (//OriginalTransactionCode), заполняемый СМЭВ значением кода транзакции, в рамках которой высылается ответ;
	идентификатор первичного запроса (//ReferenceMessageID), заполняемый СМЭВ значение идентификатора запроса, являющегося источником цепочки запросов. Если в цепочке запросов всего один запрос, то этот элемент заполняется значением элемента //OriginalMessageId;
	блок данных ответа //SenderProvidedResponseData, сформированный отправителем ответа;
	идентификатор сообщения, сгенерированный отправителем ответа (//SenderProvidedResponseData/MessageID). В сообщениях, сформированных по версии схемы СМЭВ 1.3 и содержащих статус обработки отправленного сообщения, значение будет совпадать с OriginalMessageId.
	блок маршрутной информации СМЭВ (//MessageMetaData) с метаданными (раздел 5.2.5.1).
Блок данных ответа включает три элемента, которые заполняются в СМЭВ:
	идентификатор сообщения (//MessageID), обязательный элемент, идентификатор сообщения в виде UUID, основанного на времени, сгенерированный отправителем. UUID необходимо генерировать по версии 1 (см. п. 4.2 «Algorithms for Creating a Time-Based UUID» RFC 4122 https://datatracker.ietf.org/doc/html/rfc4122#section-4.2);
	адрес доставки ответа (//To), обязательный элемент, в который копируется содержимое элемента //GetRequestResponse/RequestMessage/ Request/ReplyTo запроса, на который отправляется ответ;
	блок данных статуса сообщения (//AsyncProcessingStatus) содержит элементы:
	идентификатор сообщения (//OriginalMessageId), сформированный отправителем сообщения;
	категория статуса (//StatusCategory), содержащий одно из следующих возможных значений:
	requestIsQueued (Сообщение находится в очереди асинхронной обработки / Сообщение помещено в очередь получателя (запрос или ответ));
	requestIsRejectedBySmev (Сообщение не прошло асинхронную обработку);
	messageIsArchived (Сообщение, получение которого не подтверждено получателем, переведено в архив);
	messageIsDelivered (Сообщение получено получателем, т.е. получение сообщения подтверждено получателем).
Более подробный перечень возможных значений указан в версиях схем СМЭВ smev-message-exchange-basic-1.X в Приложении М текущего документа.
	уведомление об описании статуса сообщения (//StatusDetails), содержащий описание статуса сообщения;
	элемент типа //SmevFault, содержащий в себе элемент //Code, определяющий код ошибки, и элемент //Description, содержащий описание ошибки.
5.2.6.2.	Электронная подпись СМЭВ
Структура ЭП-СМЭВ //SMEVSignature аналогична одноименному элементу в //RequestMessage запроса (раздел 5.2.3).
С помощью ЭП-СМЭВ обеспечивается целостность сообщения с ответом на всем пути от отправителя до получателя, подтверждение поступления ответа из СМЭВ во время, указанное в метке времени, и право на обращение ИС инициатора за ответом.
5.2.7.	Структура сообщения с вложением
Сведения могут передаваться как в теле сообщения, так и во вложении. Для передачи неструктурированной информации (файлы бинарного формата) могут использоваться механизм МТОМ и файловое хранилище СМЭВ (раздел 7). При передаче структурированной информации файловое хранилище СМЭВ целесообразно использовать только в случаях, если суммарный объем передаваемой информации, а именно СМЭВ заголовок с передаваемым файлом, превышает технологическое ограничение СМЭВ – 5 МБ, но объем вложения не более 1 ГБ.
Использование вложений включает в себя два этапа:
	описание форматов вложений, которые предполагается передавать;
	непосредственная передача вложений.
Описание форматов вложений (паспортов вложений) выполняется на этапе проектирования XSD-описания протокола обмена, с обязательным соблюдением требований и ограничений указанных в документе «Требования к XML-схемам, регистрируемым в СМЭВ», размещённом на Технологическом портале СМЭВ3 (https://smev3.gosuslugi.ru/). Состав данных паспорта вложения описан в разделе «Проектирование форматов передаваемых данных» указанного документа.
Непосредственная передача вложений осуществляется путём заполнения блоков:
	Блок заголовков и ЭП-СП вложений, передаваемых посредством ФХ (//RefAttachmentHeaderList);
	Блок заголовков и ЭП-СП вложений, передаваемых МТОМ (//AttachmentHeaderList);
	Блок содержимого вложений, передаваемых МТОМ (//AttachmentContentList).
При использовании простого протокола обмена заголовки и ЭП-СП вложений могут располагаться только в блоке данных запроса (/SenderProvidedRequestData).
При использовании директивного протокола обмена заголовки и ЭП-СП вложений могут располагаться только в записях реестра (/Registry/RegistryRecord/Record).
Расположение непосредственно содержимого вложений не зависит от используемого протокола обмена.
5.2.7.1.	Блок заголовков и ЭП-СП вложений, передаваемых посредством файлового хранилища
Структура блока заголовков и ЭП-СП приведена на рисунке 30.
 
Рисунок 33 – Структура блока заголовков и ЭП-СП, передаваемых посредством ФХ
Количество передаваемых вложений в сообщении ограничено. В случае превышения допустимого количества на стороне участника будет получено синхронное уведомление с текстом «SMEV-200:Количество ФТП-вложений превышает допустимое». Целевой лимит количества вложений указан в синхронном ответе в блоке PermittedTotalAttachmentSize. На текущий момент допустимый лимит – 150 вложений. 
Блок заголовков и ЭП-СП включает следующие элементы:
	Ссылка на директорию (//uuid), расположенную в ФХ, содержащую размещённый в ней передаваемый файл. Обязательный элемент;
	Имя файла (//FileName), находящегося в упомянутой выше директории. Необязательный элемент;
	Идентификатор паспорта передаваемого вложения (//NamespaceUri). Для простых протоколов обмена - необязательный элемент. Для директивных протоколов обмена - обязательный;
	Хэш передаваемого файла (//Hash). Обязательный элемент;
	Тип передаваемого файла (//MimeType). Обязательный элемент. Тип вложения определяется согласно RFC 2045, RFC 2046, RFC 4288, RFC 4289 и RFC 4855. По значению, указанному в MimeType, СМЭВ выявляет структурированные вложения и проводит их ФЛК. Структурированные вложения имеют тип application/xml;
	Отсоединённая ЭП передаваемого файла в формате PKCS#7 (//SignaturePKCS7). Необязательный элемент;
	Блок, содержащий перечень файлов в архиве (//Archive). Для простых протоколов обмена - необязательный элемент. Для директивных - обязательный, если передаётся архив. В состав информации по каждому файлу входит наименование файла (//Name) и идентификатор паспорта этого файла (//NamespaceUri).
Пример использования:
<RefAttachmentHeaderList>
	<RefAttachmentHeader>
		<uuid>04a5bc90-5e81-11e4-a9ff-d4c9eff07b77</uuid>
		<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/archive/1.0.0</NamespaceUri>
		<Hash>VpT3sc999CJI8TVYX35ZZfXpc/dCWO5e1MgoUg8YiJA=</Hash>
		<MimeType>application/zip</MimeType>
		<SignaturePKCS7>UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</SignaturePKCS7>
		<Archive>
			<File>
				<Name>attach.jpg</Name>
				<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/jpg/1.0.0</NamespaceUri>
			</File>
			<File>
				<Name>increment.xml</Name>
				<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/increment/1.0.0</NamespaceUri>
			</File>
		</Archive>
	</RefAttachmentHeader>
</RefAttachmentHeaderList>
5.2.7.2.	Блок заголовков и ЭП-СП вложений, передаваемых МТОМ
Структура блока заголовков и ЭП-СП приведена на рисунке 31.
 
Рисунок 34 – Структура блока заголовков и ЭП-СП, передаваемых МТОМ
Блок заголовков и ЭП-СП включает следующие элементы:
	Ссылка на файл, передаваемый МТОМ (//AttachmentHeaderList). Обязательный элемент, в котором указывается фактический Id вложения (Content-Id), формируемый при создании файла бинарного формата. Значение должно соответствовать значению, указанному в элементе //AttachmentContentList/AttachmentContent/Id;
	Идентификатор паспорта передаваемого вложения (//NamespaceUri). Для простых протоколов обмена - необязательный элемент. Для директивных протоколов обмена - обязательный;
	Тип передаваемого файла (//MimeType). Обязательный элемент. Тип вложения определяется согласно RFC 2045, RFC 2046, RFC 4288, RFC 4289 и RFC 4855. По значению, указанному в MimeType, СМЭВ выявляет структурированные вложения и проводит их ФЛК. Структурированные вложения имеют тип application/xml;
	Отсоединённая ЭП передаваемого файла в формате PKCS#7 (//SignaturePKCS7). Необязательный элемент;
	Блок, содержащий перечень файлов в архиве (//Archive). Для простых протоколов обмена - необязательный элемент. Для директивных - обязательный, если передаётся архив. В состав информации по каждому файлу входит наименование файла (//Name) и идентификатор паспорта этого файла (//NamespaceUri).
Пример использования блока заголовков и ЭП-СП вложений приведён на рисунке 32.
<AttachmentHeaderList>
	<AttachmentHeader>
		<contentId>attach.zip</contentId>
		<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/archive/1.0.0</NamespaceUri>
		<MimeType>application/zip</MimeType>
		<SignaturePKCS7>UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</SignaturePKCS7>
		<Archive>
			<File>
				<Name>attach.jpg</Name>
				<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/jpg/1.0.0</NamespaceUri>
			</File>
			<File>
				<Name>increment.xml</Name>
				<NamespaceUri>urn://x-artefacts-data-provider/protex/attachments/increment/1.0.0</NamespaceUri>
			</File>
		</Archive>
	</AttachmentHeader>
</AttachmentHeaderList>
Рисунок 35 – Пример использования блока заголовков и ЭП-СП вложений
5.2.7.3.	Блок содержимого вложений, передаваемых МТОМ
Структура блока содержимого вложений приведена на рисунке 33.
 
Рисунок 36 – Структура блока содержимого вложений
Блок содержимого вложений включает следующие элементы:
	Идентификатор вложения (//Id). Обязательный элемент. Должен соответствовать фактическому Id вложения (Content-Id), формируемом при создании файла бинарного формата;
	Содержимое файла (//Content), в формате base64. Обязательный элемент.
После оптимизации MTOM/XOP содержимое элемента //Content типа //AttachmentContentType должно представлять собой значение вида:
<xop:include xmlns:xop='http://www.w3.org/2004/08/xop/include' href=“…”/>,
где значение конструкции «href» должно удовлетворять требованиям спецификации XML-binary Optimized Packaging и должно соответствовать фактическому Content-Id вложения бинарного формата.
Пример использования блока заголовков и ЭП-СП вложений приведён на рисунке 34.
<AttachmentContentList>
	<AttachmentContent>
		<Id>file_request.jpg</Id>
		<Content>
			<xop:Include href="cid:file_request.jpg" xmlns:xop="http://www.w3.org/2004/08/xop/include"/>
		</Content>
	</AttachmentContent>
</AttachmentContentList

 		Рисунок 37 – Пример использования блока заголовков и ЭП-СП вложений

5.2.8.	Особенности схем сервиса СМЭВ
Для взаимодействия со СМЭВ доступен единый электронный сервис в версиях 1.1, 1.2 и 1.3 (каждая версия единого электронного сервиса доступна по отдельному адресу, который следует уточнить в службе эксплуатации СМЭВ). 
Для корректного взаимодействия рекомендуется, чтобы оба участника обмена (Инициатор и Ответчик) использовали адрес для обращения к Транспорту СМЭВ с одним endpoint. Например, запрос, направленный в адрес вида http://host:7500/smev/v1.2/ws по методу Send и Виду сведения, поддерживающему только версию схем Единого сервиса 1.2, не может быть извлечен из очереди ИС запросом, направленным по методу Get по версии схем 1.3 в адрес Единого сервиса вида http://host:5000/transport_1_0_2/. Для выбора адреса необходимо определить какую версию Методических рекомендаций поддерживает Вид сведений на Технологическом портале СМЭВ 3 (https://smev3.gosuslugi.ru/portal/) в разделе «Версия МР». Протоколы обмена с версией, отличной от 3.5, способны поддерживать версии схем Единого сервиса 1.1/1.2. 

5.2.8.1.	Версия 1.2
Все участники взаимодействия, желающие остаться на версии схемы 1.1, смогут отправлять сообщения и получать сообщения из своих очередей доставки через единый электронный сервис в версии 1.1. При этом не доступна возможность получения сообщений из статусной очереди (GetStatus) и возможность получать сообщения со статусами в ответах.

Все участники взаимодействия, желающие перейти на версию схемы 1.2, смогут отправлять сообщения, получать сообщения из своих очередей доставки и статусных очередей через единый электронный сервис в версии 1.2. При этом для осуществления информационного взаимодействия по какому-либо виду сведений с применением новых полей схемы сервиса версии 1.2 необходимо, чтобы на указанную версию схемы перешли инициатор и ответчик по этому виду сведений.
В случае, когда Инициатор и Ответчик работают по разным версиям Единого сервиса (1.1 и 1.2), на стороне получателя сообщения необходимо отключить проверку ЭЦП отправителя сообщения, осуществлять проверку только подписи СМЭВ. В противном случае, для корректной валидации ЭЦП отправителя сообщения, Инициатору и Ответчику необходимо работать по одной версии (1.1 или 1.2).
Перечень новых элементов схемы 1.2 приведён в таблице 2.
Таблица 2 – Перечень новых элементов схемы 1.2
№	Элемент	Описание изменения	Комментарий
1	Новые элементы схемы 1.2
1.1	ReferenceMessageID	Идентификатор сообщения, порождающего цепочку сообщений.
Включён в содержательную часть:
•	запроса SenderProvidedRequestData (раздел 5.2.2);
•	ответа с сообщением из очереди доставки ответов Response (раздел 5.2.5).
Является опциональным элементом, используется для формирования цепочки запросов в рамках одной бизнес-транзакции, путём помещения в данное поле ID первого сообщения в цепочке запросов (раздел 5.2.2).

1.2	TransactionCode	Идентификатор кода транзакции запроса.
Включён в содержательную часть запроса SenderProvidedRequestData.	Описание использования приведено в разделе 10

1.3	OriginalTransactionCode	Идентификатор кода транзакции ответа с сообщением из очереди доставки ответов Response (раздел 5.2.5).
Заполняется автоматически СМЭВ на основании кода транзакции запроса
1.4	RequestStatus	Элемент, определяющий структуру бизнес-статуса обработки ответа на запрос.
Включён в содержательную часть ответа на запрос SenderProvidedResponseData как <choice> элемент (раздел 5.2.4).
Элемент включает следующий набор параметров:
•	Код бизнес-статуса запроса (обязательный параметр);
•	Пару параметров «ключ-значение» (опциональный параметр);
•	Расширенное описание бизнес-статуса запроса (обязательный параметр).
1.5	AsyncProcessingStatus	Элемент, определяющий структуру ошибки асинхронной обработки запроса.
Включён в содержательную часть ответа на запрос SenderProvidedResponseData как <choice> элемент (раздел 5.2.4).
Используется как элемент выбора в конверте SenderProvidedRequestData (раздел 5.2.2).

1.6	SmevFault	Элемент, определяющий структуру пары параметров «код»-«описание» ошибки. Включён в содержательную часть AsyncProcessingStatus (раздел 5.2.4).
Заполняется кодом ошибки.
Элемент конверта AsyncProcessingStatus. Входит в содержательную часть ответа на запрос сообщения из статусной очереди SmevAsyncProcessingMessage и содержится в элементе AsyncProcessingStatusData. Также элемент AsyncProcessingStatus включен в содержательную часть ответа на запрос SenderProvidedResponseData как элемент типа <choice>(раздел 5.2.4) .
Является опциональным элементом
1.7	EOL	Элемент, определяющий время актуальности сообщения.
Включён в содержательную часть запроса SenderProvidedRequestData (раздел 5.2.2).
Если отправляемое сообщение должно иметь срок актуальности, то в элемент EOL следует добавить метку времени истечения срока актуальности сообщения с указанием временной зоны (раздел 5.2.2).
Является опциональным элементом
1.8	AsyncProcessingStatusData	Конверт для AsyncProcessingStatus	Используется только для ошибок push-нотификации (раздел 11). Статусы обработки сообщений возвращаются непосредственно в ответах СМЭВ.
1.9	RejectionReasonCode	Подэлемент – RejectionReasonCode элемента RequestRejected может принимать новое значение FAILURE	Код ошибок запроса может возвращать значение FAILURE (уведомление об отсутствии сведений).

5.2.8.2.	Версия 1.3
Версия 1.3 введена для обеспечения возможности использования директивных протоколов обмена.
Все участники, желающие остаться на более старых версиях сервиса (1.1 или 1.2), могут пользоваться директивными протоколами обмена, с некоторыми условиями:
	При отправке сообщений отсутствует возможность использовать любые варианты маршрутизации, использующие директивы: общая реестровая по мнемоникам, реестровая по мнемоникам, фрагментарная рассылка;
	При получении сообщений, отправленных с использованием сервиса версии 1.3, необходимо на стороне ИС получателя распределять вложения по записям реестра.
Добавлен элемент, содержащий директиву с маршрутной информацией (//SendRequestRequest/Routing). Структура директивы с маршрутной информацией представлена на рисунке 35.
 
Рисунок 38 – Структура директивы с маршрутной информацией
Описание элементов директивы приведено в разделе 5.2.2.
Для описания реестра записей, передающихся в блоке структурированных сведений (//MessagePrimaryContent) добавлен элемент //Registry (рисунок 36).
 
Рисунок 39 – Структура директивы «Реестровая запись»
Расширено описание типа AttachmentHeaderList, предназначенного для передачи заголовков и ЭП-СП вложений, передаваемых МТОМ:

Было:	 
Стало:	 

Рисунок 40 – Описание типа AttachmentHeaderList
Расширено описание типа RefAttachmentHeaderList, предназначенного для передачи заголовков и ЭП-СП вложений, передаваемых FTP: 

Было:	 
Стало:	 
Рисунок 41 – Описание типа RefAttachmentHeaderList
Все участники взаимодействия, желающие перейти на версию схемы 1.3, смогут отправлять сообщения, получать сообщения из своих очередей доставки и статусных очередей через единый электронный сервис в версии 1.3. При этом для осуществления информационного взаимодействия по какому-либо виду сведений с применением новых полей схемы сервиса версии 1.3 необходимо, чтобы на указанную версию схемы перешли инициатор и ответчик по этому виду сведений.
Для сообщения, направленного в адрес системы - ответчика по маршрутизациям, описанным в пп.4.6.2.3 и пп.4.6.3.3 , содержание блока SenderInformationSystemSignature соответствует аналогичному блоку в инициирующем сообщении, полученном от системы - отправителя. В связи с особенностями маршрутизации блок SenderProvidedRequestData в инициирующем сообщении и в сообщении, фактически направленном в адрес системы - ответчика, могут отличаться. При взаимодействии по данным видам маршрутизаций системе - ответчику необходимо отключить проверку ЭЦП отправителя сообщения.
В случае, когда Инициатор и Ответчик работают по разным версиям Единого сервиса (1.1/1.2 и 1.3), на стороне получателя сообщения необходимо отключить проверку ЭЦП отправителя сообщения, осуществлять проверку только подписи СМЭВ. В противном случае, для корректной вариации ЭЦП отправителя сообщения, Инициатору и Ответчику необходимо работать по одной версии (1.3). 
 

5.3.	Организация очередей
5.3.1.	Получение сообщения без фильтрации по протоколу обмена
Для получения сообщения из очереди без фильтрации по протоколу обмена необходимо вызвать метод GetRequest (или GetResponse) единого электронного сервиса СМЭВ, без указания параметров MessageTypeSelector/NamespaceURI и MessageTypeSelector/RootElementLocalName. 
В целях снижения вычислительной нагрузки, обусловленной криптооперациями по расчету и шифрованию хэша электронной подписи, допускается использование сообщений GetRequest (или GetResponse) значение элемента метка времени  (MessageTypeSelector /Timestamp) в которых, отстает от момента отправки этого сообщения в Единый Сервис на значение не превышающее  установленный норматив -  допустимая дельта действия временной метки. 
После истечения срока действия временной метки, сообщение необходимо сформировать повторно. Со значением допустимой дельты можно ознакомиться на Технологическом портале СМЭВ 3 в разделе «Часто задаваемые вопросы» (расположен по ссылке) пункт «Дополнительная проверка Timestamp в механизм обработки сообщений на стороне СМЭВ 3» или направить запрос в Службу эксплуатации СМЭВ  в адрес Ситуационного центра (На почту sd@sc.digital.gov.ru или через Личный кабинет https://sc.digital.gov.ru)
5.3.2.	Получение сообщения с фильтрацией по протоколу обмена
Чтобы использовать сценарий фильтрации по версии протокола обмена, необходимо при вызове метода GetRequest (GetResponse) заполнить параметры MessageTypeSelector/NamespaceURI и MessageTypeSelector/RootElementLocalName. Для корректного получения сообщения с фильтрацией необходимо заполнять оба параметра, не допускается наличие одного из заполненных элементов. В качестве аргумента MessageTypeSelector/NamespaceURI передаётся target namespace схемы, в которой описан элемент, а в качестве аргумента MessageTypeSelector/RootElementLocalName – имя (local name) элемента. В случае, если УВ использует несколько версий протокола обмена, то фильтрация осуществляется по всем доступным версиям протокола обмена, вне зависимости от указания NamespaceURI.
Если описание формата протокол обмена имеет несколько версий, то можно указать qualified name элемента-запроса из любой версии описания. При этом будут выбираться все сообщения, соответствующие данному протоколу обмена, независимо от того, какой версии формата они соответствуют.
В методе GetResponse для задания протокола обмена можно использовать как qualified name элемента – запроса, так и qualified name элемента – ответа. Это же относится и к методу GetRequest. 
В целях снижения вычислительной нагрузки, обусловленной криптооперациями по расчету и шифрованию хэша электронной подписи, допускается использование сообщений GetRequest (или GetResponse) значение элемента метка времени  (MessageTypeSelector /Timestamp) в которых, отстает от момента отправки этого сообщения в Единый Сервис на значение не превышающее  установленный норматив -  допустимая дельта действия временной метки.  
После истечения срока действия временной метки, сообщение необходимо сформировать повторно. Со значением допустимой дельты можно ознакомиться на Технологическом портале СМЭВ 3 в разделе «Часто задаваемые вопросы» (расположен по ссылке) пункт «Дополнительная проверка Timestamp в механизм обработки сообщений на стороне СМЭВ 3» или направить запрос в Службу эксплуатации СМЭВ  в адрес Ситуационного центра (На почту sd@sc.digital.gov.ru или через Личный кабинет https://sc.digital.gov.ru)
Получение сообщений с фильтрацией по виду сведений возможно при размере очереди ИС, не превышающей рекомендованного в разделе 4.8 значения квоты.

5.3.3.	Подтверждение приёма сообщения
Особенностью организации очередей входящих сообщений в СМЭВ является необходимость подтверждения ИС УВ получения сообщения из СМЭВ. Если в течение 15 минут этого не происходит, то сообщение считается недоставленным и возвращается в очередь входящих сообщений.
Для подтверждения приёма сообщения необходимо использовать метод AckRequest с указанием в качестве аргумента значение MesageId из полученного сообщения.
Для подтверждения сообщений, направленных по Видам сведений, использующие директивный протокол обмена, необходимо использовать MesageId из блока MessageMetadata, который был получен в ответе по методу Get после попытки извлечения сообщения из очереди.
Удаление запросов из очереди на подтверждение получения запроса может происходить в двух случаях: если ИС ответчика прислала подтверждение получения запроса или истекло время ожидания подтверждения. 
В случае если в составе сообщения передается вложение, загруженное на файловое хранилище, время возвращения сообщения в очередь входящих сообщений зависит от размера файла в зависимости от таблицы коэффициентов:
Диапазон размера вложений	Коэффициент увеличения базового времени передоставки
Менее 1 Мб	1
1 Мб…10 Мб	2
10 Мб…100 Мб	3
100 Мб…500 Мб	4
500 Мб…1 Гб	5
Более 1 Гб	10
1 коэффициент равен 15ти минутам (Пример: В случае если направить сообщение с вложением весом 9 мб, срок передоставки сообщения составит 30 минут).

5.3.4.	Использование выделенной очереди (NodeID)

Для ИС УВ использующих многосерверную (многоузловую) архитектуру для отправки сообщений-запросов в СМЭВ и использующих один и тот же сертификат ЭП-ОВ, предоставляется возможность получения сообщения по NodeID (выделенному узлу). Функциональность доступна при обращении на следующие Единые адреса СМЭВ:
	http://172.20.3.12:5000/transport_1_0_2/
	http://smev3-n0.test.gosuslugi.ru:5000/transport_1_0_2/
	http://smev3-d.test.gosuslugi.ru:5000/transport_1_0_2/
Для получения сообщения из выделенного узла (NodeID) необходимо зарегистрировать выделенный узел ИС в СМЭВ, направив запрос в Ситуационный центр. 
В схеме запросов СМЭВ введен специальный элемент, в котором возможно указать имя выделенного узла: «NodeID» (//SendRequestRequest/SenderProvidedRequestData/NodeID). При получении сообщения-запроса с указанием выделенного узла СМЭВ 3.х маршрутизирует ответы на данный запрос в отдельную очередь доставки ответов.  Пример использования SendRequestRequest с указанным узлом информационной системы:
 <ns:SendRequestRequest>
   <ns:SenderProvidedRequestData>
    <ns:MessageID>d039de7e-3dc0</ns:MessageID>
    <ns:ReferenceMessageID>d0acbf6c-1433</ns:ReferenceMessageID>
    <ns:TransactionCode>9ap3paUN/gLPzgC1u</ns:TransactionCode>
    <ns:NodeID>Test</ns:NodeID>
       <basic:MessagePrimaryContent>
          <ns1:DataRequest>
              <ns1:Request>Request</ns1:Request>
                   </ns1:DataRequest>
              </basic:MessagePrimaryContent>
    </ns:SenderProvidedRequestData>
    <ns:CallerInformationSystemSignature>
      <signature/>
    </ns:CallerInformationSystemSignature>
    </ns:SendRequestRequest>
Где <ns:NodeID>Test</ns:NodeID> - узел информационной системы, в который будет направлен ответ на данный запрос.
Для получения ответа из выделенного узла необходимо использовать фильтрацию по NodeID. Чтобы использовать сценарий получения ответа из выделенного узла, необходимо при вызове метода GetResponse заполнить параметр MessageTypeSelector/NodeID. Пример:

<ns2:MessageTypeSelector xmlns:ns2="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.3" xmlns="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.3" Id="SIGNED_BY_CALLER">
	<ns2:Timestamp>2021-05-25T18:46:49.000+03:00</ns2:Timestamp>
	<ns2:NodeID> Test </ns2:NodeID>
</ns2:MessageTypeSelector>


5.3.5.	Получение уведомления из очереди статусов

Очереди статусов в СМЭВ закреплены за отправителями сообщений. В очередь статусов попадают статусные сообщения. Статусные сообщения – это сообщения, содержащие информацию о статусе обработки сообщения в СМЭВ. Основным механизмом доставки статусных сообщений об ошибках асинхронной обработки становятся системные ответы СМЭВ, получаемые методом GetResponse (см. п.5.2.6)

5.3.5.1.	Структура сообщения с запросом статусного сообщения из очереди статусов

Структура сообщения, соответствующая передаче в СМЭВ запроса от ИС отправителя на получение статусного сообщения из очереди статусов, приведена на рисунке ниже (Рисунок 42). 
 
Рисунок 42– Структура сообщения с запросом статусного сообщения, которое ИС отправителя сообщения передает в СМЭВ

СМЭВ-конверт с запросом сведений (//GetStatusRequest), направляемый ИС отправителя в СМЭВ для получения статусного сообщения из очереди статусов, включает следующие элементы:
	блок даты и времени отправки сообщения (//Timestamp), который включает сведения о дате и времени отправки сообщения для получения статусного сообщения из очереди статусов;
	электронная подпись органа власти (ЭП-ОВ) (//CallerInformationSystemSignature).

 
5.3.5.2.	Структура статусного сообщения из очереди статусов

Структура статусного сообщения, соответствующая передаче из очереди статусов СМЭВ уведомления ИС отправителя, приведена на рисунке ниже (Рисунок 43). 
 
Рисунок 43– Структура статусного сообщения, которое ИС отправителя сообщения получает из СМЭВ
СМЭВ-конверт со сведениями (//GetStatusResponse), получаемый ИС отправителя из СМЭВ, включающий уведомление из очереди статусов, содержит следующие элементы:
	блок данных СМЭВ-конверта //AsyncProcessingStatusData, содержащий в себе блок статуса сообщения //AsyncProcessingStatus и заполняемый СМЭВ;
	электронная подпись СМЭВ (далее - ЭП-СМЭВ) (//SMEVSignature), заполняемый СМЭВ.
Блок //AsyncProcessingStatus содержит элементы:
	идентификатор сообщения (//OriginalMessageId), сформированный отправителем сообщения;
	категория статуса (//StatusCategory), содержащий значение «сancelled» (push-нотификация);
	уведомление об описании статуса сообщения (//StatusDetails), содержащий описание статуса сообщения;
	элемент типа //SmevFault, содержащий в себе элемент //Code, определяющий код ошибки, и элемент //Description, содержащий описание ошибки.


5.4.	Интенсивность обращений информационной системы Участника взаимодействия к методам Единого сервиса
Минимальные значения интенсивности обращений к методам Единого сервиса по умолчанию ограничены следующими лимитами:
Метод Единого Сервиса	Максимальное количество обращений в секунду
SendRequestRequest 	10
SendResponseRequest	10
GetRequestRequest	30
GetResponseRequest	30
AckRequest	20

В исключительных случаях Минцифры России оставляет за собой право установить минимальные значения интенсивности обращений к методам Единого сервиса. При установке минимальных значений интенсивности обращений к методам Единого сервиса осуществляется предварительное уведомление УВ. При штатной работе СМЭВ уведомление осуществляется не позднее чем за неделю до установки лимита. В случае возникновения внештатной ситуации уведомление УВ осуществляется не позднее календарного дня с момента изменения лимита.
После достижения лимита по одному из методов обработка обращений по нему может быть прекращена до подтверждения, что в течение 1 минуты информационная система не превышала установленный лимит. Перерасчет соблюдения лимита совершается в СМЭВ ежесекундно на основании статистики количества обращений за последнюю минуту динамически. При этом разблокировка отправки таких обращений ИС Участника взаимодействия производится автоматически при соблюдении лимита отправки обращений к методам Единого Сервиса СМЭВ. 
По обращениям, отправленным после превышения лимита, Участник будет получать синхронные статусные уведомления с кодом «SMEV-100: Технологический доступ к СМЭВ временно отозван в связи с нарушением установленного лимита обращений в систему». 
В случае получения сообщения об ошибке по методам SendRequestRequest/ SendResponseRequest Участнику рекомендуется выполнить следующие операции:
	Снизить интенсивность обращений в секунду;
	Сгенерировать новый уникальный идентификатор сообщения (MessageId);
	Оставить без изменений данные элемента MessagePrimaryContent;
	Выполнить переподписание элемента SenderProvidedRequestData;
	Выполнить переотправку вновь сгенерированного конверта обращений.
В случае получения сообщения об ошибке по методам GetRequestRequest/ GetResponseRequest и AckRequest Участнику рекомендуется cнизить интенсивность обращений в секунду и выполнить переотправку конверта.
Во избежание повторного получения сообщения об ошибке необходимо выполнять переотправку обращений к СМЭВ3 таким образом, чтобы количество таких обращений не превышало значение лимита. 
Для уточнения установленного лимита необходимо направить через личный кабинет СЦ запрос следующего типа: Соглашение/услуга - Инциденты ИС ИЭП; Тип запроса — Запрос/инцидент; Система ИЭП - СМЭВ 3.х. В теме запроса указать «Уточнения лимита интенсивности обращений к методам Единого сервиса СМЭВ 3».
В случае, если в рамках взаимодействия ИС с Единым сервисом СМЭВ 3 есть потребность выходить за установленный лимит, необходимо направить запрос в Минцифры России через СЦ и приложить заполненную заявку «Заявка на другие изменения ИС в СМЭВ 3», где нужно выбрать процедуру «Изменение интенсивности обращений к методам Единого сервиса СМЭВ 3» и привести обоснование увеличения лимитов.

6.	Использование электронной подписи
6.1.	Виды электронных подписей
В электронных сообщениях, передаваемых через СМЭВ, применяются следующие усиленные квалифицированные электронные подписи:
	электронная подпись, формируемая от имени должностного лица органа власти, участвующего в межведомственном взаимодействии или электронная подпись, формируемая заявителем (физическим лицом, индивидуальным предпринимателем или руководителем юридического лица) на ЕПГУ при подаче заявления на получение государственной услуги в электронном виде (далее - ЭП-СП). ЭП должностного лица должна обязательно содержать ОГРН органа власти;
	электронная подпись, формируемая от имени органа власти, участвующего в межведомственном взаимодействии (далее - ЭП-ОВ);
	электронная подпись, формируемая в СМЭВ при обработке электронных сообщений, передаваемых через СМЭВ (далее - ЭП-СМЭВ).
Примечание: в СМЭВ3.Х не используется штамп времени.
Формирование ЭП-ОВ аналогично простановке печати организации на подписанном должностным лицом документе. ЭП-СМЭВ в этом случае можно считать аналогом печати почтовой организации на конверте, в котором передаётся документ.
Электронная подпись ЭП-СП является необязательной, а её включение в состав сообщения может быть обусловлено наличием соответствующего нормативно закреплённого требования, в котором Владелец сведений устанавливает необходимость подписания запроса уполномоченным лицом. Соответствующее требование должно быть отражено в руководстве пользователя протокола обмена.
Электронные подписи ЭП-ОВ и ЭП-СМЭВ являются обязательными.

6.2.	Порядок использования электронных подписей
6.2.1.	Использование электронных подписей при передаче запроса
Передача запроса от системы-инициатора запроса к системе-ответчику, или рассылки от системы-издателя к системе-подписчику сопровождается операциями по формированию и проверке электронных подписей (рисунок 39).
Перед отправкой сообщения с запросом или рассылкой, должностное лицо ОВ может подписать (при необходимости) с помощью ЭП-СП два элемента в сообщении:
	Для простых протоколов обмена:
	блок структурированных сведений в соответствии с требованиями протокола обмена (подписывается содержимое элемента //MessagePrimaryContent, заключённое между открывающим и закрывающим тегами элемента). ЭП-СП хранится в элементе //PersonalSignature;
	блок содержимого вложений (файлы, размещённые в элементе //AttachmentContentList). Каждый из файлов, размещённых в элементе //AttachmentContentList, подписывается отдельной ЭП-СП. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //AttachmentHeaderList).
	Для директивных протоколов обмена:
	блок структурированных сведений в соответствии с требованиями протокола обмена (подписывается содержимое элемента //RecordContent, заключённое между открывающим и закрывающим тегами элемента). ЭП-СП хранится в элементе //PersonalSignature каждой записи реестра;
	блок содержимого вложений (файлы, размещённые в элементе //AttachmentContentList). Каждый из файлов, размещённых в элементе //AttachmentContentList, подписывается отдельной ЭП-СП. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //AttachmentHeaderList) каждой записи реестра.
В случае подачи заявления на получение государственной услуги в электронном виде, если по требованию ведомства оно должно быть подписано ЭП заявителя, ЕПГУ обеспечивает подписание ЭП-СП:
	Для простых протоколов обмена:
	каждого из файлов, передаваемых посредством MTOM. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //AttachmentHeaderList);
	каждого из файлов, передаваемых посредством ФХ. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //RefAttachmentHeaderList).
	Для директивных протоколов обмена:
	каждого из файлов, передаваемых посредством MTOM. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //AttachmentHeaderList) каждой записи реестра;
	каждого из файлов, передаваемых посредством ФХ. Соответствующие ЭП-СП передаются в блоке заголовков и ЭП-СП вложений (элемент //RefAttachmentHeaderList) каждой записи реестра.
Если ведомство не требует подписания заявления ЭП заявителя, то ЕПГУ обеспечивает подписание указанных выше вложений с помощью ЭП-ОВ, которая, в свою очередь, помещается в блок заголовков и ЭП-СП вложений, в качестве ЭП-СП.
Схема использования электронных подписей при передаче запроса от инициатора к ответчику сервиса представлена на рисунке 39.
 
Рисунок 44 – Использование электронных подписей при передаче запроса от инициатора к ответчику сервиса
Если содержимое вложений (файлы, размещённые в элементе //AttachmentContentList) с помощью ЭП-СП должностным лицом не подписываются, то содержимое вложений вместо ЭП-СП должно быть подписано с помощью ЭП-ОВ, которая, в свою очередь, помещается в блок заголовков и ЭП-СП вложений, вместо ЭП-СП вложений.
Перед подписанием запроса или рассылки с помощью ЭП-СП должна осуществляться проверка наличия и действительности сертификата у должностного лица ОВ. Ответственным за легитимность использования ЭП-СП является участник взаимодействия, отправляющий электронное сообщение.
Для директивных протоколов обмена содержимое подписываемого фрагмента записи реестра (данные, размещённые в элементах //Record: //RecordContent, //AttachmentHeaderList, //RefAttachmentHeaderList, //PersonalSignature) должно быть подписано с помощью ЭП-ОВ и размещено в элементе //RecordSignature. Допускается не накладывать подписи ЭП-ОВ на каждую запись реестра при условии доставки получателю сообщения всех записей реестра без изменения.
Сведения, сформированные в соответствии с требованиями Владельца сведений и подписанные, при необходимости, электронной подписью ЭП-СП, дополняются служебной информацией и вместе образуют блок данных запроса (элемент //SenderProvidedRequestData). Этот блок данных запроса подписывается ЭП-ОВ (элемент //CallerInformationSystemSignature).
На этом формирование электронных подписей запроса на стороне ИС инициатора или ИС получателя рассылки завершается. Запрос, подписанный ЭП-ОВ и, при необходимости, ЭП-СП, поступает в СМЭВ.
СМЭВ автоматически осуществляет:
	проверку ЭП-ОВ, в том числе входящего в состав ЭП-ОВ сертификата;
	идентификацию ИС отправителя запроса по сертификату ЭП-ОВ;
	проверку по реестру прав доступа СМЭВ (далее – матрица доступа) возможности обращения ИС отправителя к ИС получателя электронного сообщения;
	добавление блока маршрутной информации (в том числе метки времени получения запроса в СМЭВ);
	для директивных протоколов обмена СМЭВ производит формирование сообщений-клонов.
Для получения запроса из СМЭВ инициатор или получатель рассылки готовит обращение за очередным запросом и подписывает его ЭП-ОВ.
Получив от ответчика такое обращение, СМЭВ автоматически осуществляет:
	проверку ЭП-ОВ, в том числе входящего в состав ЭП-ОВ сертификата;
	идентификацию ИС, обратившейся за получением запроса, по сертификату ЭП-ОВ;
	проверку по матрице доступа возможности получения этой ИС электронного сообщения;
	добавление метки времени отправки запроса из СМЭВ и подписание запроса с помощью ЭП-СМЭВ.
Получив из СМЭВ сообщение с запросом, ИС инициатора или получателя рассылки проверяет сертификат и корректность формирования ЭП-СМЭВ. Успешность проверки гарантирует:
	поступление запроса из СМЭВ, а не из другого источника;
	поступление запроса в СМЭВ от ИС отправителя и из СМЭВ в ИС получателя во время, указанное в метках времени;
	право на обращение ИС отправителя к ИС получателя запроса;
	целостность запроса на всём маршруте от ИС отправителя до ИС получателя.
ИС инициатора или получателя рассылки может также проверить сертификат и корректность формирования ЭП-ОВ в запросе. Такая проверка избыточна, но в случае разбора инцидентов может быть полезна.
ИС инициатора или получателя рассылки может также проверить сертификат и корректность формирования ЭП-СП должностного лица ОВ - отправителя.
Получив запрос и выполнив необходимые проверки, инициатор или получатель рассылки должен подтвердить получение запроса. Для этого ИС инициатора или получателя рассылки готовит подтверждение получения запроса и подписывает его ЭП-ОВ. СМЭВ, получив подтверждение, проверяет ЭП-ОВ, которой подписано подтверждение, и по сертификату ЭП-ОВ идентифицирует ИС-отправителя сообщения-подтверждения. В случае успешной идентификации, СМЭВ по идентификатору сообщения определяет запрос, получение которого подтверждено, и выводит его из обработки.
6.2.2.	Использование электронных подписей при передаче ответа
Формирование и подписание с помощью ЭП ответов на запросы (рисунок 40) выполняется подобно формированию и подписанию с помощью ЭП запросов.
 
Рисунок 45 – Использование электронных подписей при передаче ответа от ответчика к инициатору
В отличие от формирования запроса, при подготовке и отправке ответа отправителем выступает уже не инициатор, а ответчик. Порядок подписания с помощью ЭП-СП сведений должностным лицом ОВ-ответчика такой же, как и в случае подписания ЭП-СП сведений в запросе. Подписание с помощью ЭП-ОВ блока структурированных данных ответа ответчика отличается только структурой подписываемого блока структурированных данных ответа (рисунок 40). Структура данных, которые добавляются к ответу в СМЭВ и, затем вместе с подписанным с помощью ЭП-ОВ блоком данных, подписываются в СМЭВ ЭП-СМЭВ, также имеет отличия от соответствующей структуры данных, которые добавляются в СМЭВ к запросу. К запросу СМЭВ добавляет элемент //ReplyTo, выполняющий функции обратного адреса, а к ответу добавляет элемент //OriginalMessageId, в который записывает идентификатор запроса, на который сформирован данный ответ.
Порядок подготовки инициатором подтверждения получения ответа, подписания его ЭП-ОВ и отправки подписанного подтверждения в СМЭВ аналогичен соответствующим действиям при подтверждении получения запроса ответчиком.
6.3.	Правила формирования ЭП
При формировании ЭП всех видов должны использоваться алгоритмы, представленные в таблице 3.
Таблица 3 – Алгоритмы
	Наименование	URI
Расчёт хеш-суммы, 256 бит	ГОСТ Р 34.11-2012	urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256
Формирование подписи  по алгоритму ГОСТ 34.10-2012, 256 бит	ГОСТ Р 34.10-2012	urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256
Канонизация (для XMLDSig)	Exclusive XML Canonicalization от 18 июля 2002	http://www.w3.org/2001/10/xml-exc-c14n#

Дополнительная трансформация  (для XMLDSig)	Нормализация СМЭВ	urn://smev-gov-ru/xmldsig/transform

Далее по тексту этого раздела, если имя элемента указано без пространства имён, подразумевается пространство имён urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.X.
6.3.1.	Подписи в формате PKCS#7
Формат PKCS#7 используется для подписания файлов, вложенных в сообщения.
Используется версия 1.5 спецификации PKCS#7 (RFC-2315).
На формат подписи накладываются следующие ограничения:
	Для корневого элемента ContentInfo единственный допустимый contentType - SignedData.
	Подпись должна быть detached (т.е. для элемента SignedData/contentInfo/contentType единственное допустимое значение - 1.2.840.113549.1.7.1, а элемент SignedData/contentInfo/content должен отсутствовать).
	Для вычисления message digest разрешён алгоритм ГОСТ Р 34.11-2012 (длина выхода 256 бит).
	Для генерации ЭП разрешён алгоритм ГОСТ Р 34.10-2012.
	Разрешено применять только X-509 сертификаты. Сертификаты PKCS#6 запрещены.
	Запрещено размещать более одной ЭП в PKCS#7-криптосообщении.
	В элементе SignerInfo должны присутствовать следующие authenticated attributes:
	contentType (1.2.840.113549.1.9.3), всегда имеет значение 1.2.840.113549.1.7.1.
	messageDigest (1.2.840.113549.1.9.4), содержит ГОСТ-digest подписываемого файла.
	В формируемой подписи authenticated attributes должны быть упорядочены согласно формату RFC 5652. Пример структуры порядка:
1)	1.2.840.113549.1.9.3
2)	1.2.840.113549.1.9.5
3)	1.2.840.113549.1.9.4
       На стороне УВ рекомендуется использовать библиотеку Bouncy Castle, которая позволяет исключить ошибки проверки подписи в части неверного порядка атрибутов при условии, что перед отправкой в СМЭВ УВ-отправитель сообщения сформировал верный порядок и корректно был рассчитан хэш.
Более формально большая часть данных ограничений описана в профиле формата PKCS#7, приложение В. В профиле также отражён тот факт, что в данном контексте формат PKCS#7 используется только для передачи ЭП и не используется для передачи зашифрованных данных и CRL. Профиль использует типы, определённые в стандарте PKCS#9 (RFC-2985).
6.4.	Электронные подписи субъектов взаимодействия - физических лиц
6.4.1.	Общие требования к электронной подписи, формируемой от имени должностных лиц органов власти при межведомственном информационном обмене
Сертификаты и ключи электронной подписи (п. 3 ст. 14 Федерального закона № 63-ФЗ «Об электронной подписи») должностного лица выдаются на имя физического лица представителя органа власти и применяются в информационных системах при оказании государственных и муниципальных услуг/исполнении государственных и муниципальных функций с использованием системы межведомственного электронного взаимодействия для формирования и (или) проверки электронных подписей.
Сертификаты электронной подписи должностного лица должны содержать ОГРН участника взаимодействия, от имени которого действует пользователь.
Данные подписи аналогичны собственноручным подписям этих сотрудников и подтверждают, в том числе, факт формирования электронного документа конкретным сотрудником ОВ в ИС ОВ.
Ответственность за хранение и использование ключа подписи ЭП-СП несёт должностное лицо. Порядок хранения и использования ключа подписи ЭП-СП контролируется представителями органов власти.
Перевыпуск существующих сертификатов ключей ЭП-СП должностных лиц ОВ для использования при межведомственном взаимодействии не является обязательным: возможно использовать ранее выданные и действительные сертификаты ключей подписи должностных лиц при условии, что они выданы одним из аккредитованных удостоверяющих центров, входящих в единое пространство доверия ЭП, формируемое Минцифрой РФ (https://e-trust.gosuslugi.ru/).
6.4.2.	Электронная подпись при межведомственном взаимодействии
ЭП-СП подписывает бизнес-данные сообщения, представленные в XML, а также приложенные файлы. Поскольку вложения передаются отдельно от бизнес-данных, ЭП-СП ставится отдельно на бизнес-данные, отдельно на каждый приложенный файл.
6.4.2.1.	Правила формирования электронной подписи сообщений
Правила формирования электронной подписи сообщений представлены в таблице 4.
Таблица 4 – Правила формирования электронной подписи сообщений
Формат подписи	XMLDSig detached (https://www.w3.org/TR/xmldsig-core/)

Трансформация, дополнительно к канонизации 	urn://smev-gov-ru/xmldsig/transform

Требования к форматированию	В XML-структуре подписи между элементами не допускается наличие текстовых узлов, в том числе переводов строки.
Подписываемый элемент	Для запросов и ответов - корневой элемент XML-документа, представляющего бизнес-данные запроса или ответа.
Размещение в сообщении	Для простых протоколов обмена:
•	запросы или рассылки: //SenderProvidedRequestData/PersonalSignature/dsig:Signature;
•	ответы: //SenderProvidedResponseData/PersonalSignature/dsig:Signature.
Для директивных протоколов обмена:
•	запросы или рассылки: //SenderProvidedRequestData/PersonalSignature/dsig:Signature и //SenderProvidedRequestData/MessagePrimaryContent/[Request]/Registry/RegistryRecord/Record/PersonalSignature/dsig:Signature
•	ответы: //SenderProvidedResponseData/PersonalSignature/dsig:Signature и //SenderProvidedResponseData/MessagePrimaryContent/[Response]/Registry/RegistryRecord/Record/PersonalSignature/dsig:Signature;
где [Request] и [Response] - имена элементов, содержащий директивы, соответственно, запроса и ответа.
Способ помещения подписи в сообщение	Передаётся клиентом веб-сервиса в структуре параметров методов SendRequest, SendResponse.
Способ извлечения подписи для проверки	ЭП извлекается и проверяется клиентом веб-сервиса.
6.4.2.2.	Правила формирования электронной подписи вложений
Правила формирования электронной подписи вложений представлены в таблице 5.
Таблица 5 – Правила формирования электронной подписи вложений
Формат подписи	PKCS#7
Ограничения на использование формата	Описаны в разделе 6.3.1

Способ помещения подписи в сообщение	Передаётся клиентом веб-сервиса в структуре параметров методов SendRequest, SendResponse.
Способ извлечения подписи для проверки	Подписи находятся в элементах //AttachmentHeaderList/AttachmentHeader/SignaturePKCS7 входящих сообщений, в том числе в записях реестра
6.5.	Электронные подписи субъектов взаимодействия - информационных систем
6.5.1.	Общие требования электронной подписи, формируемой от имени органа власти при межведомственном информационном обмене
Сертификаты и ключи электронной подписи (п. 3 ст. 14 Федерального закона от 6 апреля 2011 г. № 63-ФЗ «Об электронной подписи»), используемые для формирования электронных подписей органа власти выдаются на имя органа власти и применяются в информационных системах при оказании государственных и муниципальных услуг/исполнении государственных и муниципальных функций с использованием СМЭВ для формирования ЭП.
ЭП-ОВ аналогичны гербовой печати организации и подтверждают:
	факт формирования межведомственного запроса в информационной системе ОВ, подписавшего межведомственный запрос (далее – запрос);
	факт наличия у лица, сформировавшего в ИС ОВ электронный документ (запрос, рассылку либо ответ), соответствующих полномочий по подписанию/проверке ЭП на момент формирования электронного документа.
Орган власти, отправляющий электронный документ с использованием СМЭВ другому участнику взаимодействия, гарантирует наличие соответствующих полномочий у своего должностного лица на обращение к информационному ресурсу другого ведомства либо на подготовку ответа на поступивший запрос (в случае если ответ формируется не автоматически в ИС).
Количество формируемых на ОВ сертификатов ЭП-ОВ не может быть меньше количества информационных систем данного ОВ, непосредственно подключённых к СМЭВ.
Ответственность за хранение и использование ключа подписи ЭП-ОВ несёт должностное лицо. Порядок хранения и использования ключа подписи ЭП-ОВ контролируется представителями органов власти.
6.5.2.	Общие требования к электронной подписи, формируемой узлами СМЭВ
Сертификаты и ключи электронной подписи (п. 3 ст. 14 Федерального закона от 6 апреля 2011 г. № 63-ФЗ «Об электронной подписи»), используемые для формирования электронных подписей в сообщениях, проходящих через федеральный и региональные узлы СМЭВ, выдаются на имя оператора соответствующей системы межведомственного электронного взаимодействия и применяются для формирования ЭП.
Общие требования к электронной подписи, формируемой узлами СМЭВ, представлены в таблице 6.
ЭП-СМЭВ подтверждает:
	факт прохождения электронного сообщения через СМЭВ;
	факт аутентификации и авторизации в соответствии с правилами, указанными в реестре прав доступа к электронным сервисам (матрице доступа);
	неизменность сведений, внесённых в электронное сообщение СМЭВ.
Ответственность за хранение и использование ключа подписи ЭП-СМЭВ обеспечивается организационно-техническими мероприятиями оператора СМЭВ.
Общие требования к электронной подписи приведены в таблице 6.
Таблица 6 – Общие требования к электронной подписи, формируемой узлами СМЭВ
Формат подписи	XMLDSig detached
Трансформация, дополнительно к канонизации 	urn://smev-gov-ru/xmldsig/transform

Требования к форматированию	В XML-структуре подписи, между элементами не допускается наличие текстовых узлов, в том числе переводов строки.
Подписываемый элемент	•	Для запросов или рассылок – элемент //SendRequestResponse;
•	Для ответов – элемент //MessageMetadata;
•	При выборке сообщения из очереди – элемент //Request;
•	При подтверждении получения сообщения – ЭП СМЭВ отсутствует.
Размещение во входящем сообщении	Тело SOAP конверта, элемент //CallerInformationSystemSignature
6.5.3.	Правила формирования электронной подписи ИС
Общие требования к электронной подписи, формируемой ИС представлены в таблице 7.
Таблица 7 – Правила формирования электронной подписи ИС
Формат подписи	XMLDSig detached
Трансформация, дополнительно к канонизации 	urn://smev-gov-ru/xmldsig/transform

Требования к форматированию	В XML-структуре подписи, между элементами не допускается наличие текстовых узлов, в том числе переводов строки.
Подписываемый элемент	Для простых протоколов обмена:
•	Для запросов и рассылок – элемент //SenderProvidedRequestData;
•	Для ответов – элемент //SenderProvidedResponseData;
•	При выборке сообщения из очереди – элемент //MessageTypeSelector;
•	При подтверждении получения сообщения – элемент //AckTargetMessage.
Для директивных протоколов обмена:
•	Для запросов и рассылок – элемент //SenderProvidedRequestData и /Record каждой записи реестра;
•	Для ответов – элемент //SenderProvidedResponseData и /Record каждой записи реестра;
•	При выборке сообщения из очереди – элемент //MessageTypeSelector;
•	При подтверждении получения сообщения – элемент //AckTargetMessage.
Размещение в исходящем сообщении	Для простых протоколов обмена:
•	Элемент //CallerInformationSystemSignature
Для директивных протоколов обмена:
•	Элемент //CallerInformationSystemSignature и RecordSignature в каждой записи реестра.
Размещение во входящем сообщении	ЭП-ОВ отправителя попадает к получателю только при вызове методов GetRequest, GetResponse (выборка сообщения из очереди).
Она находится в теле SOAP-конверта, элемент //SenderInformationSystemSignature.
В случаях, когда одна из сторон сеанса обмена использует схему Единого сервиса версии 1.1, а другая схему версии 1.2 (раздел 5.2.8.1), или более позднюю, передача элемента //SenderInformationSystemSignature не осуществляется.
Для сообщения, направленного в адрес системы - ответчика по маршрутизациям, описанным в пп.4.6.2.3 и пп.4.6.3.3 , содержание блока SenderInformationSystemSignature соответствует аналогичному блоку в инициирующем сообщении, полученном от системы - отправителя. В связи с особенностями маршрутизации блок SenderProvidedRequestData в инициирующем сообщении и в сообщении, фактически направленном в адрес системы - ответчика, могут отличаться. При взаимодействии по данным видам маршрутизаций системе - ответчику необходимо отключить проверку ЭЦП отправителя сообщения.
6.5.4.	Подписание вложений электронной подписью информационной системы
В случае если сообщение содержит вложения и какие-либо из них не подписаны ЭП-СП, ИС должна перед отправкой сообщения подписать такие вложения ЭП-ОВ. Это необходимо для защиты от подмены вложений.
Подпись формируется по тем же правилам, что и ЭП-СП (таблица 8).
Таблица 8 – Правила формирования ЭП-ОВ
Формат подписи	PKCS#7
Ограничения на использование формата	Описаны в разделе «Подписи в формате PKCS#7»
Способ помещения подписи в сообщение	Передаётся клиентом веб-сервиса в структуре параметров методов SendRequest, SendResponse.
Способ извлечения подписи для проверки	Подписи находятся в элементах //AttachmentHeaderList/AttachmentHeader/SignaturePKCS7 входящих сообщений, в том числе в записях реестра
 
7.	Пересылка вложений с использованием файлового хранилища
В СМЭВ предусмотрена возможность передачи файлов отдельно от СМЭВ документа, вложениями для которого они являются. Для этого используется Файловое хранилище СМЭВ. Использование Файлового хранилища обязательно, если суммарный объем СМЭВ заголовка и передаваемых вложений превышает 5 МБ. 
При передаче файлов вложений с использованием Файлового хранилища объем передаваемых файлов вложений не должен превышать 1 ГБ.
Квота файлового хранилища для информационной системы выбирается Участником самостоятельно при регистрации ИС в размере до 1 ГБ.
 При необходимости установления квоты, превышающей 1 ГБ, Участнику требуется предоставить обоснованные расчёты. 
При достижении установленной квоты отправитель сообщения получит ошибку «Квота на файловое хранилище для получателя превышена!». 
Для увеличения / уменьшения установленной квоты необходимо направить отдельную заявку в адрес СТП СМЭВ с обоснованием причин изменений.
Загрузка файлов в ФХ осуществляется по протоколу FTP. 
Для взаимодействия с FTP реализованы два метода:
	Авторизация под анонимной учетной записью (Логин - anonymous);
	Авторизация под личной учетной записью. Логин соответствует мнемонике информационной системы Участника взаимодействия, пароль устанавливается самостоятельно через ЛК УВ. Процудура описана в Руководстве пользователя ЛК УВ.
Диаграмма последовательности отправки СМЭВ документа с вложением на примере использования анонимной учетной записи приведена на рисунке 46.
При передаче файлов вложения через ФХ загрузка файлов вложения предшествует отправке СМЭВ документа, к которому относится вложение см. рисунок  46.
При получении доступа к ФХ через учетную запись anonymous участнику взаимодействия предоставляется возможность создать директории, предназначенные для передачи файлов вложений. Созданные для передачи файлов вложений директории недоступны для других участников взаимодействия. Для каждого из передаваемых через ФХ файлов ИС отправителя должна создать отдельную директорию, в качестве названия которой должен быть использован UUID, сгенерированный по алгоритму, аналогичному генерации UUID сообщения (см. п. 4.2 «Algorithms for Creating a Time-Based UUID» RFC 4122 https://datatracker.ietf.org/doc/html/rfc4122#section-4.2).
Передаваемые файлы вложений загружаются в индивидуальные директории на FTP сервере ФХ. 
После загрузки файлов вложений ИС отправителя должна выполнить отключения от FTP сервера файлового хранилища. 
 

 

Рисунок 46 – Процесс передачи файлов посредством ФХ
Транспортная подсистема СМЭВ выполняет периодические проверки актуальности файлов, загруженных в файловое хранилище участниками взаимодействия. В рамках проверки актуальности выявляются и удаляются из ФХ все файлы, для которых справедливо следующее:
	файл загружен в ФХ более чем 30 минут назад;
	СМЭВ документ, имеющий ссылку на файл, не поступил в асинхронную обработку.  
Отправку СМЭВ документа, которому принадлежат загруженные файлы, необходимо осуществлять в течение 30 минут после загрузки файлов. Срок хранения, загруженного в файловое хранилище файла (до момента поступления в асинхронную обработку СМЭВ документа, содержащего ссылку на данный файл) составляет 30 минут. 
Ответственность за своевременную отправку СМЭВ документов, которым соответствуют загруженные в ФХ файлы вложений возлагается на Участника взаимодействия (отправителя СМЭВ документа). При несвоевременной отправке СМЭВ документа, соответствующий ему файл вложения будет удален из ФХ, что приведет к ошибке асинхронной обработки СМЭВ документа с вложением, передаваемым через ФХ. Сообщение об ошибке помещается очередь доставки ИС отправителя.
 Если в течение указанного срока хранения загруженного файла в ФХ, СМЭВ документ, содержащий ссылку на файл, не отправлен в СМЭВ, требуется выполнить повторную загрузку файла вложения в ФХ.
При отправке СМЭВ документа, которому принадлежат загруженные файлы, UUID созданных папок с файлами указываются в XML сообщении в соответствующих тегах SenderProvidedRequestData (для запроса) и SenderProvidedResponseData (для ответа). Данные теги включают элемент RefAttachmentHeaderList, который описывается как лист значений. 
Количество передаваемых вложений в сообщении ограничено. В случае превышения допустимого количества на стороне участника будет получено синхронное уведомление с текстом «SMEV-200:Количество ФТП-вложений превышает допустимое». Целевой лимит количества вложений указан в синхронном ответе в блоке PermittedTotalAttachmentSize. На текущий момент допустимый лимит – 150 вложений. 
В рамках асинхронной обработки СМЭВ документа, содержащего ссылки на файлы вложений, загруженные в ФХ, для каждого из файлов выполняются:
	проверка ЭП хэш отпечатка файла вложения, полученного в СМЭВ документе;
	проверка наличия в ФХ директории, имя которой соответствует UUID, полученному в СМЭВ документе;
	проверка соблюдения установленной квоты файлового хранилища;
	проверка совпадения вычисленного хэш отпечатка файла с хэш отпечатком, полученным в СМЭВ документе;
	перемещение файла в долговременное хранилище (в область доставки);
	форматно–логический контроль файла вложения.
Общий процесс получения СМЭВ документа с файлами в Файловом хранилище представлен на рисунке 42.

 

Рисунок 47 – Процесс получения файлов посредством Файлового хранилища
В составе входящего сообщения содержатся ссылки на пришедшие файлы - тег FSAttachmentsList, представляющий собой перечнь элементов FSAttachment значений типа FSAuthInfo, содержащих ссылку на файл (uuid), логин (UserName), пароль (Password), имя файла (FileName). В FileName передается значение вида /имя_файла, (например, /filename.txt) где «filename» – наименование передаваемого файла, txt – расширение. Для выгрузки файла на стороне ИС получателя необходимо сформировать запрос вида: ftp://логин:пароль@ имя_хоста_шарды:порт/имя_файла. В случае ошибок при выгрузки файла через проводник операционной системы необходимо использовать адрес вида: ftp://логин:пароль@ имя_хоста_шарды:порт/.
После доставки сообщения и при получении от ИС получателя подтверждения о получении сообщения СМЭВ очищает область доставки Файлового хранилища, доступ к доставленным файлам закрывается.
Срок хранения вложения в области доставки составляет 15 суток.
 
8.	Возврат статусных сообщений
Ответчик по сведению может в ответ на запрос возвращать неограниченное количество статусных сообщений или сообщений об отклонении запроса.
Данные сообщения, не содержащие вложений, выносятся на уровень схемы СМЭВ и не включаются в схемы протоколов обмена. При этом следует учитывать, что статусы запросов не связаны со статусами обработки заявлений, поданных с ЕПГУ, требования к которым устанавливаются в документе «Типовые технические требования к разработке интерактивных форм заявлений на предоставление государственных и муниципальных услуг» (опубликован по адресу http://techportal.gosuslugi.ru/).
Сообщение о статусе помещается в элемент //GetResponseResponse/ResponseMessage/Response/SenderProvidedResponseData/RequestStatus. В элемент StatusCode помещается код статуса, значение которого описывается в Руководстве пользователя протокола обмена. Статус может сопровождаться неограниченным количеством параметров (элемент StatusParameter), которые описываются парами «ключ-значение» (Key-Value). В поле StatusDescription можно поместить расширенное описание статуса.
Сообщение об отклонении запроса помещается в элемент //GetResponseResponse/ResponseMessage/Response/SenderProvidedResponseData/RequestRejected. В элемент RejectionReasonCode помещается код причины отклонения запроса. В элемент RejectionReasonDescription - человекочитаемое описание причины отклонения.
Если статусное сообщение содержит вложения, сведения о статусах и отказах могут быть включены в блок структурированных сведений. Для этого в схеме протокола обмена необходимо предусмотреть необходимые элементы, определяемые при проектировании протокола обмена.

9.	Использование системы генерации кодов транзакции
Для получения расширенной аналитической отчётности по предоставляемым ведомствами услугам и выполняемым функциям для каждой транзакции предоставления услуги или выполнения функции вводится уникальный код (код транзакции). Генерация данных кодов производится системой генерации кодов транзакций СМЭВ.
Сформированное значение подставляется в элемент //SendRequestRequest/SenderProvidedRequestData/TransactionCode запроса или рассылки.
При получении ответа, код транзакции находится в элементе //GetResponseResponse/ResponseMessage/Response/OriginalTransactionCode.
9.1.	Сервис предоставления кодов транзакций
Сервис предоставления кодов транзакций (СПКТ) реализован для обеспечения информационного взаимодействия по протоколу SOAP.
СПКТ осуществляет приём входных и отправку выходных данных, приведённых в таблице 9.
Таблица 9 – Перечень входных и выходных данных СПКТ
№	Название	Тип	Обозначение	Описание
1	Входные данные			
1.1	Данные об услуге	Контейнер	FRGUInformation	Данные ФРГУ передаются средствами метода TransactionCode веб-сервиса и включает следующие данные:
•	Мнемоника информационной системы;
•	Код ФРГУ услуги либо признак функции;
•	Расширенные сведения об услуге или функции;
•	Расширенные сведения о инициаторе услуги или функции.
1.1.1	Мнемоника информационной системы	String	FRGUInteractionPartiсipantCode	Мнемоника информационной системы длиной не более 20 символов
1.1.2	Код ФРГУ услуги либо признак функции	String	FRGUServiceCode	Код ФРГУ услуги длиной не более 20 символов либо признак функции длиной не более 20 символов.
1.1.3	Расширенные сведения об услуге или функции	String	FRGUServiceDescription	Расширенные сведения об услуге или функции не более 1000 символов.
1.1.4	Расширенные сведения об инициаторе услуги или функции	String	FRGUServiceRecipientDescription	Расширенные сведения об инициаторе услуги или функции не более 1000 символов.
2	Выходные данные			
2.1	Ответное сообщение на отправленные данные об услуге	Контейнер	Marker	Ответное сообщение на отправленные данные ФРГУ. Ответное сообщение передаётся средствами метода TransactionCode веб-сервиса и включает следующие данные:
•	Идентификатор кода транзакции;
•	Код транзакции.
2.1.1	Идентификатор Кода транзакции	String	TransactionUUID	Идентификатор Кода транзакции, генерируемый в соответствии с RFC-4122, по варианту 1 (на основании MAC-адреса и текущего времени).
2.1.2	Код транзакции	String	TransactionCode	Код транзакции в виде строки: TransactionUUID| FRGUServiceCode| SignatureDetached, где:
•	TransactionUUID - идентификатор Кода транзакции;
•	FRGUServiceCode - код ФРГУ услуги либо признак функции;
•	SignatureDetached – это не квалифицированная электронная подпись строки «TransactionUUID| FRGUServiceCode» не содержащая сертификата в формате base64.
Не квалифицированная электронная подпись генерируется по алгоритму MD5 c RSA с использованием стандартной библиотеки «keytool» из базовой поставки jdk.
Пример запроса кода транзакций:
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<SOAP-ENV:Body>
		<m:generateMark xmlns:m="http://endpoints.transactionmarker.voskhod.ru/">
			<FRGUInformation>
				<FRGUInteractionPartisipantCode>String</FRGUInteractionPartisipantCode>
				<FRGUServiceCode>String</FRGUServiceCode>
				<FRGUServiceDescription>String</FRGUServiceDescription>
				<FRGUServiceRecipientDescription>String</FRGUServiceRecipientDescription>
			</FRGUInformation>
		</m:generateMark>
	</SOAP-ENV:Body>
</SOAP-ENV:Envelope>

WSDL-описание веб-сервиса СГКТ:
<?xml version="1.0"?>
<wsdl:definitions xmlns:ns1="http://voskhod.ru/transaction-marker" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="MarkerService" targetNamespace="http://endpoints.transactionmarker.voskhod.ru/" xmlns:tns="http://endpoints.transactionmarker.voskhod.ru/">
	<wsdl:types>
		<xs:schema targetNamespace="http://voskhod.ru/transaction-marker" version="1.0">
			<xs:complexType name="FRGUInformation">
				<xs:sequence>
					<xs:element name="FRGUInteractionPartisipantCode">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="20"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="FRGUServiceCode">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="20"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="FRGUServiceDescription" nillable="true">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="1000"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element minOccurs="0" name="FRGUServiceRecipientDescription" nillable="true">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="1000"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="marker">
				<xs:sequence>
					<xs:element name="TransactionUUID" type="xs:string"/>
					<xs:element name="TransactionCode" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>
		</xs:schema>
		<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://endpoints.transactionmarker.voskhod.ru/">
			<xs:import namespace="http://voskhod.ru/transaction-marker"/>
			<xs:element name="frguInformation" type="ns1:FRGUInformation"/>
			<xs:element name="generateMark" type="tns:generateMark"/>
			<xs:element name="generateMarkResponse" type="tns:generateMarkResponse"/>
			<xs:complexType name="generateMark">
				<xs:sequence>
					<xs:element name="FRGUInformation" type="ns1:FRGUInformation"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="generateMarkResponse">
				<xs:sequence>
					<xs:element minOccurs="0" name="return" type="ns1:marker"/>
				</xs:sequence>
			</xs:complexType>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="generateMarkResponse">
		<wsdl:part element="tns:generateMarkResponse" name="parameters">
 </wsdl:part>
	</wsdl:message>
	<wsdl:message name="generateMark">
		<wsdl:part element="tns:generateMark" name="parameters">
 </wsdl:part>
	</wsdl:message>
	<wsdl:portType name="IMarker">
		<wsdl:operation name="generateMark">
			<wsdl:input message="tns:generateMark" name="generateMark">
 </wsdl:input>
			<wsdl:output message="tns:generateMarkResponse" name="generateMarkResponse">
 </wsdl:output>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="MarkerServiceSoapBinding" type="tns:IMarker">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="generateMark">
			<soap:operation soapAction="" style="document"/>
			<wsdl:input name="generateMark">
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output name="generateMarkResponse">
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="MarkerService">
		<wsdl:port binding="tns:MarkerServiceSoapBinding" name="MarkerPort">
			<soap:address location="http://localhost:8080/tm/Marker"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>

 
10.	Использование push-нотификаций
В СМЭВ предусмотрена возможность предоставления ИС УВ сведений о количестве сообщений в своих очередях доставки. Для этого ИС УВ со своей стороны должны развернуть сервис приёма push-уведомлений и подать заявку на его регистрацию в СМЭВ.
Участником взаимодействия может быть разработан сервис приёма push-уведомлений самостоятельно в соответствии с данным описанием, либо использовано готовое решение, которое входит в состав набора шаблонов электронных сервисов.
10.1.	Описание сервиса приёма push-уведомлений
Сервис приёма push-уведомлений осуществляет приём входных и отправку выходных данных, приведённых в таблице 10.
Таблица 10 – Перечень входных и выходных данных сервиса приёма push-уведомлений
№	Название	Тип	Обозначение	Описание
1	Входные данные			
1.1	Push-уведомление	Контейнер	PushNotification	Push-уведомление передаётся средствами метода PushNotification веб-сервиса и включает следующие данные (рисунок 43):
•	Время опроса очередей доставки ИС УВ;
•	Наименования очередей доставки;
•	Количество сообщений в каждой очереди доставки.
SOAP-запрос приведён на рисунке 43.

1.1.1	Время опроса очередей доставки ИС УВ	dateTime	InformationTimestamp	Время опроса в формате ГГГГ-ММ-ДДTЧЧ:ММ:ССZ
1.1.2	Данные состояния очереди	Контейнер	QueueInformation	Включает следующие данные:
•	Наименование очереди доставки;
•	Количество сообщений в очереди доставки.
1.1.2.1	Наименование очереди доставки	String	QueueName	Наименование одной из трёх очередей доставки (не более 500 символов).
1.1.2.2	Количество сообщений в очереди доставки	Int	QueueSize	Количество сообщений в очереди доставки, которая соответствует queueName.
2	Выходные данные			
2.1	Ответное сообщение на отправленное push-уведомление	Контейнер	PushNotificationResponse	Ответное сообщение на отправленное push-уведомление является подтверждением успешного получения ИС УВ push-уведомления.
Ответное сообщение передаётся средствами метода PushNotification веб-сервиса и не содержит никаких бизнес данных (рисунок 45).

2.2	Ответное сообщение с ошибкой на отправленное push-уведомление	Контейнер	PushNotificationException	Ответное сообщение с ошибкой на отправленное push-уведомление является подтверждением успешного получения ИС УВ push-уведомления.
Ответное сообщение с ошибкой передаётся средствами метода PushNotification веб-сервиса и может содержать описание ошибки (рисунок 46).
2.3	Метод передачи данных push-уведомления	Метод SOAP-сервера	PushNotificationData	Метод передаёт следующие данные:
•	Время опроса очередей доставки ИС УВ;
•	Наименования очередей доставки;
•	Количество сообщений в каждой очереди доставки.


 
Рисунок 48 – Схема структуры данных push-уведомления
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<SOAP-ENV:Body>
		<PushNotificationRequest xmlns:m="urn://x-artefacts-smev-gov-ru/smev/1.0">
			<PushNotification>
				<InformationTimestamp>2015-02-06T15:14:20Z</InformationTimestamp>
				<QueueInformation>
					<QueueName>name1</QueueName>
					<QueueSize>2</QueueSize>
				</QueueInformation>
				<QueueInformation>
					<QueueName>name2</QueueName>
					<QueueSize>25</QueueSize>
				</QueueInformation>
				<QueueInformation>
					<QueueName>name3</QueueName>
					<QueueSize>12</QueueSize>
				</QueueInformation>
			</PushNotification>
		</PushNotificationRequest>
	</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
Рисунок 49 – SOAP-структура push-уведомления
 
Рисунок 50 – Схема структуры данных ответного сообщения на отправленное push-уведомление
 
Рисунок 51  – Схема структуры данных ответного сообщения с ошибкой на отправленное push-уведомление
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://x-artefacts-smev-gov-ru/smev/1.0" targetNamespace="urn://x-artefacts-smev-gov-ru/smev/1.0" elementFormDefault="unqualified">
	<xs:element name="PushNotificationRequest" type="tns:PushNotificationRequest"/>
	<xs:complexType name="PushNotificationRequest">
		<xs:sequence>
			<xs:element name="PushNotification" type="tns:QueueNotificationInformation"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QueueNotificationInformation">
		<xs:sequence>
			<xs:element name="InformationTimestamp" type="xs:dateTime"/>
			<xs:element name="QueueInformation" type="tns:QueueInformation" form="qualified" nillable="true" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QueueInformation">
		<xs:sequence>
			<xs:element name="QueueName">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:maxLength value="500"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="QueueSize" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PushNotificationResponse" type="tns:PushNotificationResponse"/>
	<xs:complexType name="PushNotificationResponse">
		<xs:sequence>
			<xs:element name="DescriptionResponse" type="tns:Description"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PushNotificationException" type="tns:PushNotificationException"/>
	<xs:complexType name="PushNotificationException">
		<xs:sequence>
			<xs:element name="DescriptionException" type="tns:Description"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Description">
		<xs:sequence>
			<xs:element name="Description" type="xs:string" form="qualified" nillable="true" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
Рисунок 52 – xsd-схема сервиса приёма push-уведомлений «PushNotificationSchema.xsd»
<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="urn://x-artefacts-smev-gov-ru/smev/1.0" targetNamespace="urn://x-artefacts-smev-gov-ru/smev/1.0">
	<wsdl:types>
		<xs:schema>
			<xs:import namespace="urn://x-artefacts-smev-gov-ru/smev/1.0" schemaLocation="PushMessageSchema.xsd"/>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="PushNotificationRequest">
		<wsdl:part name="parameter" element="tns:PushNotificationRequest"/>
	</wsdl:message>
	<wsdl:message name="PushNotificationResponse">
		<wsdl:part name="parameter" element="tns:PushNotificationResponse"/>
	</wsdl:message>
	<wsdl:message name="PushNotificationException">
		<wsdl:part name="parameter" element="tns:PushNotificationException"/>
	</wsdl:message>
	<wsdl:portType name="PushNotificationType">
		<wsdl:operation name="PushNotification">
			<wsdl:input name="PushNotificationRequest" message="tns:PushNotificationRequest"/>
			<wsdl:output name="PushNotificationResponse" message="tns:PushNotificationResponse"/>
			<wsdl:fault name="PushNotificationException" message="tns:PushNotificationException"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="PushNotificationBinding" type="tns:PushNotificationType">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="PushNotification">
			<soap:operation soapAction=" PushNotification "/>
			<wsdl:input name="PushNotificationRequest">
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output name="PushNotificationResponse">
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PushNotificationException">
				<soap:fault name="PushNotificationException" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="PushNotificationService">
		<wsdl:port name="PushNotificationPort" binding="tns:PushNotificationBinding">
			<soap:address location="ServiceAdress"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
Рисунок 53 – wsdl-описание веб-сервиса сервиса приёма push-уведомлений
 
11.	Использование клиентской библиотеки и набора «TOOLSET»
Для помощи участникам взаимодействия в разработке информационного взаимодействия ИС со СМЭВ предоставляется клиентская библиотека и набор «toolset», которые входят в состав набора шаблонов электронных сервисов.
Клиентская библиотека подключается к проекту ИС в среде разработки и предоставляет набор методов, с помощью которых осуществляется разработка программной логики процесса информационного взаимодействия со СМЭВ. При этом дорабатываемая ИС должна быть разработана средствами программной платформы jdk. Описание методов клиентской библиотеки предоставляется в виде «javadocs», который входит в состав набора шаблонов электронных сервисов.
Набор «toolset» представляет собой набор отдельных приложений, которые предоставляют платформонезависимые интерфейсы взаимодействия с ИС и запускаются на платформе jre. Каждое приложение набора предоставляет готовое решение, инкапсулирующее часть логики процесса информационного взаимодействия со СМЭВ3.х, которое может быть использовано при доработке ИС УВ. При этом дорабатываемая ИС УВ может быть разработана средствами любой программной платформы. Состав набора, требования к необходимому ПО для функционирования набора и порядок его запуска приведены в приложении З.
12.	Использование Адаптера СМЭВ3.Х
Адаптер СМЭВ3.х обеспечивает полную функциональность по формированию, отправке, получению и обработке сообщений СМЭВ3.х в соответствии с требованиями настоящих Методических рекомендаций.
Информационный обмен ИС УВ со СМЭВ3.х может быть реализован через Адаптер СМЭВ3.х, который поддерживает следующие варианты информационного взаимодействия:
	Синхронное взаимодействия ИС УВ со СМЭВ3.х через web-сервис адаптера СМЭВ3.х;
	Асинхронное взаимодействия ИС УВ со СМЭВ3.х через web-сервис адаптера СМЭВ3.х;
	Взаимодействия ИС УВ со СМЭВ3.х через интеграционные интерфейсы адаптера СМЭВ3.х.
Полное описание указанных вариантов информационного взаимодействия, а также протокола и интерфейсов взаимодействия, порядка развёртывания и запуска, перечня настроек Адаптера СМЭВ3.х, разработки настроечных файлов приведены в «Руководстве администратора на Адаптер СМЭВ3.х» и в «Руководстве по разработке настроечных файлов Адаптера СМЭВ3.Х», которые входят в состав архивов «Адаптер (для работы со СМЭВ 3 версия схем 1.x)», опубликованных на главной странице Технологического портала СМЭВ3 (https://smev3.gosuslugi.ru/portal/).
IV.	Приложения
Приложение А.	АЛГОРИТМ трансформации XML
При подписании XML-фрагментов ЭП в формате XMLDSig, обязательно использование трансформации urn://smev-gov-ru/xmldsig/transform. Пример XML до и после трансформации по описанному ниже алгоритму приведены в Приложении Б. 
Внимание! Алгорит трансформации не применяется для графических объектов, описанных на языке идеограмм и пиктограмм (например, emoji). Перед трансформацией подобные объекты необходимо исключить из сообщения. 
Алгоритм трансформации включает следующие шаги:
1.	Удаления элементов XML declaration и processing instructions (при наличии)
вход:
<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="style.css"?>
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"/>
</qwe>
выход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"/>
</qwe>
2.	Удаление текстовых блоков (элементов XML), содержащих только пробельные символы. Если текстовый блок содержит только пробельные символы – \u0009 - табуляция, \u000A – перевод строки (Unix), \u000D - возврат каретки, \u0020, а также любые другие символы с кодом меньшим \u0020, то все пробельные символы вырезаются. В результате данного преобразования достигается отсутствие пробельных символов между тэгами XML.
вход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value=" test "/> </qwe>
выход:
<qwe xmlns="http://t.e.s.t"><myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty><iop value=" test "/></qwe>
3.	После применения правил из пунктов 1 и 2, если даже у элемента нет дочерних узлов, элемент не может быть представлен в виде empty element tag (http://www.w3.org/TR/2008/REC-xml-20081126/#sec-starttags, правило [44]),  выполняется преобразование элемента в пару start-tag + end-tag.
вход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"/>
</qwe>
выход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"></iop>
</qwe>

4.	Удаление namespace prefix, которые на текущем уровне объявляются, но не используются в низлежащих тегах.
вход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns=”http://y.e.s” myns:nouse=”http://nouse”  >yes!</myns:rty>
 <iop value="yes, yes!"></iop>
</qwe>

выход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"></iop>
</qwe>

5.	Проверка наличия объявления namespace текущего элемента либо в текущем элементе, либо выше по дереву. Если объявления namespase отсутствует, то объявление namespace выполняется в текущем элементе.
6.	Namespace prefix элементов и атрибутов должны быть заменены на автоматически сгенерированные. Сгенерированный префикс состоит из литерала «ns», и порядкового номера сгенерированного префикса в рамках обрабатываемого XML-фрагмента, начиная с единицы. При генерации префиксов должно устраняться их дублирование. 

вход:
<qwe xmlns="http://t.e.s.t">
 <myns:rty xmlns:myns="http://y.e.s">yes!</myns:rty>
 <iop value="yes, yes!"/>
</qwe>
выход:
<ns1:qwe xmlns:ns1="http://t.e.s.t">
 <ns2:rty xmlns:ns2="http://y.e.s">yes!</ns2:rty>
 <ns1:iop value="yes, yes!"></ns1:iop>
</ns1:qwe>
вход:
<nns:x xmlns:nns="http://a" attrB="value1" attrA="value2">
 <y xmlns="http://a">yes!</y>
</nns:x>
выход:
<ns1:x xmlns:ns1="http://a" attrA="value2" attrB="value1">
 <ns1:y>yes!</ns1:y>
</ns1:x>
7.	Атрибуты должны быть отсортированы в алфавитном порядке: сначала по namespace URI (если атрибут - в qualified form), затем – по local name. Атрибуты в unqualified form после сортировки идут после атрибутов в qualified form.
8.	Объявления namespace prefix должны находиться перед атрибутами. Объявления префиксов должны быть отсортированы в порядке объявления, а именно:
a.	Первым объявляется префикс пространства имён элемента, если он не был объявлен выше по дереву.
b.	Дальше объявляются префиксы пространств имён атрибутов, если они требуются. Порядок этих объявлений соответствует порядку атрибутов, отсортированных в алфавитном порядке (см. п.7 текущего перечня).
вход:
<tns:PERNAMEZPRequest xmlns:markcont="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" xmlns:tns="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:fnst="urn://x-artefacts-zags-pernamezp/types/4.0.0"  xmlns:frgu="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" markcont:ТипЗаявл="ФЛ" ЗаявлДата="2019-08-13" tns:ИдСвед="a" markcont:Заявление="15843" ДатаСвед="2018-08-13" frgu:КодУслуги="3482943">
выход (с учетом требований шагов 6, 7, 8 алгоритма трансформации):
<ns1:PERNAMEZPRequest xmlns:ns1="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:ns2="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" xmlns:ns3="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" ns1:ИдСвед="a" ns2:КодУслуги="3482943" ns3:Заявление="15843" ns3:ТипЗаявл="ФЛ" ДатаСвед="2018-08-13" ЗаявлДата="2019-08-13">
9.	Декодирование текста, реализуемое в СМЭВ с использованием библиотеки woodstox.
В рамках декодирования текста выполняется:
	Декодирование текстовых блоков (в элементах); 
	Декодирование атрибутов. 


a.	Декодирование текстовых блоков 
При декодировании текстовых блоков выполняется:
	Снятие экранирования символов по правилам; 
	Разделения на части блоков, содержащих блоки символьных данных CDATA;
	Обработка блоков размером до 12 символов (включительно);
	Обработка блоков размером более 12 символов.

b.	Снятие экранирования 
Снятие экранирования выполняется в текстовых блоках, не содержащих блоков символьных  данных по правилам, приведенным в таблице 11.
Таблица 11 - Правила снятия экранирования
№	Символ с экранированием	Символ после снятия экранирования
1.		`&amp;`	`&`
2.		`&apos;`	`'`
3.		`&gt;`	`>`
4.		`&lt;`	`<`
5.		`&quot;`	`"`

c.	Разделение текстового блока, содержащего блок символьной информации CDATA
Тестовый блок, содержащий блок CDATA, разделяется на следующие блоки:
	Текст до блока CDATA;
	Блок CDATA;
	Текст после блока CDATA.
В текстовых блоках, отличных от CDATA, полученных в результате разделения, выполняется снятие экранирования по правилам, приведенным в таблице 11.Для блока символьных (CDATA) данных снятие экранирования и последующее кодирование не выполняются.
Примечание -- После завершения кодировки текстовые блоки, разделенные на части, соединяются.

d.	Обработка блоков размером до 11 символов (включительно) 
После снятия экранирования выполняется кодирование текста по правилам, приведенным в таблице 12. 
Таблица 12 - Кодирование блоков размером  до 12 символов включительно
№	Кодируемый символ	Значение после кодирования	Условия кодирования
1.		`<`	`&lt;`	всегда 
2.		`&`	`&amp;`	всегда
3.		`>`	`&gt;`	если первый символ в блоке (включая пробелы и переводы строк) или после символа `]`

e.	Обработка блоков размером от 12 символов 
Блоки размером от 12 символов, разделяются на части по 512 символов. 
Примечание – Если блок больше 11 символов и не превосходит 512 символов, то блок не разделяется.
В каждой из частей блок выполняется кодирование по правилам, приведенным в таблице  13.
Таблица 13 - Правила  кодирования блока размером от 12 символов
№	Кодируемый символ	Значение после кодирования	Условия кодирования
1.		`<`	`&lt;`	всегда 
2.		`&`	`&amp;`	всегда
3.		`>`	`&gt;`	если первый символ в блоке (с учетом пробелов и переводов строк) или после символов `<`, `&gt;`, `&`, `]`

Примечание -- После завершения кодировки текстовые блоки, разделенные на части, соединяются.

f.	Декодирование атрибутов 
Декодирование атрибутов XML выполняется в 2 этапа:
	Снятие экранирования и замена пробельных символов пробелом;
	Кодирование атрибутов.
В атрибутах XML сообщения выполняется замена пробельных символов (перевод строки, пробел, символ перевода каретки, табуляция) на пробел.
Снятие экранирования выполняется по правилам, приведенным в таблице  11.
Кодирование атрибутов выполняется в соответствии с правилами, указанными в таблице 14
Таблица 14 - Правила снятия экранирования в атрибутах XML-сообщения
№	Кодируемый символ	Значение после кодирования	Условия кодирования
1.		`<`	`&lt;`	всегда 
2.		`&`	`&amp;`	всегда
3.		`"`	`&quot;`	всегда


Развёрнутый пример результата трансформации XML представлен в приложении Б. Образцовая реализация алгоритма на Java для Apache Santuario представлена в приложении Г. 
Сценарии тестирования алгоритма приведены в приложении Д. Для использования сценариев их необходимо сохранить в файлах в кодировке UTF-8.
 
Приложение Б.	Результат трансформации urn://smev-gov-ru/xmldsig/transform

Вход:
<?xml version="1.0"?>
<tns:PERNAMEZPRequest xmlns:markcont="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" xmlns:tns="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:fnst="urn://x-artefacts-zags-pernamezp/types/4.0.0"  xmlns:frgu="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" markcont:ТипЗаявл="ФЛ" ЗаявлДата="2019-08-13" tns:ИдСвед="a" markcont:Заявление="15843" ДатаСвед="2018-08-13" frgu:КодУслуги="3482943">
            <tns:СведРегПерИмя ДатаЗапис="2018-08-13" tns:НомерЗапис="&gt;&gt;
2&gt;
2&lt;&gt; 1&amp;8&gt;&gt;5&apos;0
&quot; a">
              <tns:ОрганЗАГС КодЗАГС="R0000000" НаимЗАГС="a">   
			     
			  </tns:ОрганЗАГС>
              <tns:СтатусЗаписи ДатаНачСтатус="1957-08-13" КодСтатус="03" НаимСтатус="a"/>
              <tns:СведСвидет ДатаВыдСвидет="2018-08-13" НомерСвидет="aaaaaa" СерияСвидет="aa"/>
              <tns:ПрдСведРег НаимСтраны="Российская Федерация" ОКСМ="643">
                <tns:ФИОДо>
                  <fnst:Фамилия>&gt;&gt;Иванов</fnst:Фамилия>
                  <fnst:Имя>&amp;&gt;&quot;Иван&quot;</fnst:Имя>
                  <fnst:Отчество>]&gt;Иванович&lt;&gt;</fnst:Отчество>
                </tns:ФИОДо>
                 <tns:Объяснение>&gt;&gt;Долго&amp;&gt;
&apos;Учат
Лошадей&lt;&gt;
Делать
В цирке
Чудеса.&gt;
Мы же]&gt;
Наших
Лошадей
&gt;&lt;&apos;Обучаем
В полчаса!&lt;
В шубе, в шапке, в душегрейке
Дворник трубочку курил,
И, усевшись на скамейке,
Дворник снегу говорил:
&quot;Ты летаешь или таешь?
Ничего тут не поймешь!
Подметаешь, разметаешь,
Только бестолку метёшь!
Да к чему я говорю?
Сяду я да покурю&quot;.
Дворник трубку курит, курит...
И глаза от снега щурит,
И вздыхает, и зевает,
И внезапно засыпает.
&quot;Глянь-ка Маня! — крикнул Ваня. —
Видишь, чучело сидит
И &gt;глазами-угольками
На метлу&gt; свою глядит.
Это вроде снежной бабки
Или просто Дед Мороз.
<![CDATA[Ну-ка &amp; дай &apos; <&'ему'&> по &quot;шапке"
Да схвати его за нос!&quot;]]>
 &gt;А&amp; оно как&apos; зарычит!
Как ногами застучит!
Да как вскочит со скамейки,
Да по-русски&lt;&gt; закричит:
&quot;&amp;&gt;Будет вам ужо Мороз —
Как хватать меня за нос!&quot;</tns:Объяснение>
                <tns:ФИОПосле>
                  <fnst:Фамилия>Петров</fnst:Фамилия>
                  <fnst:Имя>Петр</fnst:Имя>
                  <fnst:Отчество>Иванович</fnst:Отчество>
                </tns:ФИОПосле>
                <tns:ДатаРожд>1957-08-13</tns:ДатаРожд>
                <tns:МестоРожден Город="a" КодСтраны="643" МестоТекст="Российская Федерация" НаимСтраны="Российская Федерация" НаимСубъект="a" НаселПункт="a" Район="a" Регион="02"/>
                <tns:АдрМЖРФ АдрРФТекст="Российская Федерация">
                  <tns:АдрКЛАДР Город="аa" Дом="11" Индекс="111111" Кварт="1" КодРегион="01" Корпус="1" НаимРегион="аа" НаселПункт="аа" Район="аа" Улица="аа"/>
                </tns:АдрМЖРФ>
                <tns:УдЛичнФЛ ВыдДок="a" ДатаДок="1957-08-13" КодВидДок="21" КодВыдДок="aaaaaaa" НаимДок="Паспорт гражданина Российской Федерации" СерНомДок="55"/>
                <tns:СведРегРожд ДатаЗапис="2018-08-13" НаимТипЗапис="Государственная регистрация перемены имени совершеннолетнего" НомерЗапис="aaaaaaaaaaaaaaaaaaa" ТипАГС="аа">
                  <fnst:ОрганЗАГС КодЗАГС="R0000000" НаимЗАГС="a"/>
                </tns:СведРегРожд>
              </tns:ПрдСведРег>
            </tns:СведРегПерИмя>
          </tns:PERNAMEZPRequest>

Выход:
<ns1:PERNAMEZPRequest xmlns:ns1="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:ns2="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" xmlns:ns3="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" ns1:ИдСвед="a" ns2:КодУслуги="3482943" ns3:Заявление="15843" ns3:ТипЗаявл="ФЛ" ДатаСвед="2018-08-13" ЗаявлДата="2019-08-13"><ns1:СведРегПерИмя ns1:НомерЗапис=">> 2> 2&lt;> 1&amp;8>>5'0 &quot; a" ДатаЗапис="2018-08-13"><ns1:ОрганЗАГС КодЗАГС="R0000000" НаимЗАГС="a"></ns1:ОрганЗАГС><ns1:СтатусЗаписи ДатаНачСтатус="1957-08-13" КодСтатус="03" НаимСтатус="a"></ns1:СтатусЗаписи><ns1:СведСвидет ДатаВыдСвидет="2018-08-13" НомерСвидет="aaaaaa" СерияСвидет="aa"></ns1:СведСвидет><ns1:ПрдСведРег НаимСтраны="Российская Федерация" ОКСМ="643"><ns1:ФИОДо><ns4:Фамилия xmlns:ns4="urn://x-artefacts-zags-pernamezp/types/4.0.0">&gt;>Иванов</ns4:Фамилия><ns5:Имя xmlns:ns5="urn://x-artefacts-zags-pernamezp/types/4.0.0">&amp;>"Иван"</ns5:Имя><ns6:Отчество xmlns:ns6="urn://x-artefacts-zags-pernamezp/types/4.0.0">]&gt;Иваныч&lt;></ns6:Отчество></ns1:ФИОДо><ns1:Объяснение>&gt;&gt;Долго&amp;&gt;
'Учат
Лошадей&lt;&gt;
Делать
В цирке
Чудеса.>
Мы же]&gt;
Наших
Лошадей
>&lt;'Обучаем
В полчаса!&lt;
В шубе, в шапке, в душегрейке
Дворник трубочку курил,
И, усевшись на скамейке,
Дворник снегу говорил:
"Ты летаешь или таешь?
Ничего тут не поймешь!
Подметаешь, разметаешь,
Только бестолку метёшь!
Да к чему я говорю?
Сяду я да покурю".
Дворник трубку курит, курит...
И глаза от снега щурит,
И вздыхает, и зевает,
И внезапно засыпает.
"Глянь-ка Маня! — крикнул Ваня. —
Видишь, чучело сидит
И >глазами-угольками
На метлу&gt; свою глядит.
Это вроде снежной бабки
Или просто Дед Мороз.
<![CDATA[Ну-ка &amp; дай &apos; <&'ему'&> по &quot;шапке"
Да схвати его за нос!&quot;]]>
 >А&amp; оно как' зарычит!
Как ногами застучит!
Да как вскочит со скамейки,
Да по-русски&lt;&gt; закричит:
"&amp;&gt;Будет вам ужо Мороз —
Как хватать меня за нос!"</ns1:Объяснение><ns1:ФИОПосле><ns7:Фамилия xmlns:ns7="urn://x-artefacts-zags-pernamezp/types/4.0.0">Петров</ns7:Фамилия><ns8:Имя xmlns:ns8="urn://x-artefacts-zags-pernamezp/types/4.0.0">Петр</ns8:Имя><ns9:Отчество xmlns:ns9="urn://x-artefacts-zags-pernamezp/types/4.0.0">Иванович</ns9:Отчество></ns1:ФИОПосле><ns1:ДатаРожд>1957-08-13</ns1:ДатаРожд><ns1:МестоРожден Город="a" КодСтраны="643" МестоТекст="Российская Федерация" НаимСтраны="Российская Федерация" НаимСубъект="a" НаселПункт="a" Район="a" Регион="02"></ns1:МестоРожден><ns1:АдрМЖРФ АдрРФТекст="Российская Федерация"><ns1:АдрКЛАДР Город="аa" Дом="11" Индекс="111111" Кварт="1" КодРегион="01" Корпус="1" НаимРегион="аа" НаселПункт="аа" Район="аа" Улица="аа"></ns1:АдрКЛАДР></ns1:АдрМЖРФ><ns1:УдЛичнФЛ ВыдДок="a" ДатаДок="1957-08-13" КодВидДок="21" КодВыдДок="aaaaaaa" НаимДок="Паспорт гражданина Российской Федерации" СерНомДок="55"></ns1:УдЛичнФЛ><ns1:СведРегРожд ДатаЗапис="2018-08-13" НаимТипЗапис="Государственная регистрация перемены имени совершеннолетнего" НомерЗапис="aaaaaaaaaaaaaaaaaaa" ТипАГС="аа"><ns10:ОрганЗАГС xmlns:ns10="urn://x-artefacts-zags-pernamezp/types/4.0.0" КодЗАГС="R0000000" НаимЗАГС="a"></ns10:ОрганЗАГС></ns1:СведРегРожд></ns1:ПрдСведРег></ns1:СведРегПерИмя></ns1:PERNAMEZPRequest>
 
Приложение В.	Профиль формата PKCS#7, которому должны удовлетворять подписи вложенных файлов
pkcs-7 OBJECT IDENTIFIER ::= {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 7}
pkcs-9 OBJECT IDENTIFIER ::= {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 9}
gost-r OBJECT IDENTIFIER ::= {iso(1) member-body(2) rus(643) khz(2) 2}

SignatureContentType OBJECT IDENTIFIER ::= {pkcs-7 2} -- PKCS#7 SignedData
SignedFileContentType OBJECT IDENTIFIER ::= {pkcs-7 1} -- PKCS#7 data
DigestAlgorithmIdentifier OBJECT IDENTIFIER ::= {gost-r 9} -- GOST R 34.11-2012
DigestEncryptionAlgorithmIdentifier OBJECT IDENTIFIER ::= {gost-r 19} -- GOST R 34.10-2012

Version INTEGER ::= 1 -- PKCS#7 standard version. Refers to version 1.5.
 
ContentInfo ::= SEQUENCE {
 contentType SignatureContentType,
 content SignedData 
}

SignedData ::= SEQUENCE {
 version Version,
 digestAlgorithms DigestAlgorithmIdentifiers,
 contentInfo ExternalContentInfo,
 certificates ExtendedCertificatesAndCertificates,
 signerInfos SignerInfos 
}

DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier

ExternalContentInfo ::= SEQUENCE {
 contentType SignedFileContentType
}

ExtendedCertificatesAndCertificates ::= SET OF ExtendedCertificateOrCertificate

ExtendedCertificateOrCertificate ::= CHOICE {
 certificate Certificate -- X.509
}

SignerInfos ::= SET OF SignerInfo

SignerInfo ::= SEQUENCE {
 version Version,
 issuerAndSerialNumber IssuerAndSerialNumber,
 digestAlgorithm DigestAlgorithmIdentifier,
 authenticatedAttributes [0] IMPLICIT Attributes,
 digestEncryptionAlgorithm DigestEncryptionAlgorithmIdentifier,
 encryptedDigest EncryptedDigest
 unauthenticatedAttributes [1] IMPLICIT Attributes OPTIONAL }
}

EncryptedDigest ::= OCTET STRING
 
Приложение Г.	Образцовая реализация трансформации URN://SMEV-GOV-RU/XMLDSIG/TRANSFORM

package ru.voskhod.crypto.impl;

import com.ctc.wstx.stax.WstxEventFactory;
import com.ctc.wstx.stax.WstxInputFactory;
import com.ctc.wstx.stax.WstxOutputFactory;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.apache.xml.security.transforms.Transform;
import org.apache.xml.security.transforms.TransformSpi;
import org.apache.xml.security.transforms.TransformationException;

import javax.xml.stream.XMLEventFactory;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLEventWriter;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.Attribute;
import javax.xml.stream.events.Characters;
import javax.xml.stream.events.EndElement;
import javax.xml.stream.events.Namespace;
import javax.xml.stream.events.StartElement;
import javax.xml.stream.events.XMLEvent;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Класс, реализующий алгоритм трансформации "urn://smev-gov-ru/xmldsig/transform" для Apache Santuario.
 *
 * @author dpryakhin
 */
public class SmevTransformSpi extends TransformSpi {
    private static final Logger logger = Logger.getLogger(SmevTransformSpi.class.getName());

    public static final String ALGORITHM_URN = "urn://smev-gov-ru/xmldsig/transform";
    private static final String ENCODING_UTF_8 = "UTF-8";

    private static final AttributeSortingComparator attributeSortingComparator = new AttributeSortingComparator();

    private static final ThreadLocal<XMLInputFactory> inputFactory = ThreadLocal.withInitial(WstxInputFactory::new);
    private static final ThreadLocal<XMLOutputFactory> outputFactory = ThreadLocal.withInitial(WstxOutputFactory::new);
    private static final ThreadLocal<XMLEventFactory> eventFactory = ThreadLocal.withInitial(WstxEventFactory::new);

    @Override
    protected String engineGetURI() {
        return ALGORITHM_URN;
    }

    @Override
    protected XMLSignatureInput enginePerformTransform(XMLSignatureInput argInput,
                                                       OutputStream argOutput, Transform argTransform) throws IOException, TransformationException {
        if (argOutput == null)
            return enginePerformTransform(argInput);
        else {
            if (logger.isLoggable(Level.FINE)) {
                ByteArrayOutputStream debug = new ByteArrayOutputStream();
                MultiplexOutputStream mos = new MultiplexOutputStream(argOutput);
                mos.addOutputStream(debug);
                process(argInput.getOctetStream(), mos);
                logger.fine("Transformation result:\n" + new String(debug.toByteArray()));
            } else {
                process(argInput.getOctetStream(), argOutput);
            }
            XMLSignatureInput result = new XMLSignatureInput((byte[]) null);
            result.setOutputStream(argOutput);
            return result;
        }
    }

    @Override
    protected XMLSignatureInput enginePerformTransform(XMLSignatureInput argInput,
                                                       Transform argTransform) throws IOException, TransformationException {
        return enginePerformTransform(argInput);
    }

    @Override
    protected XMLSignatureInput enginePerformTransform(XMLSignatureInput argInput) throws IOException, TransformationException {

        ByteArrayOutputStream result = new ByteArrayOutputStream();
        process(argInput.getOctetStream(), result);
        byte[] postTransformData = result.toByteArray();

        return new XMLSignatureInput(postTransformData);
    }

    @SuppressWarnings("unchecked")
    public void process(InputStream argSrc, OutputStream argDst) throws TransformationException {
        Stack<List<Namespace>> prefixMappingStack = new Stack<>();
        XMLEventReader src = null;
        XMLEventWriter dst = null;
        try {
            src = inputFactory.get().createXMLEventReader(argSrc, ENCODING_UTF_8);
            dst = outputFactory.get().createXMLEventWriter(argDst, ENCODING_UTF_8);
            XMLEventFactory factory = eventFactory.get();

            int prefixCnt = 1;
            while (src.hasNext()) {
                XMLEvent event = src.nextEvent();
                if (event.isCharacters()) {
                    final Characters characters = event.asCharacters();
                    String data = characters.getData();
                    logger.fine("Text Data:\n" + data);
                    // Отсекаем whitespace symbols.
                    if (!data.trim().isEmpty()) {
                        dst.add(event);
                    }
                } else if (event.isStartElement()) {
                    List<Namespace> myPrefixMappings = new LinkedList<>();
                    prefixMappingStack.push(myPrefixMappings);

                    // Обработка элемента: NS prefix rewriting.
                    // N.B. Элементы в unqualified form не поддерживаются.
                    StartElement srcEvent = (StartElement) event;
                    String nsURI = srcEvent.getName().getNamespaceURI();
                    String prefix = findPrefix(nsURI, prefixMappingStack);

                    if (prefix == null) {
                        prefix = "ns" + prefixCnt++;
                        myPrefixMappings.add(factory.createNamespace(prefix, nsURI));
                    }
                    StartElement dstEvent = factory.createStartElement(prefix, nsURI, srcEvent.getName().getLocalPart());
                    dst.add(dstEvent);

                    // == Обработка атрибутов. Два шага: отсортировать, промэпить namespace URI. ==
                    Iterator<Attribute> srcAttributeIterator = srcEvent.getAttributes();
                    // Положим атрибуты в list, чтобы их можно было отсортировать.
                    List<Attribute> srcAttributeList = new LinkedList<>();
                    while (srcAttributeIterator.hasNext()) {
                        srcAttributeList.add(srcAttributeIterator.next());
                    }
                    // Сортировка атрибутов по алфавиту.
                    srcAttributeList.sort(attributeSortingComparator);

                    // Обработка префиксов. Аналогична обработке префиксов элементов,
                    // за исключением того, что у атрибут может не иметь namespace.
                    List<Attribute> dstAttributeList = new LinkedList<>();
                    for (Attribute srcAttribute : srcAttributeList) {
                        String attributeNsURI = srcAttribute.getName().getNamespaceURI();
                        String attributeLocalName = srcAttribute.getName().getLocalPart();
                        String value = srcAttribute.getValue();
                        Attribute dstAttribute;
                        if (attributeNsURI != null && !"".equals(attributeNsURI)) {
                            String attributePrefix = findPrefix(attributeNsURI, prefixMappingStack);
                            if (attributePrefix == null) {
                                attributePrefix = "ns" + prefixCnt++;
                                myPrefixMappings.add(factory.createNamespace(attributePrefix, attributeNsURI));
                            }
                            dstAttribute = factory.createAttribute(attributePrefix, attributeNsURI, attributeLocalName, value);
                        } else {
                            dstAttribute = factory.createAttribute(attributeLocalName, value);
                        }
                        dstAttributeList.add(dstAttribute);
                    }

                    // Вывести namespace prefix mappings для текущего элемента.
                    // Их порядок детерминирован, т.к. перед мэппингом атрибуты были отсортированы.
                    // Поэтому дополнительной сотрировки здесь не нужно.
                    for (Namespace mapping : myPrefixMappings) {
                        dst.add(mapping);
                    }

                    // Вывести атрибуты.
                    // N.B. Мы не выводим атрибуты сразу вместе с элементом, используя метод
                    // XMLEventFactory.createStartElement(prefix, nsURI, localName, List<Namespace>, List<Attribute>),
                    // потому что при использовании этого метода порядок атрибутов в выходном документе
                    // меняется произвольным образом.
                    for (Attribute attr : dstAttributeList) {
                        dst.add(attr);
                    }
                } else if (event.isEndElement()) {
                    // Гарантируем, что empty tags запишутся в форме <a></a>, а не в форме <a/>.
                    dst.add(eventFactory.get().createSpace(""));

                    // NS prefix rewriting
                    EndElement srcEvent = (EndElement) event;
                    String nsURI = srcEvent.getName().getNamespaceURI();
                    String prefix = findPrefix(nsURI, prefixMappingStack);
                    if (prefix == null) {
                        throw new TransformationException("EndElement: prefix mapping is not found for namespace " + nsURI);
                    }

                    EndElement dstEvent = eventFactory.get().createEndElement(prefix, nsURI, srcEvent.getName().getLocalPart());
                    dst.add(dstEvent);

                    prefixMappingStack.pop();
                }
                // Атрибуты обрабатываются в событии startElement.

                // Остальные события (processing instructions, start document, etc.) опускаем.
            }
        } catch (XMLStreamException e) {
            Object[] exArgs = {e.getMessage()};
            throw new TransformationException("Can not perform transformation " + ALGORITHM_URN, exArgs, e);
        } finally {
            if (src != null) {
                try {
                    src.close();
                } catch (XMLStreamException e) {
                    logger.log(Level.WARNING, "Can not close XMLEventReader", e);
                }
            }
            if (dst != null) {
                try {
                    dst.close();
                } catch (XMLStreamException e) {
                    logger.log(Level.WARNING, "Can not close XMLEventWriter", e);
                }
            }
            try {
                argSrc.close();
            } catch (IOException e) {
                logger.log(Level.WARNING, "Can not close input stream.", e);
            }
            if (argDst != null) {
                try {
                    argDst.close();
                } catch (IOException e) {
                    logger.log(Level.WARNING, "Can not close output stream.", e);
                }
            }
        }
    }

    private static String findPrefix(String argNamespaceURI, Stack<List<Namespace>> argMappingStack) {
        if (argNamespaceURI == null) {
            throw new IllegalArgumentException("No namespace элементы не поддерживаются.");
        }

        for (List<Namespace> elementMappingList : argMappingStack) {
            for (Namespace mapping : elementMappingList) {
                if (argNamespaceURI.equals(mapping.getNamespaceURI())) {
                    return mapping.getPrefix();
                }
            }
        }
        return null;
    }

    private static class AttributeSortingComparator implements Comparator<Attribute> {
        @Override
        public int compare(Attribute x, Attribute y) {
            String xNS = x.getName().getNamespaceURI();
            String xLocal = x.getName().getLocalPart();
            String yNS = y.getName().getNamespaceURI();
            String yLocal = y.getName().getLocalPart();

            // Оба атрибута - unqualified.
            if (empty(xNS) && empty(yNS)) {
                return xLocal.compareTo(yLocal);
            }

            // Оба атрибута - qualified.
            if (!empty(xNS) && !empty(yNS)) {
                // Сначала сравниваем namespaces.
                int nsComparisonResult = xNS.compareTo(yNS);
                if (nsComparisonResult != 0) {
                    return nsComparisonResult;
                } else {
                    // Если равны - local names.
                    return xLocal.compareTo(yLocal);
                }
            }

            // Один - qualified, второй - unqualified.
            if (empty(xNS)) {
                return 1;
            } else {
                return -1;
            }
        }

        private static boolean empty(String arg) {
            return arg == null || "".equals(arg);
        }
    }
}

Приложение Д.	Сценарии тестирования алгоритма нормализации XML
Д.1.	Проверка 1: тестирование шага 1
Здесь и далее под шагами понимаются шаги алгоритма трансформации, описанного в приложении А. Убедиться, что в XML, полученном в результате трансформации отсутствует тэг:
<?xml version="1.0"?>
Д.2.	Проверка 2: тестирование шага 2
Убедиться, что XML, полученный в результате трансформации не содержит пробельных символов между тэгами.

Д.3.	Проверка 3: тестирование шага 3
Убедиться, что преобразованы в пары start-tag + end-tag следующие тэги исходного XML:

<tns:СтатусЗаписи ДатаНачСтатус="1957-08-13" КодСтатус="03" НаимСтатус="a"/>
<tns:СведСвидет ДатаВыдСвидет="2018-08-13" НомерСвидет="aaaaaa" СерияСвидет="aa"/>

<tns:МестоРожден Город="a" КодСтраны="643" МестоТекст="Российская Федерация" НаимСтраны="Российская Федерация" НаимСубъект="a" НаселПункт="a" Район="a" Регион="02"/>

<tns:АдрКЛАДР Город="аa" Дом="11" Индекс="111111" Кварт="1" КодРегион="01" Корпус="1" НаимРегион="аа" НаселПункт="аа" Район="аа" Улица="аа"/>

<tns:УдЛичнФЛ ВыдДок="a" ДатаДок="1957-08-13" КодВидДок="21" КодВыдДок="aaaaaaa" НаимДок="Паспорт гражданина Российской Федерации" СерНомДок="55"/>

<fnst:ОрганЗАГС КодЗАГС="R0000000" НаимЗАГС="a"/>

После трансформации:
<ns1:СтатусЗаписи ДатаНачСтатус="1957-08-13" КодСтатус="03" НаимСтатус="a"></ns1:СтатусЗаписи><ns1:СведСвидет ДатаВыдСвидет="2018-08-13" НомерСвидет="aaaaaa" СерияСвидет="aa"></ns1:СведСвидет>

<ns1:МестоРожден Город="a" КодСтраны="643" МестоТекст="Российская Федерация" НаимСтраны="Российская Федерация" НаимСубъект="a" НаселПункт="a" Район="a" Регион="02"></ns1:МестоРожден>

<ns1:АдрКЛАДР Город="аa" Дом="11" Индекс="111111" Кварт="1" КодРегион="01" Корпус="1" НаимРегион="аа" НаселПункт="аа" Район="аа" Улица="аа"></ns1:АдрКЛАДР>

<ns1:УдЛичнФЛ ВыдДок="a" ДатаДок="1957-08-13" КодВидДок="21" КодВыдДок="aaaaaaa" НаимДок="Паспорт гражданина Российской Федерации" СерНомДок="55"></ns1:УдЛичнФЛ>

<ns10:ОрганЗАГС xmlns:ns10="urn://x-artefacts-zags-pernamezp/types/4.0.0" КодЗАГС="R0000000" НаимЗАГС="a"></ns10:ОрганЗАГС>

Д.4.	Проверка 4: тестирование шага 4
Убедиться, что после преобразования тэга tns:PERNAMEZPRequest исходного XML в теге ns1:PERNAMEZPRequest отсутствует неиспользуемое объявление:
xmlns:fnst="urn://x-artefacts-zags-pernamezp/types/4.0.0"
Д.5.	Проверка 5: тестирование шагов 5 и 6
Убедиться, что пространство имен tns исходного XML преобразовано в пространство имен ns1.
Убедиться, что объявления пространства имен присутствуют в следующих тэгах преобразованного XML:
<ns4:Фамилия xmlns:ns4="urn://x-artefacts-zags-pernamezp/types/4.0.0">&gt;>Иванов</ns4:Фамилия><ns5:Имя xmlns:ns5="urn://x-artefacts-zags-pernamezp/types/4.0.0">&amp;>"Иван"</ns5:Имя><ns6:Отчество xmlns:ns6="urn://x-artefacts-zags-pernamezp/types/4.0.0">]&gt;Иваныч&lt;></ns6:Отчество>

<ns7:Фамилия xmlns:ns7="urn://x-artefacts-zags-pernamezp/types/4.0.0">Петров</ns7:Фамилия><ns8:Имя xmlns:ns8="urn://x-artefacts-zags-pernamezp/types/4.0.0">Петр</ns8:Имя><ns9:Отчество xmlns:ns9="urn://x-artefacts-zags-pernamezp/types/4.0.0">Иванович</ns9:Отчество>

<ns10:ОрганЗАГС xmlns:ns10="urn://x-artefacts-zags-pernamezp/types/4.0.0" КодЗАГС="R0000000" НаимЗАГС="a"></ns10:ОрганЗАГС>
Д.6.	Проверка 6: тестирование шагов 7 и 8 алгоритма прансформации
Убедиться, что объявления пространств имен и атрибуты тэга tns:PERNAMEZPRequest исходного XML:
<tns:PERNAMEZPRequest xmlns:markcont="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" xmlns:tns="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:fnst="urn://x-artefacts-zags-pernamezp/types/4.0.0"  xmlns:frgu="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" markcont:ТипЗаявл="ФЛ" ЗаявлДата="2019-08-13" tns:ИдСвед="a" markcont:Заявление="15843" ДатаСвед="2018-08-13" frgu:КодУслуги="3482943">

в преобразованном тэге ns1:PERNAMEZPRequest отсортированы следующим образом:
<ns1:PERNAMEZPRequest xmlns:ns1="urn://x-artefacts-zags-pernamezp/4.0.0" xmlns:ns2="urn://x-artefacts-zags-pernamezp/frgutypes/4.0.0" xmlns:ns3="urn://x-artefacts-zags-pernamezp/markertypes/4.0.0" ns1:ИдСвед="a" ns2:КодУслуги="3482943" ns3:Заявление="15843" ns3:ТипЗаявл="ФЛ" ДатаСвед="2018-08-13" ЗаявлДата="2019-08-13">
Д.7.	Проверка 3: тестирование шага 9
Убедиться, что текстовые блоки размером до 11 символов (включительно) декодированы корректно. Должны быть проверено декодирование текстовых блоков в тэгах:
<fnst:Фамилия>&gt;&gt;Иванов</fnst:Фамилия>
                  <fnst:Имя>&amp;&gt;&quot;Иван&quot;</fnst:Имя>
                  <fnst:Отчество>]&gt;Иваныч&lt;&gt;</fnst:Отчество>
После трансформации:
<ns4:Фамилия xmlns:ns4="urn://x-artefacts-zags-pernamezp/types/4.0.0">&gt;>Иванов</ns4:Фамилия><ns5:Имя xmlns:ns5="urn://x-artefacts-zags-pernamezp/types/4.0.0">&amp;>"Иван"</ns5:Имя><ns6:Отчество xmlns:ns6="urn://x-artefacts-zags-pernamezp/types/4.0.0">]&gt;Иваныч&lt;></ns6:Отчество>
Убедиться, что текстовый блок размером более 512 символов декодирован корректно:
<tns:Объяснение>&gt;&gt;Долго&amp;&gt;
&apos;Учат
Лошадей&lt;&gt;
Делать
В цирке
Чудеса.&gt;
Мы же]&gt;
Наших
Лошадей
&gt;&lt;&apos;Обучаем
В полчаса!&lt;
В шубе, в шапке, в душегрейке
Дворник трубочку курил,
И, усевшись на скамейке,
Дворник снегу говорил:
&quot;Ты летаешь или таешь?
Ничего тут не поймешь!
Подметаешь, разметаешь,
Только бестолку метёшь!
Да к чему я говорю?
Сяду я да покурю&quot;.
Дворник трубку курит, курит...
И глаза от снега щурит,
И вздыхает, и зевает,
И внезапно засыпает.
&quot;Глянь-ка Маня! — крикнул Ваня. —
Видишь, чучело сидит
И &gt;глазами-угольками
На метлу&gt; свою глядит.
Это вроде снежной бабки
Или просто Дед Мороз.
<![CDATA[Ну-ка &amp; дай &apos; <&'ему'&> по &quot;шапке"
Да схвати его за нос!&quot;]]>
 &gt;А&amp; оно как&apos; зарычит!
Как ногами застучит!
Да как вскочит со скамейки,
Да по-русски&lt;&gt; закричит:
&quot;&amp;&gt;Будет вам ужо Мороз —
Как хватать меня за нос!&quot;</tns:Объяснение>
После трансформации:
<ns1:Объяснение>&gt;&gt;Долго&amp;&gt;
'Учат
Лошадей&lt;&gt;
Делать
В цирке
Чудеса.>
Мы же]&gt;
Наших
Лошадей
>&lt;'Обучаем
В полчаса!&lt;
В шубе, в шапке, в душегрейке
Дворник трубочку курил,
И, усевшись на скамейке,
Дворник снегу говорил:
"Ты летаешь или таешь?
Ничего тут не поймешь!
Подметаешь, разметаешь,
Только бестолку метёшь!
Да к чему я говорю?
Сяду я да покурю".
Дворник трубку курит, курит...
И глаза от снега щурит,
И вздыхает, и зевает,
И внезапно засыпает.
"Глянь-ка Маня! — крикнул Ваня. —
Видишь, чучело сидит
И >глазами-угольками
На метлу&gt; свою глядит.
Это вроде снежной бабки
Или просто Дед Мороз.
<![CDATA[Ну-ка &amp; дай &apos; <&'ему'&> по &quot;шапке"
Да схвати его за нос!&quot;]]>
 >А&amp; оно как' зарычит!
Как ногами застучит!
Да как вскочит со скамейки,
Да по-русски&lt;&gt; закричит:
"&amp;&gt;Будет вам ужо Мороз —
Как хватать меня за нос!"</ns1:Объяснение>
Убедиться, что текстовое значение атрибута декодировано корректно. Должны быть проверено декодирование текстового значения атрибута tns:НомерЗапис тэге tns:СведРегПерИмя:
<tns:СведРегПерИмя ДатаЗапис="2018-08-13" tns:НомерЗапис="&gt;&gt;
2&gt;
2&lt;&gt; 1&amp;8&gt;&gt;5&apos;0
&quot; a">
После трансформации:
<ns1:СведРегПерИмя ns1:НомерЗапис=">> 2> 2&lt;> 1&amp;8>>5'0 &quot; a" ДатаЗапис="2018-08-13">
Приложение Е.	Перечень ошибок, возвращаемых транспортной подсистемой СМЭВ
Сведения приведены в документе «Перечень типовых ошибок, возвращаемых участнику при работе в СМЭВ 3.0», опубликованном на главной странице Технологического портала СМЭВ3 (https://smev3.gosuslugi.ru/portal/) в разделе «Технологические стандарты и рекомендации».
Приложение Ж.	Формирование видов сведений с включением справочников
Владелец сведений должен включить в XSD вида сведений пространство имён XSD, содержащих объявления типов данных для всех использованных справочников ЕСНСИ с использованием инструкции import.
Пример протокола обмена (вида сведений), импортирующего пространство имён с объявлениями типов данных справочника «Справочник полов», приведён на рисунке 48. В приведённом примере импорт пространства имён обеспечивается инструкцией вида:
<XS:IMPORT NAMESPACE="URN://CNSI-DICTIONARY/TYPES/GENDER/3.0.0" SCHEMALOCATION="TYPES/GENDER.XSD"/>
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://simple_test/1.0" xmlns:gender="urn://cnsi-dictionary/types/gender/3.0.0" targetNamespace="urn://simple_test/1.0" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xs:import namespace="urn://cnsi-dictionary/types/gender/3.0.0" schemaLocation="types/gender.xsd"/>

	<xs:element name="root">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Person" type="tns:Person" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Person">
		<xs:sequence>
			<xs:element name="FIO" type="xs:string"/>
			<xs:element name="Gender" type="gender:ID"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
Рисунок 54 – Пример схемы протокола обмена, импортирующего схему с объявлением типов справочников
Импортируемая схема c объявлениями типов справочника «gender» приведена на рисунке 49. 
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn://cnsi-dictionary/types/gender/3.0.0" targetNamespace="urn://cnsi-dictionary/types/gender/3.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:simpleType name="ID">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="10"/>
			<xs:enumeration value="0001"/>
			<xs:enumeration value="0002"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
Рисунок 55 – Пример XSD-схемы с объявлениями типов справочника «gender»
Пример содержимого справочника ЕСНСИ «gender» приведён в таблице 11.
Таблица 11 – Справочник ЕСНСИ «gender»
ID	Name
0001	Мужской
0002	Женский

Пример запроса, соответствующего схеме на рисунке 48, приведён на рисунке 50.
<ns:root xmlns:ns="urn://simple_test/1.0">
	<ns:Person>
		<ns:FIO>Иванов И.И.</ns:FIO>
		<ns:Gender>0001</ns:Gender>
	</ns:Person>
	<ns:Person>
		<ns:FIO>Петрова А.А.</ns:FIO>
		<ns:Gender>0002</ns:Gender>
	</ns:Person>
</ns:root>
Рисунок 56 – Пример запроса с использованием значений справочника «gender»
Приложение З.	Описание набора «toolset»
З.1.	Состав набора
Набор «toolset» поставляется в следующей комплектации:
	Набор утилит с расширением *.bat для запуска в среде Windows:
	transactiontool (осуществляет запуск файла transactiontool-3.4.14.0.jar из директории lib, который предоставляет код транзакции из системы генерации кодов транзакций);
	identitytool (осуществляет запуск файла identitytool-3.4.14.0.jar из директории lib, который предоставляет сгенерированные идентификаторы сообщений либо файлов вложений);
	signertool (осуществляет запуск файла signertool-3.4.14.0.jar из директории lib, который предоставляет ЭП-СП содержательной части сообщения или файлов вложений);
	messagetool (осуществляет запуск файла messagetool-3.4.14.0.jar из директории lib, который формирует и отправляет сообщения в СМЭВ3.х);
	adminservtool (осуществляет запуск файла adminservtool-3.4.14.0.jar из директории lib, который формирует и отправляет сообщения в административный сервис СМЭВ3.х для переключения на резервный ГРУ).
	Набор утилит с расширением *.sh для запуска в среде Linux:
	transactiontool (осуществляет запуск файла transactiontool-3.4.14.0.jar из директории lib, который предоставляет код транзакции из системы генерации кодов транзакций);
	identitytool (осуществляет запуск файла identitytool-3.4.14.0.jar из директории lib, который предоставляет сгенерированные идентификаторы сообщений либо файлов вложений);
	signertool (осуществляет запуск файла signertool-3.4.14.0.jar из директории lib, который предоставляет ЭП-СП содержательной части сообщения или файлов вложений);
	messagetool (осуществляет запуск файла messagetool-3.4.14.0.jar из директории lib, который формирует и отправляет сообщения в СМЭВ3.х);
	adminservtool (осуществляет запуск файла adminservtool-3.4.14.0.jar из директории lib, который формирует и отправляет сообщения в административный сервис СМЭВ3.х для переключения на резервный ГРУ).
	Набор конфигурационных файлов с расширением *. properties:
	сonfig (содержит настройки перечисленных выше файлов);
	log4j (содержит настройки встроенного сервиса логирования функционирования НИК).
	Директория lib (содержит файлы расширения *.jar, обеспечивающих функционирование НИК).
З.2.	Требования к ПО для запуска набора
Для обеспечения функционирования набора «toolset» предварительно должно быть развёрнуто ПО, приведённое в таблице 1.
Таблица 1 – ПО необходимое для функционирования набора «toolset»
№	Категории ПО	Наименование	Версия	Характеристики
1	Виртуальная машина java	Java JRE	1.7.0.5 – 1.7.0.21	ПО исполнения файлов расширения *.jar, находящихся в директории lib.
2	Средство криптозащиты информации	КриптоПро CSP
либо
КриптоПро JCP	3.6.1

1.0.54	ПО, необходимое для функционирования signertool, adminservtool и messagetool.
3	Библиотека криптоалгоритмов	Trusted Java	2.0	ПО, необходимое для функционирования signertool, adminservtool и messagetool, только в случае использования КриптоПро CSP.
З.3.	Порядок запуска утилит набора
При запуске любой утилиты, кроме adminservtool, без входных данных либо с неверными входными данными в консоли выведется описание требований к входным данным для запущенной утилиты.
При запуске утилит в среде Windows либо Linux входные данные можно указать:
	либо в командной строке в соответствии с шаблоном: <наименование утилиты> -<параметр 1> -<параметр 2> … -<параметр n>, например: transactiontool.bat -serviceCode 11111111111111111111 -participantCode 11111111111111111111 -of output/trans.out;
	либо в файле, например: создать файл trans.args (возможно создание текстового файла с любым расширением: например, *.args, *.txt, *.in и т.д.) с содержанием, приведенным на рисунке 51, и запустить следующим образом: transactiontool.bat -argsFile input/trans.args.

 
Рисунок 57 – Содержимое файла trans.args с входными данными
В приведенном выше примере необязательный параметр «of output/trans.out» указывает на место, название и расширение создаваемого файла с выходными данными. Без указания данного параметра выходные данные будут выведены в консоль.
З.4.	Установочная конфигурация
Установочная конфигурация набора «toolset» определяется обязательными настройками, приведёнными в таблице 2.
Таблица 2 – Настройки утилит набора «toolset»
№	Наименование настройки	Усл. обозн.	Ед. изм.	Пример
1	Настройки файла сonfig.props
1.1	Настройки transactiontool
1.1.1	Адрес веб-сервиса системы генерации кодов транзакций 	transaction.service.url	- 	http://10.215.0.77:8580/tm/Marker?wsdl 
1.1.2	Таймаут соединения с веб-сервисом системы генерации кодов транзакций	transaction.service.timeout	Миллисекунда	10000
1.2	Настройки messagetool
1.2.1	Перечень идентификаторов ГРУ СМЭВ3.х	transport.list	-	main, reserve, где:
	main – это идентификатор основного ГРУ СМЭВ3.х
	reserve – это идентификатор резервного ГРУ СМЭВ3.х
1.2.2	Адрес веб-сервиса основного ГРУ СМЭВ3.х	transport.main.url, где main – это идентификатор основного ГРУ СМЭВ3.х	-	http://10.215.0.62:7500/ws?wsdl 
1.2.3	Время, через которое произойдет переключение на резервный ГРУ при условии разрыва установленного соединения с основным ГРУ	transport.main.timeout, где main – это идентификатор основного ГРУ СМЭВ3.х	Миллисекунда	100000
1.2.4	Адрес веб-сервиса резервного ГРУ СМЭВ3.х	transport.reserve.url, где reserve – это идентификатор резервного ГРУ СМЭВ3.х	-	http://10.215.0.63:7500/ws?wsdl 
1.2.5	Время, через которое произойдет переключение на резервный ГРУ при условии разрыва установленного соединения с основным ГРУ.	transport.reserve.timeout, где reserve – это идентификатор резервного ГРУ СМЭВ3.х	Миллисекунда	100000
1.2.6	Адрес FTP-сервера ФХ СМЭВ3.х	large.attachment.transport.address	-	10.215.0.136 
1.2.7	Логин доступа в FTP-сервер ФХ СМЭВ3.х	large.attachment.transport.login	-	anonymous
1.2.8	Пароль доступа в FTP-сервер ФХ СМЭВ3.х	large.attachment.transport.password	-	smev
1.2.9	Количество попыток переотправки файла вложения сообщения	large.attachment.transport.retries	Шт.	3
1.2.10	Таймаут соединения с FTP-сервером ФХ СМЭВ3.х	large.attachment.transport.timeout	Миллисекунда	10000
1.2.11	Контрольная проверка сообщения, отправляемого в СМЭВ3.х (если =0, то проверка отключена; если =1, то проверка включена)	template.validate.input	-	1
1.2.12	Контрольная проверка сообщения, принятого из СМЭВ3.х (если =0, то проверка отключена; если =1, то проверка включена)	template.validate.output	-	1
1.2.13	Переключатель логирования событий контрольной проверки сообщения, отправляемого в СМЭВ3.х (если =0, то логирование отключено; если =1, то логирование включено)	template.log.input	-	1
1.2.14	Переключатель логирования событий контрольной проверки сообщения, принятого из СМЭВ3.х (если =0, то логирование отключено; если =1, то логирование включено)	template.log.output	-	1
1.2.15	Контрольная проверка ЭП-СМЭВ (если =0, то проверка отключена; если =1, то проверка включена)	template.validate.smev.signature	-	1
1.2.16	Параметр сохранения принимаемых вложений сообщений (путь сохранения файлов вложений)	template.local.storage	-	output/client
1.3	Настройки signertool
1.3.1	Имя криптопровайдера	signer.provider	-	JCP
1.3.2	Алиас сертификата	signer.certificate.alias	-	dev2
1.3.3	Алиас ключа	signer.private.key.alias	-	dev2
1.3.4	Пароль	signer.private.key.password	-	123456
1.3.5	Место нахождения сертификата	signer.smev.certificate.store	-	C:/docs/smev/client_2015/testData/cert
1.4	Настройки adminservtool
1.4.1	Адрес административного сервиса	adminservice.url	-	http://localhost:7070/admserv/AdministrativeService?wsdl
1.4.2	Таймаут соединения с административным сервисом	adminservice.timeout	Миллисекунда	100000
2	Настройки файла log4j.props
2.1	Обозначение логгеров	log4j.rootLogger	-	STDOUT, FILE
2.2	Имплементация логгера в файл	log4j.appender.FILE	-	org.apache.log4j.RollingFileAppender
2.3	Наименование и место создания файла логгера	log4j.appender.FILE.File	-	toolset.log
2.4	Максимальный размер файла логгера, при достижении которого создаётся новый файл логгера	log4j.appender.FILE.MaxFileSize	Мегабайт	16МВ
2.5	Максимальное количество файлов логгера, при достижении которого старые файлы заменяются новыми файлами логгера	log4j.appender.FILE.MaxBackupIndex	Шт.	256
2.6	Имплементация формата сообщения лога, записывающегося в файл логгера	log4j.appender.FILE.layout	-	org.apache.log4j.PatternLayout
2.7	Регулярное выражение, описывающее формат сообщения лога, записывающегося в файл логгера	log4j.appender.FILE.layout.conversionPattern	-	[%d{dd.MM.YYYY HH:mm:ss.SSS}] %5p [%t] - %m%n
2.8	Имплементация логгера в консоль	log4j.appender.STDOUT	-	org.apache.log4j.ConsoleAppender
2.9	Имплементация формата сообщения лога, выводящего в консоль	og4j.appender.STDOUT.layout	-	org.apache.log4j.PatternLayout
2.10	Регулярное выражение, описывающее формат сообщения лога, выводящего в консоль	og4j.appender.STDOUT.layout.conversionPattern	-	[%d{dd.MM.YYYY HH:mm:ss.SSS}] %5p [%t] - %m%n
2.11	Кодировка сообщения лога, выводящего в консоль	log4j.appender.STDOUT.Encoding	-	windows-1251
З.5.	Описание входных и выходных параметров
Описание входных и выходных данных набора «toolset» приведено в таблице 3.
Таблица 3 – Перечень входных и выходных данных набора «toolset»
№	Наименование данных	Усл. обозн.	Ограничения	Комментарий
1	Утилита transactiontool
1.1	Входные данные
1.1.1	Код ФРГУ госуслуги/признак госфункции	serviceCode	Обязательный параметр, не более 20 символов	Например: 11111111111111111111
1.1.2	Код ФРГУ информационной системы	participantCode	Обязательный параметр, не более 20 символов	Например: 11111111111111111111
1.1.3	Сведения о получателе услуги либо функции	participantDescr	Опциональный параметр, не более 1000 символов	-
1.1.4	Сведения об услуге либо функции	serviceDescr	Опциональный параметр, не более 1000 символов	-
1.2	Выходные данные
1.2.1	Код транзакции	-	-	Например: d02b9d45-cbe0-11e5-a4f5-86958c02569a|11111111111111111111|W94wQVXgoIrcYgReRDzZun+zv62MUTqJG2v7tinVUapvI7cSnXf0jCFcYPEwKGXINzXKQMn0PhEqFwcojnop8OFVBQ9LFfjGGhZko3xJ8Hnl7Ypn/CJgo5MeXyLTSUt6iCHEhSynz764gzorCsXYv4QBql7LwKEx65a7WVT1BB0+nt/Bioy//JHR728nyfFP0ELXvrg41b0Kdc0REtwVfnw2Seg0ELbgaEtrKKN9hQtVDC9x0flotIcZlY4I84IBxGM2SWfF68Yy63dp0XZAINqUx+FgHh04vuXaLfmFrIB73kB32iYexmXwjTBiCEKYgEvo+jlJ9/3+cwVPIn24cQ==
2	Утилита messagetool
2.1	Входные данные
2.1.1	Вид сообщения	cmd	Обязательный параметр, принимает одно из следующих значений:
	sendReq
	sendResp
	getReq
	getResp
	sendRejResp
	sendStatusResp
	ack
	getStatus	сmd sendReq означает сообщение, передаваемое через метод sendRequest сервиса СМЭВ.
сmd sendResp означает сообщение, передаваемое через метод sendResponse сервиса СМЭВ.
сmd getReq означает сообщение, передаваемое через метод getRequest сервиса СМЭВ.
сmd getResp означает сообщение, передаваемое через метод GetResponse сервиса СМЭВ.
сmd sendRejResp
означает сообщение об отклонении запроса, передаваемое через метод sendResponse сервиса СМЭВ.
сmd sendStatusResp
означает статусное сообщение, передаваемое через метод sendResponse сервиса СМЭВ.
сmd ack означает сообщение, передаваемое через метод ack сервиса СМЭВ.
сmd GetStatus означает сообщение, передаваемое через метод GetStatus сервиса СМЭВ.
2.1.2	Блок бизнес-данных сообщения	if	Обязательный параметр для cmd sendReq и cmd sendResp. Принимает путь к файлу формата *.xml с блоком бизнес-данных сообщения. 	Например: if=testdata/request.xml
2.1.3	Код транзакции	tid	Обязательный параметр для cmd sendReq.
Принимает код транзакции, полученный из системы генерации кодов транзакций средствами утилиты transactiontool	Например: tid=1bbe12f1-ded5-11e5-a9db-86958c02569a|12345678901234567890|jOW0eLrHN7jyiQ6bsfbuA/NK3R0CEdD7Rqm2smNNgflMgsb8xdOYzExucVQuA3ZhfZ2T4kLUJQGfGgsZZZzYcHR/Zw/ZVQd4sUoifa9xKBtrVOLBR997TLea43rjn1PrGvw8136spSMON9kjzphkgSABLanww+Aeb/TsHg+gdmbi2q8joWg9gKbx5AP2jCNVF4yaUSFUtutMKvN3rAg+km7p88zR1xepzq0+f3jr8jWhsbUnwoNDXcqVY0h0gS1ZayeRL5nndodzGTNeU0WKvt7pCtHltj4zCppG3olArgirk3gkJ7C4di6jnxgSTuHokdoh4g0C9qRU4fFO2mpmjQ==
2.1.4	Файлы вложения, передаваемые вместе с сообщением	mtomAtts	Опциональный параметр для cmd sendReq и cmd sendResp. Принимает пути к файлам, передаваемым вместе с сообщением. Пути к файлам приводятся через «;».	Например: mtomAtts=testdata/mtom1.txt;testdata/mtom2.txt
2.1.5	Файлы вложения, передаваемые отдельно от сообщения	largeAtts	Опциональный параметр для cmd sendReq и cmd sendResp. Принимает пути к файлам, передаваемым отдельно от сообщения. Пути к файлам приводятся через «;».	Например: largeAtts=testdata/large_file1.jpg;testdata/large_file2.jpg
2.1.6	Информация о бизнес-процессе, в рамках которого пересылается данное сообщение.	bpm	Опциональный параметр для cmd sendReq. Принимает путь к файлу формата *.xml с описанием бизнес-процесса.	Например: bpm=testdata/bpm1.xml
2.1.7	Время жизни сообщения	eol	Опциональный параметр для cmd sendReq. Принимает значение даты в формате ДД.ММ.ГГГГ ЧЧ:ММ:СС.	Например: eol=07.10.2015 18:43:00
2.1.8	ЭП-СП файлов вложения или содержательной части сообщения	ps	Опциональный параметр для cmd sendReq и cmd sendResp.
Принимает путь к файлу формата *.xml с ЭП-СП, полученного средствами утилиты signertool	Например: ps=testdata/personal_signature.xml
2.1.9	Обратный адрес	replyTo	Обязательный параметр для cmd sendResp, сmd sendRejResp и сmd sendStatusResp.
Принимает значение обратного адреса.	Например: replyTo=eyJzaWQiOjM3LCJtaWQiOiJjMWNhOGNjNC02Y2RjLTExZTUtOTUxMi1kNGM5ZWZmM2I1OTQiLCJ0Y2QiOiJmNTkyNzc5Ni1lMWFlLTQ4ZmEtYjE0MS1kNzkwYzlhMDZiMTd8MjAxNS0wNC0yNFQwOTozNzo1MS44OTh8ZnJndTJ8VHZjWjF4T2VnTEgrTVpyVXRIdWpBdCtRcHlxWmh6RHVTSHNxbkJPYkkraWJzN3k0MGZjODhlSkxyQy9RSW1hTVYvYmNYcHBsUkh4NWpzS294UVpEREV6UlNmMDNRK1ROa1lCRms0L1FtZW1NNFVHYmpZY2FQOU16YzBXT0QzblIzYXdzZjhzWU96VWpQclV5cTZPenhiZk8rK01Fd0psYmpjdWtXSDZQNUFFWTF4UU0wbHRPdGhZQ2h6Ulk4SWQ0RGFGanBkWEZZMitITzFxOWhsazlFOVZBZndtTHlXMGJ4MTBmTGM2bVBUSUF2ajJ6QjVPV010cW5ydjJobUF1Qm9WQjJWWXI5TE4wT3VEcWZ5MkRpb3NzSjdYVWc1cHhRTnphdWtpb1Nxc2dZSWVNSkhrZ1U2MXBPZlZ5cmdRWXBJZEo3UHM0dXlleFh3SXJJME5WdDFGYXg3YmhDblhSRFZpZ3RxNEYwaVA0Tk9vSTd0L1ppWlFWVDkzQ2FKL2hON2lpcXVFb3piUkRRZ3Ayd1pRbktMai8zRjZuaUlxSFJoZFFTMDFmcEJoV28xbEZkNDhySk1hMkplL2ovemQzeHJDa2RIT2p3NGJySnBlbXZlMzFWODI5SFM5OFZTMk93YVRuL2dTRjY5Yi91S2QzbFlCN3pjMGVtNDQ5OUt3Ym1DcUlVT1BvU1JVWldiL2RCcEczVDBEb2c3MCtIS3JoT3ljY2hCUDdUZU10Q09SZU9nYUFGa0FHdHVicGNBL1VJUEkrdkZDUkpQV1lyK0lMUDRXU3NpektzVi9EQzdZSmdpcmE0dzJ1RHZXOTlUWlY3dm5sOTltUEJiQnloTm9tL3gyN2E2U0toK3MrSitLaXQ0SGV6a1VGMGxUeUdwWkZzU0w0dW43RmVxMTg9IiwicmlkIjoiYzFjYThjYzQtNmNkYy0xMWU1LTk1MTItZDRjOWVmZjNiNTk0IiwiZW9sIjoxNDQ0MjE0MTEwLCJuaWQiOiIxIiwic2xjIjoieC1hcnRlZmFjdHMtc21ldi1nb3YtcnVfdGVzdGluZ19sb2FkIn0=
2.1.10	Идентификатор вида сведений	rts	Опциональный параметр для cmd= getReq и cmd= getResp. Принимает значение идентификатора вида сведений.	Например: rts={urn://x-artefacts-smev-gov-ru/services/message-exchange/1.2}localNameRequest
2.1.11	Код статуса	code	Обязательный параметр для сmd=sendRejResp и сmd=sendStatusResp.
Принимает значение кода статуса.	Например: code=1
2.1.12	Описание статуса	desc	Обязательный параметр для сmd=sendRejResp и сmd=sendStatusResp.
Принимает описание статуса.	Например: desc=Some description
2.1.13	Идентификатор сообщения (запроса либо ответа)	msgId	Обязательный параметр для сmd=ack.
Принимает значение идентификатора сообщения.	Например: msgId=7d2799a4-6cd1-11e5-8561-2c44fd105812
2.2	Выходные данные
2.2.1	Синхронный ответ на запрос, включающий его метаданные и данные сообщений из очередей доставки либо статистики входящих очередей.	-	-	Для сmd sendReq,
сmd sendResp, sendRejResp и сmd sendStatusResp возвращается либо ошибка обработки сообщения, либо уведомление о постановке сообщения в асинхронную обработку.
Для сmd getReq и сmd getResp возвращает сообщение из очереди доставки либо ошибку обработки запроса.
Для сmd ack возвращает ответное сообщение либо ошибку обработки запроса.
Для сmd GetStatus возвращает сообщение из статусной очереди либо ошибку обработки запроса.
2.2.1.1	Данные сообщений из очередей доставки либо статистики входящих очередей.	-	-	Возвращается «NO_MESSAGE» в результате: 
	ошибки обработки запроса
	отсутствия сообщений в очередях доставки
	запрос отправлен sendReq, sendResp, ack и sendRejResp 
В остальных случаях возвращается xml-строка сообщения.
2.2.1.2	Метаданные в составе: 			
	путь к файлу с дополнительными свойствами	map <имя файла> 	-	
	идентификатор сообщения, в ответ на которое отсылается текущее	origMsgId <идентификатор>	В соответствии с RFC-4122	Например: 29f2c3e6-ce71-11e5-bca4-08606ee4e99b
	идентификатор исходящего сообщения	refMsgId <идентификатор>	В соответствии с RFC-4122	Например: 29f2c3e6-ce71-11e5-bca4-08606ee4e99b
3	Утилита identitytool
3.1	Входные данные
3.1.1	Вид запроса	cmd	Обязательный параметр, принимает одно из следующих значений:
	msgUuid
	attachUuid
	attachId	Если необходимо запросить идентификатор сообщения, то запрос делается с параметром msgUuid. Например: identitytool.bat -cmd msgUuid
Если необходимо запросить идентификатор файла вложения сообщения, то запрос делается с параметром attachUuid. Например: identitytool.bat -cmd attachUuid.
Если необходимо запросить наименование файла вложения сообщения, то запрос делается с параметрами attachId, mime (mime-тип файла, определяющее его расширение) и num (порядковый номер). Например: identitytool.bat -cmd attachId -mime "text/plain" -num 1.
3.2	Выходные данные
3.2.1	Идентификатор сообщения	-	В соответствии с RFC-4122	Например: 29f2c3e6-ce71-11e5-bca4-08606ee4e99b
3.2.2	Идентификатор файла вложения сообщения	-	В соответствии с RFC-4122	Например: 7caf8c1c-c485-4265-b6f0-4680d7aca4f0
3.2.3	Наименование файла	-	-	Например: __ATT_ID_SMEV_C_AUTOGEN__1.txt
4	Утилита signertool
4.1	Входные данные
4.1.1	Вид запроса	cmd	Обязательный параметр, принимает одно из следующих значений:
	signXml
	signHash
	digest
	validate	сmd signXml означает запрос на получение ЭП-СП блока бизнес данных сообщения.
сmd signHash означает запрос на получение ЭП-СП хэша файла.
cmd digest означает получение хэша файла.
cmd validate означает получение данных результатов проверки целостности блока бизнес-данных сообщения.
4.1.2	Файл ресурса для обработки 	if	Обязательный параметр. 	Например: 
для сmd signXml: signertool.bat -cmd signXml -if testdata/request.xml

для сmd signHash: signertool.bat -cmd signHash -if testdata/hash.file

для cmd digest: signertool.bat -cmd digest -if testdata/binary.file

для cmd validate: signertool.bat -cmd validate -if testdata/request.xml -sig testdata/signature.xml 
4.1.3	ЭП-СП блока бизнес данных сообщения	sig	Обязательный параметр для validate	Например: signertool.bat -cmd validate -if testdata/request.xml -sig testdata/signature.xml
4.2	Выходные данные
4.2.1	ЭП-СП блока бизнес данных сообщения	-	-	
4.2.2	ЭП-СП хэша файла	-	-	
4.2.3	Хэш файла	-	-	
4.2.4	Результат проверки целосности блока бизнес данных сообщения	-	-	
5	Утилита adminservtool
5.1	Входные данные
5.1.1	Отсутствуют	-	-	-
5.2	Выходные данные
5.2.1	Ответ о приеме запроса на переключение	SwitchResponse	-	
5.2.2	ЭП-ОВ не прошла проверку	SignatureVerificationFault	-	
5.2.3	ИС отправителя не зарегистрирована в СМЭВ	SenderIsNotRegisteredFault	-	
5.2.4	ИС отправителя установлена блокировка на переключение	SenderIsSwitchBlockedFault	-	
5.2.5	Ошибка СМЭВ	SMEVFailure	-	
Приложение И.	Термины и сокращения
В документе используются следующие термины и определения:
Бизнес-транзакция	Набор транзакций (пар запрос-ответ) между одним инициатором и одним ответчиком сведений, связанных единой бизнес-логикой получения сведения.
Веб-сервис (электронный сервис)	Идентифицируемая веб-адресом программная система со стандартизированными интерфейсами. См. также http://www.w3.org/2002/ws/
Единый электронный сервис СМЭВ	Веб-сервис, предназначенный для обеспечения информационного взаимодействия СМЭВ с ИС УВ посредством сообщений, основанных на протоколе SOAP, в соответствии с настоящими Методическими рекомендациями
ГРУ	Геораспределенный узел СМЭВ
ГУЦ	Информационная система головного удостоверяющего центра
ЕПГУ	Единый портал государственных и муниципальных услуг (функций)
ЕСНСИ	Единая система справочников и классификаторов, используемых в государственных и муниципальных информационных системах (Единая система нормативно-справочной информации)
ИС	Информационная система
Информационный ресурс (Информресурс)	Описание в свободной форме структуры данных, содержащихся в информационных ресурсах ведомств, которые задействованы в межведомственном информационном взаимодействии в электронной форме (используются для описания информационных ресурсов, сведения из которых ответчики могут предоставить инициаторам посредством СМЭВ)
Квота очереди ИС	Технологический размер очереди – максимальное количество сообщений, которое может быть размещено в очереди ИС Участника
Квота файлового хранилища 	Технологический объем выделенного для ИС Участника места на файловом хранилище
НИК	Набор инструментов клиента СМЭВ
СГКТ	Система генерации кодов транзакций
СПКТ	Сервис предоставления кодов транзакций СГКТ
СМЭВ	Система межведомственного электронного взаимодействия
РСМЭВ	Разработческая среда СМЭВ, предназначенный для отладки протокола обмена при проектировании
ТСМЭВ	Тестовая среда СМЭВ, предназначенный для аттестации протокола обмена и ИС УВ
ПСМЭВ	Продуктовая среда СМЭВ, предназначенный для промышленного взаимодействия УВ
ЛК УВ	Личный кабинет Участника взаимодействия.
ОВ	Орган власти
ОИВ	Органы исполнительной власти
Оператор СМЭВ 	Министерство цифрового развития, связи и массовых коммуникаций Российской Федерации (в соответствии с постановлением Правительства РФ N 697 от 08.09.2010).
Органы и организации	Федеральные органы исполнительной власти, государственные внебюджетные фонды, исполнительные органы государственной власти субъектов Российской Федерации, органы местного самоуправления, государственные и муниципальные учреждения, многофункциональных центров, иные органы и организации.
Отправитель сообщения	Информационная система, отправляющая сообщение через СМЭВ
Очередь доставки запросов ответчика	Очередь СМЭВ хранящая пул запросов для ответчика на запросы сведений.
Очередь доставки ответов инициаторов	Очередь СМЭВ хранящая ответы на запросы в адрес инициатора.
Получатель сообщения	Информационная система, получающая сообщение из СМЭВ.
Инициатор запроса сведений	Участник взаимодействия, запрашивающий сведения у ответчика на запрос сведений.
Ответчик на запрос сведений	Участник взаимодействия, поставляющий сведения в ответ на запрос сведений.
Представитель ОИВ-Владельца сведений	Представитель ОИВ-Владельца; отвечает в рамках СМЭВ за создание Видов сведений по данным в его зоне ответственности, используемых в рамках СМЭВ различными ОИВ-инициаторами запросов сведений;
Владелец вида сведения (протокола обмена)	Участник межведомственного информационного взаимодействия, ответственный за разработку, регистрацию, вывод из эксплуатации и поддержку ВС (в том числе сведений в соответствии с требованиями, установленными распоряжением Правительства Российской Федерации от 29 июня 2012 г. №1123-р «Об утверждении перечня сведений, находящихся в распоряжении государственных органов субъектов Российской Федерации, органов местного самоуправления, территориальных государственных внебюджетных фондов либо подведомственных государственным органам субъектов Российской Федерации или органам местного самоуправления организаций, участвующих в предоставлении государственных или муниципальных услуг»). Владелец ВС может быть как Ответчиком, так и Инициатором взаимодействия по ВС.
Прикладная схема (Владельца сведений)	XML-схема, описывающая состав структурированных сведений, передаваемых в рамках запросов и ответов, в соответствии с требованиями Владельца сведений. 
Согласующий представитель МКС	Роль, назначаемая представителям Оператора СМЭВ, уполномоченным на согласование процессов межведомственного взаимодействия.
Согласующий представитель МКС осуществляет контроль за корректностью обмена данными между ОИВ-инициаторами запроса сведений и ОИВ-ответчиками.
РФ	Российская Федерация
Технологический портал СМЭВ3	Справочный интернет-ресурс, посвящённый СМЭВ, функционирующей согласно настоящим Методическим рекомендациям; доступен по адресу – https://smev3.gosuslugi.ru
УВ	Участник взаимодействия – орган или организация, участвующая в электронном обмене через СМЭВ.
ФРГУ	Федеральный реестр государственных услуг
ФПД	Формат передаваемых данных
ФХ	Файловое хранилище СМЭВ
ЭП	Электронная подпись
ЭП-ОВ	Электронная подпись органа власти
ЭП-СМЭВ	Электронная подпись СМЭВ
ЭП-СП	Электронная подпись для служебного пользования (должностного лица)
ЦНСИ	Центральный модуль ЕСНСИ.
Namespace, пространство имен	Логическая группировка уникальных идентификаторов (имён), подробнее см. 
http://www.w3.org/TR/2009/REC-xml-names-20091208/

MTOM	Message Transmission Optimization Mechanism, механизм передачи вложений в двоичном формате с сообщениями протокола SOAP как необработанных байтов. См. также
http://www.w3.org/TR/2005/REC-soap12-mtom-20050125/

MTOM/XOP оптимизация	Процедура переноса оптимизированного с использованием MTOM значения типа base64Binary за пределы soap-конверта и размещения его в виде MIME-вложения в заголовке http-запроса в соответствии с требованиями XML-binary Optimized Packaging. 
SOAP	Simple Object Access Protocol версии 1.1 – протокол обмена структурированными сообщениями в распределённой вычислительной среде. См. также http://www.w3.org/TR/2000/NOTE-SOAP-20000508/
Target namespace, пространство имен XML-схемы	Логическая группировка уникальных идентификаторов (имён) элементов и атрибутов в схеме XML-документа, подробнее см. http://www.w3.org/TR/2012/REC-xmlschema11-1-20120405/

Qualified name, полное имя (XML элемента)	Пара, состоящая из префикса в виде пространства имен и локального имени XML-элемента. См. http://www.w3.org/TR/2009/REC-xml-names-20091208/#ns-qualnames

URI	Unified Resource Identifier, уникальный идентификатор ресурса. Может быть либо URL – уникальным локатором ресурса, либо URN – уникальным именем ресурса. См. также http://tools.ietf.org/html/rfc3986

WSDL	Язык описания веб-сервисов и доступа к ним версии 1.1, основанный на языке XML. Смотри также http://www.w3.org/TR/wsdl
XSD	Файл, содержащий XML Schema
XML Schema	Язык описания структуры XML-документа. См. также:
http://www.w3.org/TR/xmlschema-0/
http://www.w3.org/TR/xmlschema-1/
http://www.w3.org/TR/xmlschema-2/
XML	Расширяемый язык разметки. См. также
http://www.w3.org/TR/xml11/
XML-binary Optimized Packaging	Соглашение, определяющее правила сериализации бинарных данных, передаваемых в XML-сообщениях
https://www.w3.org/TR/2005/REC-xop10-20050125/ 


Приложение К.	История изменений 
Изменения в версиях с №3.5.0.0 
Версия	Дата	Автор	Комментарии
3.5.0.1				Внесена информация о функциональности специальных очередей (пп.4.10)
	Внесена информация об использовании фильтрации с составным критерием (пп. 4.10, пп.5.3.2)
	Скорректирован ГОСТ и размер хэш (Раздел 6)
	Из документа исключен перечень Ошибок СМЭВ и перенесем в отдельный файл, опубликованный на Технологическом портале СМЭВ 3 (Приложение Е)
	Добавлено расширенное описание использования ФХ. Скорректированы схемы взаимодействия (Раздел 7)
3.5.0.1	08.05.2019	Лазарев А. Ю.	Внесена информация о передаче вложений: 
	при передаче вложения через MTOM суммарный размер СМЭВ заголовка и передаваемого вложения не должен превышать 5 Мб (Разделы 4, 5, 7);
	загруженные в ФХ файлы с использованием анонимного доступа удаляются через 30 минут после загрузки, если в асинхронную обработку не поступило СМЭВ документов, имеющих ссылку на загруженные файлы (Раздел 7)
3.5.0.1	12.11.2019	Карташова Е.А.	Удален п. 9 Указание мнемоники сервера отправки сообщения (NodeID)
Из пп. 5.2, Приложение 3 (пп.3.5) удалена информация об использваонии параметра NodeId, т.к данный функционал больше не поддерживается
3.5.0.1	31.07.2020	Лазарев А. Ю.	Уточнен алгоритм трансформации в части работы с пробельными символами:
	В подразделе 6.3 добавлены ссылки на Приложение А и Приложение Г.
	В подразделе 6.4 добавлены ссылки на Приложение А и Приложение Г.
	В подразделе 6.5 добавлены ссылки на Приложение А и Приложение Г.
	В приложении Приложение А добавлено описание 2, скорректировано описание 3, добавлено описание 4.
Описания 2, 3, 4 отражают специфику алгоритма трансформации при работе с пробельными символами  – \u0009 - табуляция, \u000A – перевод строки (Unix), \u000D - возврат каретки, \u0020, а также с любыми другими символами, код которых меньше \u0020
3.5.0.1	31.08.2020	Карташова Е.А
Геков К.В.		Добавлен пункт 4.6.3.2.Общая маршрутизация рассылки (По идентификаторам)
	Скорректирована схема в пункте 4.6.3.3.	Фрагментарная маршрутизация (По идентификаторам)
	Внесены уточнения в пп. 5.2.2.2.2.Блок маршрутной информации. Добавлена информация по типам маршрутизации, для которых заполнение тегов является обязательным.
	Внесены изменения в пп. 5.2.	Единый сервис СМЭВ. Скорректированы схемы и описания взаимодействия по директивным протоколам обмена в части использования вложений.
	Внесены изменения в пп.10.1.Описание сервиса приёма push-уведомлений. Исключена информация в части, если ИС не может отправить push-нотификацию сервису приема push-уведомлений.
	Понятия «Поставщик» и «Потребитель» заменены на «Инициатор», «Ответчик»/Владелец сведения.
3.5.0.1	15.09.2020	Карташова Е.А
		Внесены уточнения в пп .5.3. Добавлена рекомендация о периоде формирования сообщений методом GetRequest/GetResponse
	В разделе 6 актуализирован используемый ГОСТ.
3.5.0.3	10.11.2020	Карташова Е.А	Добавлена информация по работе с учетом кросверсионности схем СМЭВ в пункт:
	5.2.8.1.	Версия 1.2
Добавлена информация о времени возвращения сообщения в очередь в зависимости от размера вложения:
	5.3.3.	Подтверждение приёма сообщения
В связи с выводом нового функционала:
	Добавлен пункт 5.3.4
Обновлены схемы в Приложении М.Схемы единого сервиса СМЭВ3.Х
Переработан механизм трансформации, в связи с чем внесены изменения в следующие разделы:
	Приложение А 
	Приложение Б
	Приложение Г
	Приложение Д
3.5.0.4	28.12.2020	Карташова Е.А.		Доработан пп.5.2.1.	Общие положения
Добавлено уточнение по указанию HOST в HTTP-заголовке СМЭВ-сообщения.

	Доработан пп. 5.2.6.1.	Блок данных СМЭВ-конверта
Добавлено уточнение по перечню возможных категорий статусов СМЭВ-сообщения 

	Доработан пп. 5.3.3.	Подтверждение приёма сообщения
Добавлено уточнение по подтверждению сообщений, сформированных по ВС с директивным протоколом обмена.

	Скорректирован Рисунок 41 в п.7.Пересылка вложений с использованием файлового хранилища. 
На схеме обновлен пароль для доступа к ФХ.

	Доработано Приложение М.	Схемы единого сервиса СМЭВ3.Х

Добавлены схемы СМЭВ по версии 1.1. Скорректирована схема message-exchange-types-1.2.
	Скорректированы пп. 6.3. Правила формирования ЭП и Приложение В. Профиль формата PKCS#7, которому должны удовлетворять подписи вложенных файлов с учетом полного перехода на ГОСТ 2012.
3.5.0.5	20.02.2021	Карташова Е.А.		 Скорректирован пункт 3.4.Протоколы обмена (виды сведений)
	Добавлено описание  в понятие видов  сведений.
	 Скорректирован пункт 4.6.2.2. Табличная маршрутизация
	Добавлено описание значения Xpath-выражения.
	 Скорректирован пункт 4.10.Организация очередей
	Добавлена схема взаимодействия с очередями
	 Скорректирован пункт 5.1.1.Подготовка руководства пользователя протокола обмена (вида сведений)
	Актуализированы поля и добавлено соответствующее описание.
	Скорректирован пункт 5.2.8.2.	Версия 1.3. Добавлена информация по кросверсионности.
	
3.5.0.6	22.03.2021	Карташова Е.А.	В связи с вводом ограничения на количество вложений при взаимодействии по версии схем 1.1. и 1.2, скорректированы пункты:
	5.2.7.1.	Блок заголовков и ЭП-СП вложений, передаваемых посредством файлового хранилища
	7.	Пересылка вложений с использованием файлового хранилища
	В пункт Приложение И. Термины и сокращения внесено определение Владельца вида сведения
	Добавлено описание и обновлен пример в пп.5.2.7.3.	Блок содержимого вложений, передаваемых МТОМ
3.5.0.8	12.04.2021	Геков К.В
Карташова Е.А	В связи с выводом новой функциональности добавлен пункт 
	5.4 Интенсивность обращений к методам Единого сервиса
3.5.0.9		Карташова Е.А	В связи с вводом новой функциональности добавлен пункт:  
	5.3.5 Использование выделенной очереди (NodeID)

Для пункта 5.3.4.    Пакетная выгрузка добавлено Приложение Н с примерами использования

Добавлена информацию по указанию заголовок вложения в пункты:
	5.2.2.1 Простые протоколы обмена
	5.2.4.1 Простые протоколы обмена

Добавлено уточнение в пункт
	5.3.2.    Получение сообщения с фильтрацией по протоколу обмена по указанию параметров фильтрации.

3.5.0.9		Карташова Е.А	Добавлены рекомендации в части формирования подписи в пункт 
	6.3.1.	Подписи в формате PKCS#7
Добавлен пункт (ранее информация присутствовала в старой версии Методический рекомендаций версии 3.4)
	5.3.6.	Получение уведомления из очереди статусов
3.5.0.10		Карташова Е.А	Добавлен новый пункт с рекомендациями по формированию http-заголовков
	5.2.1.1.	Правила формирования HTTP-заголовков в сообщении
Добавлены уточнения по адресу для выгрузки файла с ФХ в пункт
	7.	Пересылка вложений с использованием файлового хранилища
3.5.0.11		Карташова Е.А	В связи с особенностями формирования ЭЦП по Видам сведений с динамической маршрутизацией добавлены уточнения в пункты:
	5.2.8.2.	Версия 1.3
	6.5.3.	Правила формирования электронной подписи ИС

3.5.0.12		Карташова Е.А	Внесена дополнительная информация по формирования uuid в асинхронных статусных уведомлениях:
	5.2.5.1.1.	Блок данных СМЭВ-конверта
	5.2.6.1.	Блок данных СМЭВ-конверта
Внесена расширенная информация в пункт (пункт переименован): 
	пп 5.4.	Интенсивность обращений информационной системы Участника взаимодействия к методам Единого сервиса
В связи с неактуальностью функциональностей КТДА, внесены изменения в следующие пункты:
	Переименован и скорректирован раздел 3. Метаданные и КТДА
	Исключены пункты 5.1.2.1.	Использование атрибутов из модели данных Участника взаимодействия,  5.1.4.	Использование СМЭВ.КТДА для проектирования протокола обмена и отладки взаимодействия по протоколу		   
	Скорректированы разделы:
4.4.1.2.	Элементы формата СМЭВ-заголовка
4.4.1.4.	Директивные и простые протоколы обмена (виды сведений) 
4.4.2.3.1.	Элементы формата структурированного СМЭВ-вложения
4.6.3.3.3.	Хранилище (идентификаторов)
5.1.2.	Проектирование форматов передаваемых данных
Приложение И.	Термины и сокращения

Добавлена дополнительная информация по фильтрации в пункт:
	5.3.2. Получение сообщения с фильтрацией по протоколу обмена
Внесена дополнительная информация по авторизации на ФХ в раздел:
	7. Пересылка вложений с использованием файлового хранилища
Изменена ссылка на стандарт RFC 4122 в пунктах:
	5.2.2.1.1.	Блок данных запроса
	5.2.4.1.1.	Блок данных ответа
	5.2.4.2.1.	Блок данных ответа
	5.2.6.1.	Блок данных СМЭВ-конверта
	7. Пересылка вложений с использованием файлового хранилища

3.5.0.13		Карташова Е.А	Добавлено требование лимита в части использования специальных очередей по протоколу обмена (мультиочереди):
	4.8 Пропуская способность отвечающей стороны
Добавлена дополнительная информация по дейсвиям в случае получения ошибки в пункт:
	5.4.	Интенсивность обращений информационной системы Участника взаимодействия к методам Единого сервиса
Добавлено уточнение при кроссверсионном обмене в пункт:
	5.2.8.	Особенности схем сервиса СМЭВ
В связи с неактуальность функциональностей, удалены следующие пункты:
	Приложение Н.	Пакетная выгрузка
	5.3.4.	Пакетная выгрузка
В связи с неактуальностью функциональности составного критерия фильтрации скорректирован пункт:
	5.3.2.	Получение сообщения с фильтрацией по протоколу обмена

3.5.0.14		Карташова Е.А	Расширена информация по работе с лимитами интенсивности обращений к методам Единого сервиса в пункте:
	5.4.	Интенсивность обращений информационной системы Участника взаимодействия к методам Единого сервиса
Актуализированы требования в пунтке:
	5.1.4.2.	Ограничения использования справочников ЕСНСИ при межведомственном обмене
Добавлено уточнение по работе с графическими объектами в пункте:
	Приложение А.	АЛГОРИТМ трансформации XML
Для схем smev-message-exchange-basic-1.X.xsd (где X - номер версии) скорректировано описание по правилам заполнения тега AckTargetMessage:
	Приложение М.	Схемы единого сервиса СМЭВ3.Х

Изменения в версиях с №3.4.0.3 по №3.5.0.0
Укрупнённое описание изменений
Внесены существенные изменения, как в структуру материала, так и в используемый понятийный ряд. Для целостного восприятия, рекомендуется перечитать, первые две части документа. 
Изменён порядок изложения материала в документе. Первые две части документа, «Введение» и «СМЭВ. Базисное описание» описывают возможности СМЭВ на понятийном уровне, без погружения в техническую конкретику. Третья и четвертые части документа, «СМЭВ. » и «Приложения», повторяют изложенное в первых двух частях, но уже с целью дать конкретные и исчерпывающие пояснения относительно приёмов и способов использования СМЭВ.  
	Даны критерии разграничения зон ответственности систем ЕСНСИ и СМЭВ. Описано предназначение системы КТДА. Уточнены определения и взаимосвязи понятий, которые в предыдущих редакциях документа использовались для описания возможностей СМЭВ.  Введены новые понятия, которые необходимы для усвоения приёмов работы с вновь введённым в промышленную эксплуатацию функционалом СМЭВ. Добавлены новые и переработаны существующие иллюстративные материалы. 
Детальное описание изменений
Номер раздела в версии	Характер изменений
3.4.0.3	3.5.0.0	
1-2 	1-4	Внесены изменения
2.3.8	9	Перенос материала без существенных изменений
	5.1	Новый
3	5.2	Внесены изменения
3.7	5.3	Внесены изменения
4	6	Внесены изменения
5	7	Перенос материала без существенных изменений
6	8	Перенос материала без существенных изменений
7	10	Перенос материала без существенных изменений
8	11	Перенос материала без существенных изменений
Приложение №1 	Приложение №А	Перенос материала без существенных изменений
Приложение №2 	Приложение №Б	Перенос материала без существенных изменений
Приложение №3 	Приложение №В	Перенос материала без существенных изменений
Приложение №4	Приложение №Г	Внесены изменения
Приложение №5	Приложение №Д	Перенос материала без существенных изменений
Приложение №6	Приложение №Е	Перенос материала без существенных изменений
Приложение №7	Приложение №Ж	Перенос материала без существенных изменений
Приложение №8	Приложение №З	Перенос материала без существенных изменений
	Приложение №И	Новый
	Приложение №К	Новый
	Приложение №Л	Новый
	Приложение №М	Новый
	Приложение №Н	Новый

Изменения в версиях с №3.0.9.8 по №3.4.0.3
Версия	Дата	Автор	Комментарии
3.0.9.8	16.06.2015	Чернявский В.Е.	Обновлён глоссарий
Обновлены вложенные файлы схем СМЭВ.
Дополнен п.2.3.1.
Добавлен п. 2.3.6.
Дополнен п.3.2.1.
	17.06.2015	Анна Миронова	Исправлена нумерация таблиц, рисунков, а также ссылки на рисунки и таблицы по всему документу.
Исправлен абзац 2 п.2.1. 
Добавлен раздел «История документа».
3.0.9.8.1	23.06.2015	Чернявский В.Е.	Обновлена wsdl-схема СМЭВ (мелкое изменение)
3.0.9.8.2	19.10.2015	Чернявский В.Е.	Описание работы с Файловым хранилищем
3.1.0.0	19.10.2015	Чернявский В.Е.	Описание схемы 1.1*
Описание тега передачи кода ФРГУ
3.1.0.1	29.08.2016	Чернявский В.Е. 	Мелкие исправления в названиях схем (номера 1.2 на 1.1), более подробно описан элемент SmevFault, описано новое значение элемента RequestRejected (FAILURE), исправлены ошибки в диаграммах
3.2.0.0	15.09.2016	Чернявский В.Е.	Дополнения, описывающие новый функционал СМЭВ, внедрённый в 2016 году: а) Добавлен раздел №8 б) Откорректирован раздел 2.2 (перенесён в 3.6) в) Обновлена схема smev-message-exchange-types-1.1 г) Добавлены разделы 9 и 10, а также приложение 8.
3.3.0.0	30.11.2016	Чернявский В.Е.	Доработан раздел 2.6.3; Значительно доработан раздел 3 (доработаны схемы и описания к ним, добавлен раздел 3.6); Добавлен раздел 2.2.5 (Обмен справочными данными в составе сообщений по видам сведений в СМЭВ). Утратили актуальность и удалены разделы 2.5.3 и 2.5.4.
3.3.0.0	10.02.2017	Ковалев Р.С.	В п. 2.2.1 скорректировано толкование термина «вида сведений»; в п. 2.3.3 скорректировано толкование «широковещательных рассылок»; добавлен п. 2.3.4 «Реестровый вид сведений»; добавлен п. 3.8 «Структура сообщений с вложениями»
3.3.0.0	01.03.2017	Чернявский В.Е.	Уточнены формулировки п. 2.2.5
3.4.0.0	30.03.2017	Климова О.А., Ковалев Р.С.	Внесены дополнения в части описания возможных сеансов обмена между ответчиком и инициатором сведений в п. 2.3. «Типы сообщений»; добавлены ограничения на срок хранения сообщения в очереди (п.2.5, 2.6); добавлен п. 2.5.3 «Ограничения на частоту опроса очередей»; скорректирована редакция 1-ого абзаца п. 3.8. «Структура сообщения с вложениями»
3.4.0.1	08.08.2017	Григорьев С. В., Долгова М.С.	Уточнены формулировки в пп. 2.2.4, 2.3.6, 2.3.7, 4.1. В п.4.2.1 добавлено расширенное описание в части требований к ЭП, в случае подачи заявления на получение государственной услуги в электронном виде. Удалено описание процесса взаимодействия через системы – агрегаторы (п.7) в связи с дополнительной проработкой технологического решения на стороне ФРГУ.
3.4.0.2	25.09.2017	Климова О.А.	В п.2.5 увеличен срок хранения сообщений в очереди; в п.5 внесены изменения в части описания значения элемента FileName; Обновлены ссылки на государственный стандарт, определяющий требования к использованию функции хеширования. Добавлены раздел 11 (Проектирование xml-схем с помощью СМЭВ.КТДА) и подраздел 11.1 (Создание информационного ресурса)
3.4.0.3	20.11.2017	Ковалев Р.С.	•	В п.2.2.8 введено описание укороченного идентификатора ВС
•	В пп.3.2.2, 3.4.2 введено дополнительное пояснение, направленное на предотвращение практики использования MTOM без XOP оптимизации.
•	В таблице 7 п.4.5.3 введено уточнение относительно передачи элемента //SenderInformationSystemSignature при использовании различных версий Единого сервиса
•	В п.6.1 введено описание элементов статусного сообщения, содержащих сведения о факте постановки сообщения в очередь доставки ИС-получателя
•	Обновлён п.4.3. Добавлены ГОСТ по расчёту хеш-суммы и формированию подписи, поддержка которых будет осуществляться в 2018г.  
•	Обновлён п.п.3.6.1. Добавлено уточнение по значению элемента StatusCategory.


Приложение Л.	Заявка на публикацию справочника ЕСНСИ для проведения контроля ссылочной целостности передаваемых справочных данных

В Департамент развития цифрового государства
Министерства цифрового развития, связи и массовых коммуникаций Российской Федерации 


ЗАЯВКА	 	
	полное наименование Участника информационного взаимодействия в СМЭВ, краткое наименование Участника,
 	
мнемоника Участника

на публикацию справочника ЕСНСИ	 	                                                                                                                                                                                                                                                                                                           
	код, полное наименование справочника ЕСНСИ
 	
для проведения контроля ссылочной целостности передаваемых данных в продуктивной среде СМЭВ 3.Х
При необходимости получения консультативной помощи по данному справочнику, прошу обращаться к	 	
должность и контактные данные технического специалиста Инициатора запроса сведений
Уполномоченное должностное лицо	 	
	подпись, расшифровка подписи, дата


	М.П.

Приложение М.	Схемы единого сервиса СМЭВ3.Х
М.1.	Версия 1.1

Текущие схемы единого сервиса СМЭВ3.Х версии 1.1 представлены в следующих файлах:
1.  
2.  
3.  
4.  
При разработке Вида сведения необходимо использовать версию 1.2.

М.2.	Версия 1.2
Текущие схемы единого сервиса СМЭВ3.Х версии 1.2 представлены в следующих файлах:

1.	 
2.	 
3.	 
4.	 



М.3.	Версия 1.3
Текущие схемы единого сервиса СМЭВ3.Х версии 1.3 представлены в следующих файлах:

1.	 
2.	 
3.	 
4.	 
5.	 
6.	 

